2020-02-02 00:05:15,693 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:05:15,694 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,695 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:05:15,696 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:05:15,696 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:05:15,697 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,697 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:05:15,697 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:05:15,697 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:05:15,698 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,698 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:05:15,698 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:05:15,698 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:05:15,699 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,699 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:05:15,699 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:05:15,700 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:05:15,700 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,701 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:05:15,701 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,702 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:05:15,702 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:05:15,702 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:05:15,705 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:05:15,705 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:05:15,706 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:05:15,706 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:05:15,724 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:10:50,777 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:10:50,778 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,779 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:10:50,780 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:10:50,780 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:10:50,780 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,781 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:10:50,781 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:10:50,781 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:10:50,782 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,782 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:10:50,782 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:10:50,782 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:10:50,782 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,783 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:10:50,783 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:10:50,784 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:10:50,784 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,785 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:10:50,785 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,785 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:10:50,785 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:10:50,786 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:10:50,788 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:10:50,789 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:10:50,790 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:10:50,790 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:10:50,808 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:12:45,156 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:12:45,156 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,158 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:12:45,159 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:12:45,159 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:12:45,159 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,160 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:12:45,160 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:12:45,160 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:12:45,160 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,161 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:12:45,161 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:12:45,161 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:12:45,161 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,162 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:12:45,162 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:12:45,163 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:12:45,163 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,163 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:12:45,164 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,164 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:12:45,164 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:12:45,165 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:12:45,167 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:12:45,168 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:12:45,168 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:12:45,169 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:12:45,187 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:12:55,932 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-02-02 00:12:55,933 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:12:55,933 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-02-02 00:12:55,934 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:12:55,934 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:12:55,935 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-02-02 00:13:23,456 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:13:23,456 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,457 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:13:23,458 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:13:23,458 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:13:23,458 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,459 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:13:23,459 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:13:23,460 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:13:23,460 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,460 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:13:23,460 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:13:23,460 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:13:23,460 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,461 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:13:23,461 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:13:23,462 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:13:23,462 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,463 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:13:23,463 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,463 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:13:23,463 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:13:23,464 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:13:23,466 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:13:23,466 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:13:23,467 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:13:23,467 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:13:23,485 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:13:30,532 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-02-02 00:13:30,533 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:13:30,533 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-02-02 00:13:30,534 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:13:30,534 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:13:30,535 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-02-02 00:19:07,696 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:19:07,696 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,697 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:19:07,698 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:19:07,698 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:19:07,698 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,699 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:19:07,699 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:19:07,699 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:19:07,699 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,699 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:19:07,699 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:19:07,700 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:19:07,700 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,701 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:19:07,701 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:19:07,701 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:19:07,702 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,702 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:19:07,702 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,703 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:19:07,703 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:07,703 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:19:07,705 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:19:07,706 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:19:07,706 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:19:07,707 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:19:07,723 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:19:41,024 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:19:41,025 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,026 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:19:41,026 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:19:41,027 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:19:41,027 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,027 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:19:41,027 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:19:41,028 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:19:41,028 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,028 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:19:41,028 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:19:41,028 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:19:41,028 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,029 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:19:41,029 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:19:41,030 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:19:41,030 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,030 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:19:41,030 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,031 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:19:41,031 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:19:41,032 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:19:41,034 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:19:41,034 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:19:41,035 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:19:41,035 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:19:41,051 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:24:36,567 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:24:36,567 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,568 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:24:36,569 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:24:36,570 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:24:36,570 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,570 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:24:36,570 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:24:36,571 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:24:36,571 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,571 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:24:36,571 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:24:36,571 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:24:36,571 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,572 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:24:36,572 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:24:36,573 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:24:36,573 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,573 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:24:36,573 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,574 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:24:36,574 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:24:36,575 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:24:36,577 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:24:36,577 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:24:36,578 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:24:36,578 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:24:36,594 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:28:23,620 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:28:23,620 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,621 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:28:23,622 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:28:23,622 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:28:23,622 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,623 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:28:23,623 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:28:23,623 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:28:23,624 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,624 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:28:23,624 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:28:23,624 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:28:23,624 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,625 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:28:23,625 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:28:23,626 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:28:23,626 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,627 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:28:23,627 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,628 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:28:23,628 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:28:23,628 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:28:23,630 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:28:23,631 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:28:23,631 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:28:23,632 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:28:23,648 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:29:25,647 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:29:25,647 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,648 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:29:25,649 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:29:25,650 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:29:25,650 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,650 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:29:25,650 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:29:25,651 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:29:25,651 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,651 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:29:25,651 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:29:25,652 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:29:25,652 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,653 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:29:25,653 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:29:25,653 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:29:25,653 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,654 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:29:25,654 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,655 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:29:25,655 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:29:25,656 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:29:25,658 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:29:25,658 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:29:25,659 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:29:25,659 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:29:25,677 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:31:22,787 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:31:22,787 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:31:22,789 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:31:22,790 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:31:22,790 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,790 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:31:22,790 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:31:22,791 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:31:22,791 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:31:22,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:31:22,791 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:31:22,792 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:31:22,792 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:31:22,793 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:31:22,793 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,794 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:31:22,794 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,794 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:31:22,795 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:31:22,795 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:31:22,797 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-02 00:31:22,797 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-02-02 00:31:22,798 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,799 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,800 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,800 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:31:22,801 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-02 00:31:23,179 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:31:23,181 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:31:23,182 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:31:23,182 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:31:23,183 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:31:23,201 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:32:09,820 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:32:09,820 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,821 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:32:09,822 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:32:09,822 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:32:09,822 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,823 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:32:09,823 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:32:09,823 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:32:09,823 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,824 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:32:09,824 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:32:09,824 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:32:09,824 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,825 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:32:09,825 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:32:09,826 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:32:09,826 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,826 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:32:09,826 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,827 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:32:09,827 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:32:09,827 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:32:09,829 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:32:09,830 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:32:09,830 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:32:09,831 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:32:09,846 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:33:25,156 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:33:25,156 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,157 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:33:25,158 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:33:25,158 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:33:25,158 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:33:25,159 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:33:25,159 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:33:25,159 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,160 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:33:25,160 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:33:25,160 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:33:25,160 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,161 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:33:25,161 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:33:25,162 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:33:25,162 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,163 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:33:25,163 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,163 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:33:25,164 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:33:25,164 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:33:25,168 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked, datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1, datesofinterest AS datesofinterest_1 
WHERE anon_1.locked = %s
2020-02-02 00:33:25,168 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-02 00:33:25,172 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked', 'datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap')
2020-02-02 00:33:25,172 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,173 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:33:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,180 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,181 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,181 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:33:25,181 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,730 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:34:08,731 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,732 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:34:08,732 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:34:08,733 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:34:08,733 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,733 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:34:08,734 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:34:08,734 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:34:08,734 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,734 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:34:08,734 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:34:08,735 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:34:08,735 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,735 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:34:08,735 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:34:08,736 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:34:08,736 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,737 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:34:08,737 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,737 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:34:08,737 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:34:08,738 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:34:08,741 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked, datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1, datesofinterest AS datesofinterest_1 
WHERE anon_1.locked = %s
2020-02-02 00:34:08,741 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-02 00:34:08,744 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked', 'datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap')
2020-02-02 00:34:08,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,752 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,753 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:08,760 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-02 00:34:09,236 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:34:09,238 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:09,238 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:34:09,239 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:09,239 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:09,256 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:34:55,685 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-02-02 00:34:55,692 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 00:34:55,692 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-02-02 00:34:55,695 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 00:34:55,695 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 00:34:55,695 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 00:34:55,698 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:55,698 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-02-02 00:34:55,698 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:55,699 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:55,756 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:34:55,757 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-02-02 00:34:55,757 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:55,757 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:55,759 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-02-02 00:34:56,340 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-02-02 00:34:56,341 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:56,343 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-02-02 00:34:56,344 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:56,345 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:56,346 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-02 00:34:56,347 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:56,348 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-02 00:34:56,348 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-02-02 00:34:56,348 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-02 00:34:56,350 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:56,351 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-02 00:34:56,351 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:56,351 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:56,350 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-02-02 00:34:56,352 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:56,353 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-02 00:34:56,354 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:56,354 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:56,354 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-02-02 00:34:56,355 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-02 00:34:56,357 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:56,357 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:56,358 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-02-02 00:34:56,546 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-02-02 00:34:56,547 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:34:56,547 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-02-02 00:34:56,547 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:34:56,548 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:34:56,549 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-02-02 00:34:56,583 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-02-02 00:34:56,585 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked, datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1, datesofinterest AS datesofinterest_1 
WHERE anon_1.locked = %s
2020-02-02 00:34:56,585 INFO sqlalchemy.engine.base.Engine Thread-17 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:34:56,587 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked', 'datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap')
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,588 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-02-02 00:34:56,589 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,591 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 17, 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,591 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,591 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,591 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:34:56,594 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-02-02 00:36:23,825 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:36:23,825 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,826 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:36:23,827 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:36:23,827 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:36:23,827 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,828 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:36:23,828 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:36:23,828 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:36:23,828 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,829 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:36:23,829 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:36:23,829 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:36:23,829 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,830 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:36:23,830 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:36:23,831 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:36:23,831 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,832 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:36:23,832 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,832 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:36:23,832 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:36:23,833 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:36:23,835 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:23,836 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,837 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:23,839 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-02 00:36:24,173 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:36:24,176 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:24,176 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:36:24,177 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:24,177 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:24,197 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:36:31,353 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-02-02 00:36:31,361 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 00:36:31,361 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-02-02 00:36:31,362 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 00:36:31,363 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 00:36:31,363 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 00:36:31,365 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:31,365 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-02-02 00:36:31,366 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:31,366 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:31,430 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:36:31,431 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-02-02 00:36:31,431 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:31,432 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:31,433 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-02-02 00:36:31,995 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-02-02 00:36:31,997 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:31,997 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-02-02 00:36:31,998 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:31,998 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:32,001 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-02-02 00:36:32,006 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-02 00:36:32,007 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-02 00:36:32,008 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:32,010 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:32,010 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-02 00:36:32,010 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-02 00:36:32,013 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-02-02 00:36:32,015 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:32,016 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-02-02 00:36:32,016 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:32,014 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:32,016 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:32,016 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:32,017 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:32,018 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-02 00:36:32,019 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-02 00:36:32,019 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:32,020 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-02-02 00:36:32,091 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-02-02 00:36:32,092 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:32,092 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-02-02 00:36:32,093 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:32,093 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:32,094 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-02-02 00:36:32,136 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-02-02 00:36:32,138 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:32,138 INFO sqlalchemy.engine.base.Engine Thread-17 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:36:32,139 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:32,140 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:32,140 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:32,140 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:32,141 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-02-02 00:36:39,456 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-02-02 00:36:39,458 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:39,458 INFO sqlalchemy.engine.base.Engine Thread-19 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'Yes')
2020-02-02 00:36:39,459 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:39,459 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:39,459 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:39,460 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-02-02 00:36:40,445 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-02-02 00:36:40,448 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:40,448 INFO sqlalchemy.engine.base.Engine Thread-20 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'Yes')
2020-02-02 00:36:40,449 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:40,449 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:40,450 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-02-02 00:36:41,272 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-02-02 00:36:41,274 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:41,274 INFO sqlalchemy.engine.base.Engine Thread-21 : ('LightBlue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'Yes')
2020-02-02 00:36:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:41,275 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:41,276 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-02-02 00:36:41,935 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-02-02 00:36:41,937 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:41,937 INFO sqlalchemy.engine.base.Engine Thread-22 : ('LightBlue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'Yes')
2020-02-02 00:36:41,938 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:41,938 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-02-02 00:36:42,406 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-02-02 00:36:42,409 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:42,409 INFO sqlalchemy.engine.base.Engine Thread-23 : ('LightBlue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'Yes')
2020-02-02 00:36:42,410 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:42,410 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:42,411 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-02-02 00:36:46,522 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-02-02 00:36:46,524 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:46,524 INFO sqlalchemy.engine.base.Engine Thread-24 : ('LightBlue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'Yes')
2020-02-02 00:36:46,525 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:46,526 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-02-02 00:36:48,342 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-02-02 00:36:48,344 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:36:48,344 INFO sqlalchemy.engine.base.Engine Thread-25 : ('LightBlue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'Yes')
2020-02-02 00:36:48,345 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:36:48,346 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-02 00:36:48,346 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-02-02 00:36:50,677 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-02-02 00:36:50,678 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:50,679 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-02-02 00:36:50,679 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:50,680 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:50,682 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:36:50,682 INFO sqlalchemy.engine.base.Engine Thread-26 : ('philip', 1, 1)
2020-02-02 00:36:50,683 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:50,683 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:50,693 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 00:36:50,694 INFO sqlalchemy.engine.base.Engine Thread-26 : ()
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,695 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,696 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,696 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:36:50,696 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:36:50,696 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:36:50,712 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:36:50,712 INFO sqlalchemy.engine.base.Engine Thread-26 : ('philip', 1, 1)
2020-02-02 00:36:50,713 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:50,713 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:50,716 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-02-02 00:36:51,298 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-02-02 00:36:51,299 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:51,301 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-02-02 00:36:51,305 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:51,306 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:51,307 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-02-02 00:36:51,308 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-02-02 00:36:51,313 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-02-02 00:36:51,318 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:51,316 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:51,318 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-02-02 00:36:51,318 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-02-02 00:36:51,319 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:51,319 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-02-02 00:36:51,321 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:51,320 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:51,321 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-02-02 00:36:51,320 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:51,323 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-02-02 00:36:51,323 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:51,323 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:51,325 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:51,327 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-02-02 00:36:51,325 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-02-02 00:36:51,398 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-02-02 00:36:51,399 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:51,399 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-02-02 00:36:51,400 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:51,400 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:51,402 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-02-02 00:36:58,567 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-02-02 00:36:58,568 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:58,568 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-02-02 00:36:58,569 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:58,569 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:58,572 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:36:58,572 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-02-02 00:36:58,573 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:58,573 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:58,575 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-02 00:36:58,575 INFO sqlalchemy.engine.base.Engine Thread-39 : ('15', 1)
2020-02-02 00:36:58,576 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-02 00:36:58,576 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:36:58,580 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 00:36:58,580 INFO sqlalchemy.engine.base.Engine Thread-39 : (82,)
2020-02-02 00:36:58,581 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:36:58,581 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-02 00:36:58,581 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-02 00:36:58,581 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-02 00:36:58,582 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-02 00:36:58,583 INFO sqlalchemy.engine.base.Engine Thread-39 : (1,)
2020-02-02 00:36:58,583 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:36:58,583 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-02 00:36:58,583 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-02 00:36:58,585 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 00:36:58,585 INFO sqlalchemy.engine.base.Engine Thread-39 : (105,)
2020-02-02 00:36:58,585 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:36:58,586 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 00:36:58,586 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 00:36:58,587 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 00:36:58,587 INFO sqlalchemy.engine.base.Engine Thread-39 : (105,)
2020-02-02 00:36:58,588 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:36:58,588 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 00:36:58,588 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 00:36:58,624 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:36:58,624 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-02-02 00:36:58,625 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:58,625 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:58,628 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-02-02 00:36:59,193 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-02-02 00:36:59,195 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:59,195 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-02-02 00:36:59,196 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-02-02 00:36:59,197 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:59,202 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:59,202 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:59,200 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-02-02 00:36:59,203 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-02-02 00:36:59,208 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-02-02 00:36:59,205 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:59,209 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:59,210 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-02-02 00:36:59,210 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:59,210 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:59,204 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-02-02 00:36:59,210 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-02-02 00:36:59,212 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-02-02 00:36:59,213 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:59,213 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:59,215 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:59,215 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:59,216 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-02-02 00:36:59,217 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-02-02 00:36:59,290 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-02-02 00:36:59,291 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:36:59,291 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-02-02 00:36:59,291 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:36:59,292 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:36:59,293 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-02-02 00:37:02,520 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-02-02 00:37:02,521 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:02,521 INFO sqlalchemy.engine.base.Engine Thread-52 : (1, 1)
2020-02-02 00:37:02,522 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:02,522 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:02,525 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:37:02,525 INFO sqlalchemy.engine.base.Engine Thread-52 : ('philip', 1, 1)
2020-02-02 00:37:02,526 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:02,526 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:02,527 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-02 00:37:02,527 INFO sqlalchemy.engine.base.Engine Thread-52 : ('15', 1)
2020-02-02 00:37:02,528 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-02 00:37:02,528 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (15, 'Summer Change Freeze', 83, 'Summer Change Freeze', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 00:37:02,532 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 00:37:02,532 INFO sqlalchemy.engine.base.Engine Thread-52 : (82,)
2020-02-02 00:37:02,533 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:37:02,533 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-02 00:37:02,533 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-02 00:37:02,533 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-02 00:37:02,535 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-02 00:37:02,535 INFO sqlalchemy.engine.base.Engine Thread-52 : (1,)
2020-02-02 00:37:02,536 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:37:02,536 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-02 00:37:02,536 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-02 00:37:02,538 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 00:37:02,538 INFO sqlalchemy.engine.base.Engine Thread-52 : (105,)
2020-02-02 00:37:02,538 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:37:02,539 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 00:37:02,539 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 00:37:02,540 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 00:37:02,540 INFO sqlalchemy.engine.base.Engine Thread-52 : (105,)
2020-02-02 00:37:02,540 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 00:37:02,541 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 00:37:02,541 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 00:37:02,545 INFO sqlalchemy.engine.base.Engine Thread-52 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_locked=%s WHERE datesofinterest.id = %s
2020-02-02 00:37:02,545 INFO sqlalchemy.engine.base.Engine Thread-52 : ('15', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 107, 15)
2020-02-02 00:37:02,547 INFO sqlalchemy.engine.base.Engine Thread-52 : COMMIT
2020-02-02 00:37:02,702 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-02-02 00:37:02,703 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:02,703 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-02-02 00:37:02,704 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:02,704 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:02,707 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:37:02,707 INFO sqlalchemy.engine.base.Engine Thread-53 : ('philip', 1, 1)
2020-02-02 00:37:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:02,716 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 00:37:02,717 INFO sqlalchemy.engine.base.Engine Thread-53 : ()
2020-02-02 00:37:02,717 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:37:02,718 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:37:02,719 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 00:37:02,719 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 00:37:02,723 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:37:02,723 INFO sqlalchemy.engine.base.Engine Thread-53 : ('philip', 1, 1)
2020-02-02 00:37:02,724 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:02,724 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:02,728 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-02-02 00:37:03,362 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-02-02 00:37:03,365 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:03,365 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-02-02 00:37:03,367 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-02-02 00:37:03,368 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:03,369 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-02-02 00:37:03,369 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:03,369 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:03,370 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:03,371 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-02-02 00:37:03,373 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:03,374 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-02-02 00:37:03,376 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:03,376 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-02-02 00:37:03,378 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-02-02 00:37:03,380 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-02-02 00:37:03,381 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:03,381 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-02-02 00:37:03,382 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:03,383 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:03,384 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:03,384 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:03,386 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-02-02 00:37:03,387 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-02-02 00:37:03,494 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-02-02 00:37:03,495 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:03,495 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-02-02 00:37:03,495 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:03,496 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:03,497 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-02-02 00:37:04,413 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-02-02 00:37:04,415 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 00:37:04,415 INFO sqlalchemy.engine.base.Engine Thread-66 : ()
2020-02-02 00:37:04,417 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 00:37:04,417 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 00:37:04,418 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 00:37:04,420 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:04,420 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-02-02 00:37:04,421 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:04,421 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:04,425 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:37:04,425 INFO sqlalchemy.engine.base.Engine Thread-66 : ('philip', 1, 1)
2020-02-02 00:37:04,426 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:04,426 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:04,428 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-02-02 00:37:04,939 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-02-02 00:37:04,940 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:04,940 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-02-02 00:37:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:04,941 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:04,943 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-02-02 00:37:04,946 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-02-02 00:37:04,947 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:04,947 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-02-02 00:37:04,948 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:04,952 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-02-02 00:37:04,952 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:04,956 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-02-02 00:37:04,957 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:04,959 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:04,960 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-02-02 00:37:04,960 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-02-02 00:37:04,960 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-02-02 00:37:04,961 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:04,961 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:04,962 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-02-02 00:37:04,963 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:04,964 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:04,965 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-02-02 00:37:05,060 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-02-02 00:37:05,061 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:05,061 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-02-02 00:37:05,062 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:05,062 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:05,063 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-02-02 00:37:05,097 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-02-02 00:37:05,099 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:05,099 INFO sqlalchemy.engine.base.Engine Thread-79 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:37:05,100 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:05,100 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:05,100 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:05,100 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:05,101 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-02-02 00:37:06,164 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-02-02 00:37:06,167 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:06,167 INFO sqlalchemy.engine.base.Engine Thread-80 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'Yes')
2020-02-02 00:37:06,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:06,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:06,168 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:06,169 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-02-02 00:37:06,796 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-02-02 00:37:06,798 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:06,798 INFO sqlalchemy.engine.base.Engine Thread-81 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'Yes')
2020-02-02 00:37:06,799 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:06,799 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:06,800 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-02-02 00:37:07,086 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-02-02 00:37:07,088 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:07,088 INFO sqlalchemy.engine.base.Engine Thread-82 : ('LightBlue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'Yes')
2020-02-02 00:37:07,089 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:07,089 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:07,090 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:07,090 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-02-02 00:37:07,337 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-02-02 00:37:07,341 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:07,342 INFO sqlalchemy.engine.base.Engine Thread-83 : ('LightBlue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'Yes')
2020-02-02 00:37:07,342 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:07,343 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-02-02 00:37:07,591 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-02-02 00:37:07,593 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:07,593 INFO sqlalchemy.engine.base.Engine Thread-84 : ('LightBlue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'Yes')
2020-02-02 00:37:07,594 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:07,595 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-02-02 00:37:34,354 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-02-02 00:37:34,356 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:37:34,356 INFO sqlalchemy.engine.base.Engine Thread-85 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-02 00:37:34,357 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked')
2020-02-02 00:37:34,358 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:34,358 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:34,358 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:34,358 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:34,358 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:34,358 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-02 00:37:34,359 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-02-02 00:37:34,728 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-02-02 00:37:34,729 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:37:34,729 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-02-02 00:37:34,730 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:37:34,730 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:37:34,731 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-02-02 00:38:55,062 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:38:55,062 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,064 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:38:55,064 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:38:55,065 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:38:55,065 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,065 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:38:55,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:38:55,066 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:38:55,066 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:38:55,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:38:55,067 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:38:55,067 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,068 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:38:55,068 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:38:55,068 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:38:55,068 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,069 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:38:55,069 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,070 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:38:55,070 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:38:55,070 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:38:55,073 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.`backgroundColor` AS `anon_1_backgroundColor`, anon_1.`textColor` AS `anon_1_textColor`, anon_1.locked AS anon_1_locked, %s AS `borderColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:38:55,073 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', 'LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-02 00:38:55,074 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_backgroundColor', 'anon_1_textColor', 'anon_1_locked', 'borderColor')
2020-02-02 00:38:55,074 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes', 'red')
2020-02-02 00:38:55,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes', 'red')
2020-02-02 00:38:55,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes', 'red')
2020-02-02 00:38:55,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes', 'red')
2020-02-02 00:38:55,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes', 'red')
2020-02-02 00:38:55,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes', 'red')
2020-02-02 00:38:55,077 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-02 00:38:55,466 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:38:55,469 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:38:55,469 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:38:55,470 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:38:55,470 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:38:55,488 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:43:04,231 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:43:04,232 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,233 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:43:04,234 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:43:04,235 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:43:04,235 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,235 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:43:04,236 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:43:04,236 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:43:04,236 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,236 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:43:04,236 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:43:04,237 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:43:04,237 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,238 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:43:04,238 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:43:04,238 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:43:04,239 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,239 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:43:04,239 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,240 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:43:04,240 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:43:04,241 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:43:04,243 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:04,243 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:43:04,244 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:04,245 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:04,264 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:43:23,946 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:43:23,946 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,947 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:43:23,948 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:43:23,948 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:43:23,948 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,949 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:43:23,949 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:43:23,949 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:43:23,949 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,950 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:43:23,950 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:43:23,950 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:43:23,950 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,951 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:43:23,951 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:43:23,952 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:43:23,952 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,952 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:43:23,953 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,953 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:43:23,953 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:43:23,954 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:43:23,956 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:23,956 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-02 00:43:23,957 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:23,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:23,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:23,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:23,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:23,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:23,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:23,962 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:23,962 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'No')
2020-02-02 00:43:23,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:23,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:43:23,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 00:43:23,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'black')
2020-02-02 00:43:23,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No', 'Lightblue', 'black')
2020-02-02 00:43:23,964 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'black')
2020-02-02 00:43:23,965 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-02 00:43:24,332 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:43:24,334 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:24,335 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:43:24,336 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:24,336 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:24,353 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:43:33,600 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-02-02 00:43:33,606 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 00:43:33,607 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-02-02 00:43:33,608 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 00:43:33,608 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 00:43:33,608 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 00:43:33,610 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:33,610 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-02-02 00:43:33,611 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:33,611 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:33,668 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:43:33,668 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-02-02 00:43:33,669 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:33,669 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:33,671 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-02-02 00:43:34,354 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-02-02 00:43:34,356 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:34,356 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-02-02 00:43:34,359 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:34,359 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:34,359 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-02 00:43:34,362 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:34,363 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-02 00:43:34,361 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-02 00:43:34,360 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-02-02 00:43:34,365 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:34,365 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:34,365 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:34,366 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-02 00:43:34,367 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-02-02 00:43:34,368 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:34,368 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-02-02 00:43:34,369 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-02 00:43:34,369 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:34,370 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:34,371 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-02 00:43:34,371 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:34,371 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:34,373 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-02-02 00:43:34,444 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-02-02 00:43:34,445 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:34,445 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-02-02 00:43:34,446 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:34,446 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:34,447 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-02-02 00:43:34,480 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-02-02 00:43:34,482 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:34,482 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:43:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:34,486 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:34,486 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'No')
2020-02-02 00:43:34,487 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:34,487 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:43:34,488 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-02-02 00:43:41,740 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-02-02 00:43:41,742 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:41,742 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'Yes')
2020-02-02 00:43:41,743 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:41,743 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:41,743 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:41,747 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:41,747 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'No')
2020-02-02 00:43:41,748 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:41,748 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:43:41,749 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-02-02 00:43:43,030 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-02-02 00:43:43,031 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:43,032 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'Yes')
2020-02-02 00:43:43,033 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:43,033 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:43,036 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:43,036 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'No')
2020-02-02 00:43:43,037 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:43,037 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 00:43:43,038 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-02-02 00:43:43,521 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-02-02 00:43:43,523 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:43,523 INFO sqlalchemy.engine.base.Engine Thread-21 : ('Salmon', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'Yes')
2020-02-02 00:43:43,524 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:43,524 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:43,524 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:43,527 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:43,527 INFO sqlalchemy.engine.base.Engine Thread-21 : ('Lightblue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'No')
2020-02-02 00:43:43,528 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:43,529 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-02-02 00:43:44,150 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-02-02 00:43:44,152 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:44,152 INFO sqlalchemy.engine.base.Engine Thread-22 : ('Salmon', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'Yes')
2020-02-02 00:43:44,153 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:44,156 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:44,156 INFO sqlalchemy.engine.base.Engine Thread-22 : ('Lightblue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'No')
2020-02-02 00:43:44,157 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:44,158 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-02-02 00:43:44,686 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-02-02 00:43:44,687 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:44,688 INFO sqlalchemy.engine.base.Engine Thread-23 : ('Salmon', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'Yes')
2020-02-02 00:43:44,688 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:44,691 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:44,692 INFO sqlalchemy.engine.base.Engine Thread-23 : ('Lightblue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'No')
2020-02-02 00:43:44,692 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:44,692 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'black')
2020-02-02 00:43:44,693 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-02-02 00:43:49,714 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-02-02 00:43:49,716 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:49,716 INFO sqlalchemy.engine.base.Engine Thread-24 : ('Salmon', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'Yes')
2020-02-02 00:43:49,717 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:49,720 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:49,720 INFO sqlalchemy.engine.base.Engine Thread-24 : ('Lightblue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'No')
2020-02-02 00:43:49,721 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:49,722 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-02-02 00:43:50,119 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-02-02 00:43:50,121 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:50,121 INFO sqlalchemy.engine.base.Engine Thread-25 : ('Salmon', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'Yes')
2020-02-02 00:43:50,122 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:50,122 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:50,122 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:50,126 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:50,126 INFO sqlalchemy.engine.base.Engine Thread-25 : ('Lightblue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'No')
2020-02-02 00:43:50,127 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:50,128 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-02-02 00:43:50,375 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-02-02 00:43:50,377 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:50,377 INFO sqlalchemy.engine.base.Engine Thread-26 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'Yes')
2020-02-02 00:43:50,378 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:50,378 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:50,382 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:50,382 INFO sqlalchemy.engine.base.Engine Thread-26 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'No')
2020-02-02 00:43:50,383 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:50,383 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 00:43:50,384 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-02-02 00:43:50,882 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-02-02 00:43:50,884 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:50,884 INFO sqlalchemy.engine.base.Engine Thread-27 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'Yes')
2020-02-02 00:43:50,885 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:50,885 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:50,885 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:50,888 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:50,889 INFO sqlalchemy.engine.base.Engine Thread-27 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'No')
2020-02-02 00:43:50,889 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:50,890 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:43:50,890 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-02-02 00:43:53,325 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-02-02 00:43:53,327 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 00:43:53,327 INFO sqlalchemy.engine.base.Engine Thread-28 : ()
2020-02-02 00:43:53,331 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 00:43:53,331 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 00:43:53,331 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 00:43:53,333 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:53,333 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-02-02 00:43:53,334 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:53,334 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:53,338 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:43:53,338 INFO sqlalchemy.engine.base.Engine Thread-28 : ('philip', 1, 1)
2020-02-02 00:43:53,339 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:53,339 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:53,340 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-02-02 00:43:53,995 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-02-02 00:43:53,996 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:53,996 INFO sqlalchemy.engine.base.Engine Thread-36 : (1, 1)
2020-02-02 00:43:53,996 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:53,997 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:53,998 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-02-02 00:43:54,002 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-02-02 00:43:54,004 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:54,005 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-02-02 00:43:54,008 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:54,008 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:54,009 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-02-02 00:43:54,011 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-02-02 00:43:54,013 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:54,012 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-02-02 00:43:54,014 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-02-02 00:43:54,016 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:54,016 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-02-02 00:43:54,017 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:54,017 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:54,018 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:54,019 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-02-02 00:43:54,019 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:54,021 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-02-02 00:43:54,105 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-02-02 00:43:54,106 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:43:54,106 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-02-02 00:43:54,107 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:43:54,107 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:43:54,108 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-02-02 00:43:54,140 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-02-02 00:43:54,142 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:54,142 INFO sqlalchemy.engine.base.Engine Thread-41 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:43:54,143 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:54,143 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:54,143 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:54,143 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:43:54,147 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:43:54,147 INFO sqlalchemy.engine.base.Engine Thread-41 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'No')
2020-02-02 00:43:54,147 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:43:54,148 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:43:54,148 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-02-02 00:44:26,547 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-02-02 00:44:26,549 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:26,549 INFO sqlalchemy.engine.base.Engine Thread-43 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'Yes')
2020-02-02 00:44:26,550 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:26,551 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:26,551 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:26,554 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:26,554 INFO sqlalchemy.engine.base.Engine Thread-43 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'No')
2020-02-02 00:44:26,555 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:26,555 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:44:26,556 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-02-02 00:44:27,287 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-02-02 00:44:27,289 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:27,289 INFO sqlalchemy.engine.base.Engine Thread-44 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:44:27,290 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:27,291 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:27,291 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:27,291 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:27,295 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:27,295 INFO sqlalchemy.engine.base.Engine Thread-44 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'No')
2020-02-02 00:44:27,296 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:27,296 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:44:27,297 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-02-02 00:44:29,401 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-02-02 00:44:29,402 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:29,402 INFO sqlalchemy.engine.base.Engine Thread-45 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'Yes')
2020-02-02 00:44:29,404 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:29,404 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:29,404 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:29,407 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:29,407 INFO sqlalchemy.engine.base.Engine Thread-45 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'No')
2020-02-02 00:44:29,408 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:29,408 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:44:29,409 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-02-02 00:44:29,837 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-02-02 00:44:29,838 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:29,838 INFO sqlalchemy.engine.base.Engine Thread-46 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'Yes')
2020-02-02 00:44:29,840 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:29,841 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:29,844 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:29,844 INFO sqlalchemy.engine.base.Engine Thread-46 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'No')
2020-02-02 00:44:29,845 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:29,845 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 00:44:29,846 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-02-02 00:44:30,249 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-02-02 00:44:30,251 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:30,251 INFO sqlalchemy.engine.base.Engine Thread-47 : ('Salmon', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'Yes')
2020-02-02 00:44:30,252 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:30,252 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:30,252 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:30,256 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:30,256 INFO sqlalchemy.engine.base.Engine Thread-47 : ('Lightblue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'No')
2020-02-02 00:44:30,257 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:30,258 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-02-02 00:44:30,739 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-02-02 00:44:30,740 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:30,741 INFO sqlalchemy.engine.base.Engine Thread-48 : ('Salmon', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'Yes')
2020-02-02 00:44:30,741 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:30,745 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:30,745 INFO sqlalchemy.engine.base.Engine Thread-48 : ('Lightblue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'No')
2020-02-02 00:44:30,746 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:30,746 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-02-02 00:44:31,250 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-02-02 00:44:31,252 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:31,252 INFO sqlalchemy.engine.base.Engine Thread-49 : ('Salmon', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'Yes')
2020-02-02 00:44:31,253 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:31,256 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:31,256 INFO sqlalchemy.engine.base.Engine Thread-49 : ('Lightblue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), 'No')
2020-02-02 00:44:31,257 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:31,258 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'black')
2020-02-02 00:44:31,258 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-02-02 00:44:31,867 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-02-02 00:44:31,869 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:31,869 INFO sqlalchemy.engine.base.Engine Thread-50 : ('Salmon', 'black', datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), 'Yes')
2020-02-02 00:44:31,870 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:31,874 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:31,874 INFO sqlalchemy.engine.base.Engine Thread-50 : ('Lightblue', 'black', datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), 'No')
2020-02-02 00:44:31,875 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:31,876 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-02-02 00:44:32,435 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-02-02 00:44:32,437 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:32,437 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Salmon', 'black', datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), 'Yes')
2020-02-02 00:44:32,438 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:32,442 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:32,442 INFO sqlalchemy.engine.base.Engine Thread-51 : ('Lightblue', 'black', datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), 'No')
2020-02-02 00:44:32,443 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:32,444 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-02-02 00:44:33,051 INFO sqlalchemy.engine.base.Engine Thread-52 : BEGIN (implicit)
2020-02-02 00:44:33,052 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:33,052 INFO sqlalchemy.engine.base.Engine Thread-52 : ('Salmon', 'black', datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), 'Yes')
2020-02-02 00:44:33,053 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:33,056 INFO sqlalchemy.engine.base.Engine Thread-52 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:33,057 INFO sqlalchemy.engine.base.Engine Thread-52 : ('Lightblue', 'black', datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), 'No')
2020-02-02 00:44:33,057 DEBUG sqlalchemy.engine.base.Engine Thread-52 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:33,058 INFO sqlalchemy.engine.base.Engine Thread-52 : ROLLBACK
2020-02-02 00:44:33,734 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-02-02 00:44:33,736 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:33,736 INFO sqlalchemy.engine.base.Engine Thread-53 : ('Salmon', 'black', datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), 'Yes')
2020-02-02 00:44:33,737 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:33,740 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:33,740 INFO sqlalchemy.engine.base.Engine Thread-53 : ('Lightblue', 'black', datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), 'No')
2020-02-02 00:44:33,741 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:33,742 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-02-02 00:44:34,282 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-02-02 00:44:34,284 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:34,284 INFO sqlalchemy.engine.base.Engine Thread-54 : ('Salmon', 'black', datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), 'Yes')
2020-02-02 00:44:34,285 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:34,285 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:34,288 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:34,288 INFO sqlalchemy.engine.base.Engine Thread-54 : ('Lightblue', 'black', datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), 'No')
2020-02-02 00:44:34,289 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:34,289 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'black')
2020-02-02 00:44:34,289 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No', 'Lightblue', 'black')
2020-02-02 00:44:34,290 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-02-02 00:44:37,692 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-02-02 00:44:37,694 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:37,694 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'Yes')
2020-02-02 00:44:37,695 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:37,695 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:37,695 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:37,695 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:44:37,698 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE anon_1.locked = %s
2020-02-02 00:44:37,699 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'No')
2020-02-02 00:44:37,699 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:44:37,699 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:44:37,700 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-02-02 00:51:45,737 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:51:45,738 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,739 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:51:45,740 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-02 00:51:45,741 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:51:45,741 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,741 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-02 00:51:45,741 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-02 00:51:45,742 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-02 00:51:45,742 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,742 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-02 00:51:45,742 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-02 00:51:45,743 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:51:45,743 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,744 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:51:45,744 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:51:45,745 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:51:45,745 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,745 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:51:45,746 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,746 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:51:45,746 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-02 00:51:45,747 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:51:45,750 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:51:45,750 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:51:45,751 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:51:45,751 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:51:45,770 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:53:04,653 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-02 00:53:04,654 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,655 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:53:04,655 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-02 00:53:04,656 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-02 00:53:04,656 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,657 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-02 00:53:04,657 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-02 00:53:04,657 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-02 00:53:04,657 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,657 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-02 00:53:04,658 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-02 00:53:04,658 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-02 00:53:04,658 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-02 00:53:04,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-02 00:53:04,660 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-02 00:53:04,660 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,660 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-02 00:53:04,660 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,661 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-02 00:53:04,661 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-02 00:53:04,662 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-02 00:53:04,664 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 00:53:04,664 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'YES')
2020-02-02 00:53:04,666 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:53:04,666 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:53:04,666 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:53:04,666 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 00:53:04,667 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:53:04,667 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:53:04,667 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:53:04,671 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 00:53:04,671 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'NO')
2020-02-02 00:53:04,672 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:53:04,672 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:53:04,672 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 00:53:04,672 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'black')
2020-02-02 00:53:04,673 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No', 'Lightblue', 'black')
2020-02-02 00:53:04,673 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'black')
2020-02-02 00:53:04,675 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-02 00:53:05,092 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-02 00:53:05,095 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:53:05,095 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-02 00:53:05,096 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:53:05,097 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:53:05,116 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-02 00:54:15,464 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-02-02 00:54:15,470 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 00:54:15,470 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-02-02 00:54:15,472 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 00:54:15,472 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 00:54:15,472 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 00:54:15,474 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:54:15,474 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-02-02 00:54:15,475 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:15,475 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:15,537 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 00:54:15,537 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-02-02 00:54:15,538 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:15,538 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:15,540 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-02-02 00:54:16,249 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-02 00:54:16,251 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:54:16,251 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-02 00:54:16,252 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:16,252 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:16,255 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-02 00:54:16,257 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-02-02 00:54:16,258 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:54:16,258 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-02-02 00:54:16,259 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-02 00:54:16,260 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:54:16,260 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-02 00:54:16,260 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:16,261 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:16,264 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:16,264 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-02-02 00:54:16,263 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:16,265 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-02 00:54:16,266 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:54:16,267 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-02-02 00:54:16,268 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-02-02 00:54:16,269 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:16,270 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:16,271 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-02-02 00:54:16,372 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-02-02 00:54:16,373 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 00:54:16,373 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-02-02 00:54:16,374 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 00:54:16,374 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 00:54:16,375 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-02-02 00:54:16,399 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-02-02 00:54:16,400 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 00:54:16,400 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 00:54:16,402 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:54:16,402 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 00:54:16,402 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 00:54:16,402 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 00:54:16,406 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 00:54:16,406 INFO sqlalchemy.engine.base.Engine Thread-17 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 00:54:16,407 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 00:54:16,407 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 00:54:16,408 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-02-02 23:24:17,324 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-02-02 23:24:17,326 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:24:17,326 INFO sqlalchemy.engine.base.Engine Thread-30 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:24:17,328 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:24:17,328 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:24:17,328 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:24:17,331 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:24:17,331 INFO sqlalchemy.engine.base.Engine Thread-30 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:24:17,332 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:24:17,333 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:24:17,334 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-02-02 23:24:18,116 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-02-02 23:24:18,117 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:24:18,117 INFO sqlalchemy.engine.base.Engine Thread-31 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:24:18,118 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:24:18,118 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:24:18,118 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:24:18,119 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:24:18,122 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:24:18,122 INFO sqlalchemy.engine.base.Engine Thread-31 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:24:18,122 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:24:18,123 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:24:18,123 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-02-02 23:25:33,231 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-02-02 23:25:33,233 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:25:33,233 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-02-02 23:25:33,234 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:25:33,235 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:25:33,235 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:25:33,237 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:25:33,237 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-02-02 23:25:33,237 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,238 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,242 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:25:33,242 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-02-02 23:25:33,243 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,243 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,244 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-02-02 23:25:33,769 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-02-02 23:25:33,771 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-02-02 23:25:33,772 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:25:33,774 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-02-02 23:25:33,775 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:25:33,778 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-02-02 23:25:33,778 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:25:33,780 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-02-02 23:25:33,777 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-02-02 23:25:33,780 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,779 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-02-02 23:25:33,781 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,781 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,782 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:25:33,784 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-02-02 23:25:33,785 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-02-02 23:25:33,785 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,786 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,785 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-02-02 23:25:33,787 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-02-02 23:25:33,789 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,789 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,791 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-02-02 23:25:33,965 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-02-02 23:25:33,966 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:25:33,966 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-02-02 23:25:33,967 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:25:33,967 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:25:33,968 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-02-02 23:25:34,008 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-02-02 23:25:34,010 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:25:34,010 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:25:34,011 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:25:34,011 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:25:34,011 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:25:34,011 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:25:34,015 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:25:34,015 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:25:34,016 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:25:34,016 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:25:34,017 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-02-02 23:26:37,159 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-02-02 23:26:37,161 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:26:37,161 INFO sqlalchemy.engine.base.Engine Thread-61 : ()
2020-02-02 23:26:37,163 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:26:37,163 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:26:37,163 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:26:37,165 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:26:37,165 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-02-02 23:26:37,166 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,166 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,170 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:26:37,170 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-02-02 23:26:37,171 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,171 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,173 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-02-02 23:26:37,845 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-02-02 23:26:37,846 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-02-02 23:26:37,849 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-02-02 23:26:37,850 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:26:37,852 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-02-02 23:26:37,853 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:26:37,854 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:26:37,854 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-02-02 23:26:37,855 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:26:37,855 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-02-02 23:26:37,855 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-02-02 23:26:37,855 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-02-02 23:26:37,857 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,857 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,857 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,858 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,856 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,859 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-02-02 23:26:37,859 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,861 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,862 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-02-02 23:26:37,860 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-02-02 23:26:37,860 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,864 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-02-02 23:26:37,923 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-02-02 23:26:37,924 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:26:37,924 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-02-02 23:26:37,925 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:26:37,925 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:26:37,926 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-02-02 23:26:37,951 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-02-02 23:26:37,953 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:26:37,953 INFO sqlalchemy.engine.base.Engine Thread-74 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:26:37,954 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:26:37,954 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:26:37,954 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:26:37,954 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:26:37,957 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:26:37,957 INFO sqlalchemy.engine.base.Engine Thread-74 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:26:37,958 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:26:37,958 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:26:37,959 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-02-02 23:27:38,823 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-02-02 23:27:38,826 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:27:38,826 INFO sqlalchemy.engine.base.Engine Thread-76 : ()
2020-02-02 23:27:38,828 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:27:38,828 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:27:38,828 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:27:38,831 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:27:38,831 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-02-02 23:27:38,831 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:38,832 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:38,846 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:27:38,846 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip', 1, 1)
2020-02-02 23:27:38,846 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:38,847 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:38,848 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-02-02 23:27:39,386 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-02-02 23:27:39,388 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:27:39,389 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-02-02 23:27:39,391 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-02-02 23:27:39,391 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:39,392 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:27:39,396 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-02-02 23:27:39,395 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:39,397 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-02-02 23:27:39,395 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-02-02 23:27:39,401 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-02-02 23:27:39,401 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:39,404 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:39,404 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:27:39,405 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-02-02 23:27:39,403 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:27:39,406 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-02-02 23:27:39,405 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-02-02 23:27:39,406 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:39,407 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:39,408 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-02-02 23:27:39,409 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:39,409 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:39,410 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-02-02 23:27:39,476 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-02-02 23:27:39,477 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:27:39,477 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-02-02 23:27:39,478 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:27:39,478 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:27:39,479 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-02-02 23:27:39,515 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-02-02 23:27:39,517 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:27:39,517 INFO sqlalchemy.engine.base.Engine Thread-89 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:27:39,518 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:27:39,519 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:27:39,519 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:27:39,519 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:27:39,522 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:27:39,522 INFO sqlalchemy.engine.base.Engine Thread-89 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:27:39,523 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:27:39,523 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:27:39,524 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-02-02 23:28:50,891 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-02-02 23:28:50,894 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:28:50,894 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-02-02 23:28:50,896 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:28:50,897 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:28:50,897 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:28:50,900 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:28:50,900 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-02-02 23:28:50,901 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:50,902 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:50,906 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:28:50,906 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-02-02 23:28:50,907 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:50,907 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:50,909 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-02-02 23:28:51,417 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-02-02 23:28:51,420 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:28:51,420 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-02-02 23:28:51,421 INFO sqlalchemy.engine.base.Engine Thread-100 : BEGIN (implicit)
2020-02-02 23:28:51,422 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:51,423 INFO sqlalchemy.engine.base.Engine Thread-100 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:28:51,426 INFO sqlalchemy.engine.base.Engine Thread-100 : (1, 1)
2020-02-02 23:28:51,426 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-02-02 23:28:51,425 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:51,427 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:28:51,428 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:51,433 DEBUG sqlalchemy.engine.base.Engine Thread-100 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:51,429 INFO sqlalchemy.engine.base.Engine Thread-101 : (1, 1)
2020-02-02 23:28:51,432 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-02-02 23:28:51,429 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-02-02 23:28:51,434 INFO sqlalchemy.engine.base.Engine Thread-100 : ROLLBACK
2020-02-02 23:28:51,434 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:51,437 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:51,435 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:28:51,439 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-02-02 23:28:51,438 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-02-02 23:28:51,440 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:51,440 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:51,441 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-02-02 23:28:51,526 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-02-02 23:28:51,527 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:28:51,527 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-02-02 23:28:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:28:51,528 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:28:51,529 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-02-02 23:28:51,561 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-02-02 23:28:51,562 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:28:51,562 INFO sqlalchemy.engine.base.Engine Thread-104 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:28:51,563 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:28:51,563 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:28:51,564 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:28:51,564 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:28:51,567 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:28:51,567 INFO sqlalchemy.engine.base.Engine Thread-104 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:28:51,568 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:28:51,568 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:28:51,569 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-02-02 23:30:15,877 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-02-02 23:30:15,880 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:30:15,880 INFO sqlalchemy.engine.base.Engine Thread-106 : ()
2020-02-02 23:30:15,882 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:30:15,882 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:30:15,883 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:30:15,885 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:15,885 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-02-02 23:30:15,886 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:15,886 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:15,891 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:30:15,891 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-02-02 23:30:15,891 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:15,892 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:15,893 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-02-02 23:30:16,387 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-02-02 23:30:16,388 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-02-02 23:30:16,390 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:16,396 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-02-02 23:30:16,394 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:16,393 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-02-02 23:30:16,397 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-02-02 23:30:16,398 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-02-02 23:30:16,399 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:16,402 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:16,401 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:16,402 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:16,404 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:16,402 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-02-02 23:30:16,403 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-02-02 23:30:16,400 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:16,405 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-02-02 23:30:16,404 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-02-02 23:30:16,405 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:16,407 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:16,406 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:16,408 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-02-02 23:30:16,409 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:16,410 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-02-02 23:30:16,469 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-02-02 23:30:16,470 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:16,470 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-02-02 23:30:16,471 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:16,471 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:16,472 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-02-02 23:30:16,508 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-02-02 23:30:16,510 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:30:16,510 INFO sqlalchemy.engine.base.Engine Thread-119 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:30:16,511 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:30:16,511 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:30:16,511 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:30:16,511 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:30:16,515 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:30:16,515 INFO sqlalchemy.engine.base.Engine Thread-119 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:30:16,516 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:30:16,516 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:30:16,517 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-02-02 23:30:55,977 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-02-02 23:30:55,979 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:30:55,979 INFO sqlalchemy.engine.base.Engine Thread-121 : ()
2020-02-02 23:30:55,981 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:30:55,981 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:30:55,981 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:30:55,983 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:55,983 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-02-02 23:30:55,984 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:55,984 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:55,988 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:30:55,988 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-02-02 23:30:55,989 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:55,989 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:55,991 INFO sqlalchemy.engine.base.Engine Thread-121 : ROLLBACK
2020-02-02 23:30:56,516 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-02-02 23:30:56,519 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-02-02 23:30:56,520 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:56,522 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:56,522 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-02-02 23:30:56,524 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-02-02 23:30:56,525 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-02-02 23:30:56,528 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-02-02 23:30:56,530 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:56,530 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:56,532 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:56,533 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-02-02 23:30:56,532 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-02-02 23:30:56,531 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:56,532 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:56,534 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:56,535 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-02-02 23:30:56,535 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:56,536 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-02-02 23:30:56,537 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:56,537 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:56,539 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:56,539 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-02-02 23:30:56,541 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-02-02 23:30:56,620 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-02-02 23:30:56,621 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:30:56,621 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-02-02 23:30:56,621 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:30:56,622 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:30:56,623 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-02-02 23:30:56,650 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-02-02 23:30:56,651 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:30:56,652 INFO sqlalchemy.engine.base.Engine Thread-134 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:30:56,653 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:30:56,653 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:30:56,653 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:30:56,653 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:30:56,656 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:30:56,657 INFO sqlalchemy.engine.base.Engine Thread-134 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:30:56,657 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:30:56,658 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:30:56,658 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-02-02 23:31:50,731 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-02-02 23:31:50,733 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:31:50,733 INFO sqlalchemy.engine.base.Engine Thread-136 : ()
2020-02-02 23:31:50,734 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:31:50,734 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:31:50,735 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:31:50,736 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:31:50,737 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-02-02 23:31:50,737 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:50,738 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:50,742 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:31:50,742 INFO sqlalchemy.engine.base.Engine Thread-136 : ('philip', 1, 1)
2020-02-02 23:31:50,742 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:50,743 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:50,744 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-02-02 23:31:51,252 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-02-02 23:31:51,254 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:31:51,254 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-02-02 23:31:51,256 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-02-02 23:31:51,256 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:51,257 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:31:51,260 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-02-02 23:31:51,260 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:51,265 INFO sqlalchemy.engine.base.Engine Thread-147 : BEGIN (implicit)
2020-02-02 23:31:51,265 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-02-02 23:31:51,266 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:31:51,280 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-02-02 23:31:51,275 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-02-02 23:31:51,276 INFO sqlalchemy.engine.base.Engine Thread-147 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:31:51,281 INFO sqlalchemy.engine.base.Engine Thread-147 : (1, 1)
2020-02-02 23:31:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:51,283 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-02-02 23:31:51,283 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:51,283 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:51,285 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-02-02 23:31:51,286 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:51,286 DEBUG sqlalchemy.engine.base.Engine Thread-147 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:51,287 INFO sqlalchemy.engine.base.Engine Thread-147 : ROLLBACK
2020-02-02 23:31:51,358 INFO sqlalchemy.engine.base.Engine Thread-148 : BEGIN (implicit)
2020-02-02 23:31:51,359 INFO sqlalchemy.engine.base.Engine Thread-148 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:31:51,359 INFO sqlalchemy.engine.base.Engine Thread-148 : (1, 1)
2020-02-02 23:31:51,360 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:31:51,360 DEBUG sqlalchemy.engine.base.Engine Thread-148 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:31:51,361 INFO sqlalchemy.engine.base.Engine Thread-148 : ROLLBACK
2020-02-02 23:31:51,403 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-02-02 23:31:51,404 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:31:51,404 INFO sqlalchemy.engine.base.Engine Thread-149 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:31:51,405 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:31:51,406 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:31:51,406 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:31:51,406 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:31:51,409 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:31:51,409 INFO sqlalchemy.engine.base.Engine Thread-149 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:31:51,410 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:31:51,410 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:31:51,411 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-02-02 23:32:12,287 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-02-02 23:32:12,290 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-02-02 23:32:12,290 INFO sqlalchemy.engine.base.Engine Thread-151 : ('0', 1)
2020-02-02 23:32:12,291 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-02-02 23:32:12,297 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:32:12,297 INFO sqlalchemy.engine.base.Engine Thread-151 : ()
2020-02-02 23:32:12,298 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:32:12,298 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:32:12,299 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:32:12,301 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:32:12,301 INFO sqlalchemy.engine.base.Engine Thread-151 : (97,)
2020-02-02 23:32:12,301 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:32:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-02-02 23:32:12,302 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-02-02 23:32:12,303 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:32:12,303 INFO sqlalchemy.engine.base.Engine Thread-151 : (105,)
2020-02-02 23:32:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:32:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:32:12,304 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:32:12,307 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-02-02 23:32:12,307 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-02-02 23:32:12,308 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:32:12,308 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:32:12,310 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:12,311 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-02-02 23:32:12,311 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,311 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,356 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:32:12,356 INFO sqlalchemy.engine.base.Engine Thread-151 : ('philip', 1, 1)
2020-02-02 23:32:12,357 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,357 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,360 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-02-02 23:32:12,839 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-02-02 23:32:12,841 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:12,841 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-02-02 23:32:12,842 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-02-02 23:32:12,843 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,847 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,845 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:12,848 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-02-02 23:32:12,849 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-02-02 23:32:12,851 INFO sqlalchemy.engine.base.Engine Thread-162 : BEGIN (implicit)
2020-02-02 23:32:12,854 INFO sqlalchemy.engine.base.Engine Thread-162 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:12,852 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:12,854 INFO sqlalchemy.engine.base.Engine Thread-162 : (1, 1)
2020-02-02 23:32:12,851 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-02-02 23:32:12,854 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-02-02 23:32:12,855 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,855 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,856 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-02-02 23:32:12,856 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,857 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,858 DEBUG sqlalchemy.engine.base.Engine Thread-162 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,858 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,859 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-02-02 23:32:12,861 INFO sqlalchemy.engine.base.Engine Thread-162 : ROLLBACK
2020-02-02 23:32:12,927 INFO sqlalchemy.engine.base.Engine Thread-163 : BEGIN (implicit)
2020-02-02 23:32:12,928 INFO sqlalchemy.engine.base.Engine Thread-163 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:12,928 INFO sqlalchemy.engine.base.Engine Thread-163 : (1, 1)
2020-02-02 23:32:12,929 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:12,929 DEBUG sqlalchemy.engine.base.Engine Thread-163 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:12,930 INFO sqlalchemy.engine.base.Engine Thread-163 : ROLLBACK
2020-02-02 23:32:15,139 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-02-02 23:32:15,142 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:32:15,142 INFO sqlalchemy.engine.base.Engine Thread-164 : ()
2020-02-02 23:32:15,144 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:32:15,144 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:32:15,144 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:32:15,146 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:15,146 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-02-02 23:32:15,147 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,147 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,151 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:32:15,151 INFO sqlalchemy.engine.base.Engine Thread-164 : ('philip', 1, 1)
2020-02-02 23:32:15,151 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,152 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,153 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-02-02 23:32:15,690 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-02-02 23:32:15,692 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:15,692 INFO sqlalchemy.engine.base.Engine Thread-172 : (1, 1)
2020-02-02 23:32:15,693 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,693 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,694 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-02-02 23:32:15,697 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-02-02 23:32:15,702 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:15,702 INFO sqlalchemy.engine.base.Engine Thread-174 : (1, 1)
2020-02-02 23:32:15,703 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-02-02 23:32:15,704 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,707 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,706 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:15,705 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-02-02 23:32:15,707 INFO sqlalchemy.engine.base.Engine Thread-173 : (1, 1)
2020-02-02 23:32:15,708 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:15,709 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-02-02 23:32:15,709 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-02-02 23:32:15,710 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,710 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,710 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,711 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,713 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-02-02 23:32:15,712 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-02-02 23:32:15,787 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-02-02 23:32:15,788 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:32:15,788 INFO sqlalchemy.engine.base.Engine Thread-176 : (1, 1)
2020-02-02 23:32:15,789 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:32:15,789 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:32:15,790 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-02-02 23:32:15,819 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-02-02 23:32:15,821 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:32:15,821 INFO sqlalchemy.engine.base.Engine Thread-177 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:32:15,822 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:32:15,822 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:32:15,822 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:32:15,822 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:32:15,825 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:32:15,825 INFO sqlalchemy.engine.base.Engine Thread-177 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:32:15,826 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:32:15,826 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:32:15,827 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-02-02 23:33:02,647 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-02-02 23:33:02,649 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:33:02,650 INFO sqlalchemy.engine.base.Engine Thread-178 : ()
2020-02-02 23:33:02,651 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:33:02,651 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:33:02,651 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:33:02,653 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:02,653 INFO sqlalchemy.engine.base.Engine Thread-178 : (1, 1)
2020-02-02 23:33:02,654 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:02,654 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:02,658 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:33:02,659 INFO sqlalchemy.engine.base.Engine Thread-178 : ('philip', 1, 1)
2020-02-02 23:33:02,659 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:02,659 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:02,661 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-02-02 23:33:03,157 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-02-02 23:33:03,158 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:03,159 INFO sqlalchemy.engine.base.Engine Thread-186 : (1, 1)
2020-02-02 23:33:03,159 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:03,160 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:03,162 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-02-02 23:33:03,164 INFO sqlalchemy.engine.base.Engine Thread-187 : BEGIN (implicit)
2020-02-02 23:33:03,167 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-02-02 23:33:03,169 INFO sqlalchemy.engine.base.Engine Thread-187 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:03,171 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:03,172 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-02-02 23:33:03,174 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:03,173 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-02-02 23:33:03,174 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-02-02 23:33:03,173 INFO sqlalchemy.engine.base.Engine Thread-187 : (1, 1)
2020-02-02 23:33:03,175 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:03,175 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:03,176 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:03,176 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:03,177 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-02-02 23:33:03,178 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-02-02 23:33:03,178 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:03,179 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:03,180 INFO sqlalchemy.engine.base.Engine Thread-187 : ROLLBACK
2020-02-02 23:33:03,244 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-02-02 23:33:03,245 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:03,245 INFO sqlalchemy.engine.base.Engine Thread-190 : (1, 1)
2020-02-02 23:33:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:03,246 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:03,247 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-02-02 23:33:03,281 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-02-02 23:33:03,282 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:03,282 INFO sqlalchemy.engine.base.Engine Thread-191 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:33:03,283 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:03,283 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:03,283 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:03,283 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:03,286 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:03,286 INFO sqlalchemy.engine.base.Engine Thread-191 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:33:03,287 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:03,287 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:33:03,288 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-02-02 23:33:15,077 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-02-02 23:33:15,078 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:15,078 INFO sqlalchemy.engine.base.Engine Thread-193 : ('Salmon', 'black', datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), 'YES')
2020-02-02 23:33:15,079 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:15,082 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:15,082 INFO sqlalchemy.engine.base.Engine Thread-193 : ('Lightblue', 'black', datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), 'NO')
2020-02-02 23:33:15,083 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:15,083 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-02-02 23:33:15,987 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-02-02 23:33:15,989 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:15,989 INFO sqlalchemy.engine.base.Engine Thread-194 : ('Salmon', 'black', datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:33:15,990 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:15,993 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:15,993 INFO sqlalchemy.engine.base.Engine Thread-194 : ('Lightblue', 'black', datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:33:15,993 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:15,994 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-02-02 23:33:16,168 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-02-02 23:33:16,169 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:16,170 INFO sqlalchemy.engine.base.Engine Thread-195 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), 'YES')
2020-02-02 23:33:16,170 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:16,171 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:16,171 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:16,174 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:16,174 INFO sqlalchemy.engine.base.Engine Thread-195 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 3, 2, 0, 0), 'NO')
2020-02-02 23:33:16,174 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:16,175 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:33:16,175 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-02-02 23:33:16,406 INFO sqlalchemy.engine.base.Engine Thread-196 : BEGIN (implicit)
2020-02-02 23:33:16,407 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:16,407 INFO sqlalchemy.engine.base.Engine Thread-196 : ('Salmon', 'black', datetime.datetime(2020, 2, 17, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 2, 17, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 2, 17, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), 'YES')
2020-02-02 23:33:16,408 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:16,409 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:16,409 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:16,409 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:16,412 INFO sqlalchemy.engine.base.Engine Thread-196 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:16,412 INFO sqlalchemy.engine.base.Engine Thread-196 : ('Lightblue', 'black', datetime.datetime(2020, 2, 17, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 2, 17, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 2, 17, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), 'NO')
2020-02-02 23:33:16,413 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:16,413 DEBUG sqlalchemy.engine.base.Engine Thread-196 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:33:16,414 INFO sqlalchemy.engine.base.Engine Thread-196 : ROLLBACK
2020-02-02 23:33:17,772 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-02-02 23:33:17,773 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:17,773 INFO sqlalchemy.engine.base.Engine Thread-197 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 2, 3, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 2, 3, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 2, 3, 0, 0), 'YES')
2020-02-02 23:33:17,774 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:17,777 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:17,777 INFO sqlalchemy.engine.base.Engine Thread-197 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 2, 3, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 2, 3, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 2, 3, 0, 0), 'NO')
2020-02-02 23:33:17,778 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:17,779 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-02-02 23:33:18,477 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-02-02 23:33:18,478 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:18,478 INFO sqlalchemy.engine.base.Engine Thread-198 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:33:18,479 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:18,479 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:18,480 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:18,480 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:18,483 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:18,483 INFO sqlalchemy.engine.base.Engine Thread-198 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:33:18,484 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:18,484 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:33:18,485 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-02-02 23:33:51,150 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-02-02 23:33:51,153 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:33:51,153 INFO sqlalchemy.engine.base.Engine Thread-199 : ()
2020-02-02 23:33:51,154 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:33:51,155 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:33:51,155 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:33:51,157 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:51,157 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-02-02 23:33:51,158 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,158 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,162 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:33:51,162 INFO sqlalchemy.engine.base.Engine Thread-199 : ('philip', 1, 1)
2020-02-02 23:33:51,163 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,163 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,164 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-02-02 23:33:51,648 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-02-02 23:33:51,650 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:51,651 INFO sqlalchemy.engine.base.Engine Thread-207 : BEGIN (implicit)
2020-02-02 23:33:51,651 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-02-02 23:33:51,659 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,657 INFO sqlalchemy.engine.base.Engine Thread-207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:51,660 INFO sqlalchemy.engine.base.Engine Thread-207 : (1, 1)
2020-02-02 23:33:51,656 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-02-02 23:33:51,660 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,659 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-02-02 23:33:51,661 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:51,664 INFO sqlalchemy.engine.base.Engine Thread-209 : (1, 1)
2020-02-02 23:33:51,662 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-02-02 23:33:51,664 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:51,665 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-02-02 23:33:51,663 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,666 DEBUG sqlalchemy.engine.base.Engine Thread-207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,665 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,667 INFO sqlalchemy.engine.base.Engine Thread-207 : ROLLBACK
2020-02-02 23:33:51,667 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,668 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,669 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,670 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-02-02 23:33:51,669 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-02-02 23:33:51,740 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-02-02 23:33:51,741 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:33:51,741 INFO sqlalchemy.engine.base.Engine Thread-211 : (1, 1)
2020-02-02 23:33:51,742 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:33:51,742 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:33:51,743 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-02-02 23:33:51,773 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-02-02 23:33:51,775 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:51,775 INFO sqlalchemy.engine.base.Engine Thread-212 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:33:51,776 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:51,776 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:51,776 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:51,777 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:33:51,780 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:33:51,780 INFO sqlalchemy.engine.base.Engine Thread-212 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:33:51,781 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:33:51,782 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:33:51,782 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-02-02 23:34:23,870 INFO sqlalchemy.engine.base.Engine Thread-214 : BEGIN (implicit)
2020-02-02 23:34:23,872 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:34:23,872 INFO sqlalchemy.engine.base.Engine Thread-214 : ()
2020-02-02 23:34:23,873 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:34:23,874 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:34:23,874 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:34:23,876 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:23,876 INFO sqlalchemy.engine.base.Engine Thread-214 : (1, 1)
2020-02-02 23:34:23,877 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:23,877 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:23,881 INFO sqlalchemy.engine.base.Engine Thread-214 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:34:23,881 INFO sqlalchemy.engine.base.Engine Thread-214 : ('philip', 1, 1)
2020-02-02 23:34:23,881 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:23,882 DEBUG sqlalchemy.engine.base.Engine Thread-214 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:23,883 INFO sqlalchemy.engine.base.Engine Thread-214 : ROLLBACK
2020-02-02 23:34:24,362 INFO sqlalchemy.engine.base.Engine Thread-223 : BEGIN (implicit)
2020-02-02 23:34:24,363 INFO sqlalchemy.engine.base.Engine Thread-223 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:24,363 INFO sqlalchemy.engine.base.Engine Thread-223 : (1, 1)
2020-02-02 23:34:24,365 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:24,365 DEBUG sqlalchemy.engine.base.Engine Thread-223 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:24,366 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-02-02 23:34:24,368 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-02-02 23:34:24,369 INFO sqlalchemy.engine.base.Engine Thread-223 : ROLLBACK
2020-02-02 23:34:24,370 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:24,373 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:24,375 INFO sqlalchemy.engine.base.Engine Thread-225 : BEGIN (implicit)
2020-02-02 23:34:24,375 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-02-02 23:34:24,378 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:24,377 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:24,378 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:24,379 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-02-02 23:34:24,378 INFO sqlalchemy.engine.base.Engine Thread-225 : (1, 1)
2020-02-02 23:34:24,376 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-02-02 23:34:24,381 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:24,381 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:24,381 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:24,382 INFO sqlalchemy.engine.base.Engine Thread-225 : ROLLBACK
2020-02-02 23:34:24,383 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:24,384 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-02-02 23:34:24,441 INFO sqlalchemy.engine.base.Engine Thread-226 : BEGIN (implicit)
2020-02-02 23:34:24,442 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:24,442 INFO sqlalchemy.engine.base.Engine Thread-226 : (1, 1)
2020-02-02 23:34:24,443 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:24,443 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:24,444 INFO sqlalchemy.engine.base.Engine Thread-226 : ROLLBACK
2020-02-02 23:34:24,478 INFO sqlalchemy.engine.base.Engine Thread-227 : BEGIN (implicit)
2020-02-02 23:34:24,480 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:24,480 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:34:24,481 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:24,482 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:24,482 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:24,482 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:24,485 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:24,486 INFO sqlalchemy.engine.base.Engine Thread-227 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:34:24,486 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:24,487 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:34:24,488 INFO sqlalchemy.engine.base.Engine Thread-227 : ROLLBACK
2020-02-02 23:34:38,465 INFO sqlalchemy.engine.base.Engine Thread-229 : BEGIN (implicit)
2020-02-02 23:34:38,467 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:34:38,467 INFO sqlalchemy.engine.base.Engine Thread-229 : ()
2020-02-02 23:34:38,468 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:34:38,469 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:34:38,469 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:34:38,471 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:38,471 INFO sqlalchemy.engine.base.Engine Thread-229 : (1, 1)
2020-02-02 23:34:38,471 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:38,472 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:38,476 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:34:38,476 INFO sqlalchemy.engine.base.Engine Thread-229 : ('philip', 1, 1)
2020-02-02 23:34:38,477 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:38,477 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:38,479 INFO sqlalchemy.engine.base.Engine Thread-229 : ROLLBACK
2020-02-02 23:34:39,050 INFO sqlalchemy.engine.base.Engine Thread-237 : BEGIN (implicit)
2020-02-02 23:34:39,051 INFO sqlalchemy.engine.base.Engine Thread-237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:39,051 INFO sqlalchemy.engine.base.Engine Thread-237 : (1, 1)
2020-02-02 23:34:39,053 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-02-02 23:34:39,054 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:39,054 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-02-02 23:34:39,055 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-02-02 23:34:39,057 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:39,059 INFO sqlalchemy.engine.base.Engine Thread-240 : (1, 1)
2020-02-02 23:34:39,059 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-02-02 23:34:39,057 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:39,061 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:39,061 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-02-02 23:34:39,061 DEBUG sqlalchemy.engine.base.Engine Thread-237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:39,059 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:39,061 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:39,062 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:39,064 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:39,064 INFO sqlalchemy.engine.base.Engine Thread-237 : ROLLBACK
2020-02-02 23:34:39,064 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:39,063 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:39,067 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-02-02 23:34:39,065 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-02-02 23:34:39,069 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-02-02 23:34:39,133 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-02-02 23:34:39,133 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:34:39,134 INFO sqlalchemy.engine.base.Engine Thread-241 : (1, 1)
2020-02-02 23:34:39,134 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:34:39,135 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:34:39,136 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-02-02 23:34:39,166 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-02-02 23:34:39,167 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:39,167 INFO sqlalchemy.engine.base.Engine Thread-242 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:34:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:39,168 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:39,172 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:39,172 INFO sqlalchemy.engine.base.Engine Thread-242 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:34:39,173 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:39,173 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:34:39,174 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-02-02 23:34:49,233 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-02-02 23:34:49,235 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:49,235 INFO sqlalchemy.engine.base.Engine Thread-244 : ('Salmon', 'black', datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), 'YES')
2020-02-02 23:34:49,236 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:49,239 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:49,239 INFO sqlalchemy.engine.base.Engine Thread-244 : ('Lightblue', 'black', datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), 'NO')
2020-02-02 23:34:49,240 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:49,241 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-02-02 23:34:49,716 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-02-02 23:34:49,717 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:49,718 INFO sqlalchemy.engine.base.Engine Thread-245 : ('Salmon', 'black', datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 23, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 23, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 23, 0, 0), 'YES')
2020-02-02 23:34:49,718 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:49,721 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:49,721 INFO sqlalchemy.engine.base.Engine Thread-245 : ('Lightblue', 'black', datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 23, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 23, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 23, 0, 0), 'NO')
2020-02-02 23:34:49,722 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:49,723 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-02-02 23:34:50,239 INFO sqlalchemy.engine.base.Engine Thread-246 : BEGIN (implicit)
2020-02-02 23:34:50,241 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:50,241 INFO sqlalchemy.engine.base.Engine Thread-246 : ('Salmon', 'black', datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), 'YES')
2020-02-02 23:34:50,242 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:50,246 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:50,246 INFO sqlalchemy.engine.base.Engine Thread-246 : ('Lightblue', 'black', datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 3, 16, 0, 0), 'NO')
2020-02-02 23:34:50,246 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:50,247 INFO sqlalchemy.engine.base.Engine Thread-246 : ROLLBACK
2020-02-02 23:34:50,778 INFO sqlalchemy.engine.base.Engine Thread-247 : BEGIN (implicit)
2020-02-02 23:34:50,780 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:50,780 INFO sqlalchemy.engine.base.Engine Thread-247 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:34:50,781 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:50,781 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:50,781 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:50,784 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:50,784 INFO sqlalchemy.engine.base.Engine Thread-247 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:34:50,785 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:50,785 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:34:50,786 INFO sqlalchemy.engine.base.Engine Thread-247 : ROLLBACK
2020-02-02 23:34:53,311 INFO sqlalchemy.engine.base.Engine Thread-248 : BEGIN (implicit)
2020-02-02 23:34:53,312 INFO sqlalchemy.engine.base.Engine Thread-248 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:53,312 INFO sqlalchemy.engine.base.Engine Thread-248 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:34:53,313 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:53,314 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:53,314 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:53,314 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:34:53,317 INFO sqlalchemy.engine.base.Engine Thread-248 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:34:53,317 INFO sqlalchemy.engine.base.Engine Thread-248 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:34:53,318 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:34:53,318 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:34:53,319 INFO sqlalchemy.engine.base.Engine Thread-248 : ROLLBACK
2020-02-02 23:35:12,827 INFO sqlalchemy.engine.base.Engine Thread-249 : BEGIN (implicit)
2020-02-02 23:35:12,829 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:35:12,829 INFO sqlalchemy.engine.base.Engine Thread-249 : ()
2020-02-02 23:35:12,830 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:35:12,831 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:35:12,831 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:35:12,833 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:12,833 INFO sqlalchemy.engine.base.Engine Thread-249 : (1, 1)
2020-02-02 23:35:12,834 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:12,834 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:12,839 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:35:12,839 INFO sqlalchemy.engine.base.Engine Thread-249 : ('philip', 1, 1)
2020-02-02 23:35:12,840 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:12,840 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:12,842 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-02-02 23:35:13,293 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-02-02 23:35:13,295 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:13,296 INFO sqlalchemy.engine.base.Engine Thread-257 : (1, 1)
2020-02-02 23:35:13,294 INFO sqlalchemy.engine.base.Engine Thread-258 : BEGIN (implicit)
2020-02-02 23:35:13,297 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:13,297 INFO sqlalchemy.engine.base.Engine Thread-258 : (1, 1)
2020-02-02 23:35:13,299 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:13,299 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:13,301 INFO sqlalchemy.engine.base.Engine Thread-259 : BEGIN (implicit)
2020-02-02 23:35:13,305 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:13,304 INFO sqlalchemy.engine.base.Engine Thread-260 : BEGIN (implicit)
2020-02-02 23:35:13,307 INFO sqlalchemy.engine.base.Engine Thread-260 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:13,306 INFO sqlalchemy.engine.base.Engine Thread-259 : (1, 1)
2020-02-02 23:35:13,303 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:13,308 INFO sqlalchemy.engine.base.Engine Thread-257 : ROLLBACK
2020-02-02 23:35:13,307 INFO sqlalchemy.engine.base.Engine Thread-260 : (1, 1)
2020-02-02 23:35:13,304 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:13,309 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:13,310 INFO sqlalchemy.engine.base.Engine Thread-258 : ROLLBACK
2020-02-02 23:35:13,311 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:13,312 DEBUG sqlalchemy.engine.base.Engine Thread-260 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:13,311 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:13,314 INFO sqlalchemy.engine.base.Engine Thread-259 : ROLLBACK
2020-02-02 23:35:13,313 INFO sqlalchemy.engine.base.Engine Thread-260 : ROLLBACK
2020-02-02 23:35:13,372 INFO sqlalchemy.engine.base.Engine Thread-261 : BEGIN (implicit)
2020-02-02 23:35:13,373 INFO sqlalchemy.engine.base.Engine Thread-261 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:13,373 INFO sqlalchemy.engine.base.Engine Thread-261 : (1, 1)
2020-02-02 23:35:13,374 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:13,374 DEBUG sqlalchemy.engine.base.Engine Thread-261 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:13,375 INFO sqlalchemy.engine.base.Engine Thread-261 : ROLLBACK
2020-02-02 23:35:13,410 INFO sqlalchemy.engine.base.Engine Thread-262 : BEGIN (implicit)
2020-02-02 23:35:13,412 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:13,412 INFO sqlalchemy.engine.base.Engine Thread-262 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:35:13,413 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:13,413 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:13,413 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:13,413 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:13,417 INFO sqlalchemy.engine.base.Engine Thread-262 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:13,417 INFO sqlalchemy.engine.base.Engine Thread-262 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:35:13,418 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:13,418 DEBUG sqlalchemy.engine.base.Engine Thread-262 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:35:13,419 INFO sqlalchemy.engine.base.Engine Thread-262 : ROLLBACK
2020-02-02 23:35:14,643 INFO sqlalchemy.engine.base.Engine Thread-263 : BEGIN (implicit)
2020-02-02 23:35:14,644 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:14,645 INFO sqlalchemy.engine.base.Engine Thread-263 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:35:14,646 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:14,646 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:14,646 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:14,650 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:14,650 INFO sqlalchemy.engine.base.Engine Thread-263 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:35:14,650 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:14,651 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:35:14,651 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-02-02 23:35:18,546 INFO sqlalchemy.engine.base.Engine Thread-264 : BEGIN (implicit)
2020-02-02 23:35:18,548 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:18,548 INFO sqlalchemy.engine.base.Engine Thread-264 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:35:18,549 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:18,549 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:18,549 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:18,549 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:18,553 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:18,553 INFO sqlalchemy.engine.base.Engine Thread-264 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:35:18,554 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:18,554 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:35:18,555 INFO sqlalchemy.engine.base.Engine Thread-264 : ROLLBACK
2020-02-02 23:35:20,345 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-02-02 23:35:20,346 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:20,347 INFO sqlalchemy.engine.base.Engine Thread-265 : (1, 1)
2020-02-02 23:35:20,347 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,348 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,350 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-02-02 23:35:20,350 INFO sqlalchemy.engine.base.Engine Thread-265 : ()
2020-02-02 23:35:20,350 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-02-02 23:35:20,351 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-02-02 23:35:20,465 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-02-02 23:35:20,465 INFO sqlalchemy.engine.base.Engine Thread-265 : ()
2020-02-02 23:35:20,466 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,466 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,466 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-02-02 23:35:20,467 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-02-02 23:35:20,467 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-02-02 23:35:20,467 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-02-02 23:35:20,467 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-02-02 23:35:20,476 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:35:20,476 INFO sqlalchemy.engine.base.Engine Thread-265 : ('philip', 1, 1)
2020-02-02 23:35:20,477 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,477 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,478 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-02-02 23:35:20,942 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-02-02 23:35:20,944 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-02-02 23:35:20,948 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:20,948 INFO sqlalchemy.engine.base.Engine Thread-273 : (1, 1)
2020-02-02 23:35:20,945 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:20,954 INFO sqlalchemy.engine.base.Engine Thread-274 : (1, 1)
2020-02-02 23:35:20,952 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,954 INFO sqlalchemy.engine.base.Engine Thread-276 : BEGIN (implicit)
2020-02-02 23:35:20,956 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:20,955 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,955 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,950 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-02-02 23:35:20,956 INFO sqlalchemy.engine.base.Engine Thread-276 : (1, 1)
2020-02-02 23:35:20,957 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,958 INFO sqlalchemy.engine.base.Engine Thread-273 : ROLLBACK
2020-02-02 23:35:20,959 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:20,961 INFO sqlalchemy.engine.base.Engine Thread-275 : (1, 1)
2020-02-02 23:35:20,961 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-02-02 23:35:20,962 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,963 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,964 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-02-02 23:35:20,960 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:20,965 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:20,966 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-02-02 23:35:21,031 INFO sqlalchemy.engine.base.Engine Thread-277 : BEGIN (implicit)
2020-02-02 23:35:21,032 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:21,032 INFO sqlalchemy.engine.base.Engine Thread-277 : (1, 1)
2020-02-02 23:35:21,033 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:21,033 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:21,034 INFO sqlalchemy.engine.base.Engine Thread-277 : ROLLBACK
2020-02-02 23:35:21,618 INFO sqlalchemy.engine.base.Engine Thread-278 : BEGIN (implicit)
2020-02-02 23:35:21,620 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:35:21,620 INFO sqlalchemy.engine.base.Engine Thread-278 : ()
2020-02-02 23:35:21,622 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:35:21,622 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:35:21,622 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:35:21,625 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:21,625 INFO sqlalchemy.engine.base.Engine Thread-278 : (1, 1)
2020-02-02 23:35:21,625 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:21,626 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:21,630 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:35:21,630 INFO sqlalchemy.engine.base.Engine Thread-278 : ('philip', 1, 1)
2020-02-02 23:35:21,631 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:21,631 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:21,633 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-02-02 23:35:22,120 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-02-02 23:35:22,122 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:22,122 INFO sqlalchemy.engine.base.Engine Thread-286 : (1, 1)
2020-02-02 23:35:22,126 INFO sqlalchemy.engine.base.Engine Thread-288 : BEGIN (implicit)
2020-02-02 23:35:22,128 INFO sqlalchemy.engine.base.Engine Thread-289 : BEGIN (implicit)
2020-02-02 23:35:22,131 INFO sqlalchemy.engine.base.Engine Thread-287 : BEGIN (implicit)
2020-02-02 23:35:22,135 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:22,135 INFO sqlalchemy.engine.base.Engine Thread-287 : (1, 1)
2020-02-02 23:35:22,134 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:22,135 INFO sqlalchemy.engine.base.Engine Thread-289 : (1, 1)
2020-02-02 23:35:22,133 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:22,136 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:22,132 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:22,136 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:22,137 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:22,138 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-02-02 23:35:22,138 INFO sqlalchemy.engine.base.Engine Thread-288 : (1, 1)
2020-02-02 23:35:22,140 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:22,141 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:22,142 INFO sqlalchemy.engine.base.Engine Thread-287 : ROLLBACK
2020-02-02 23:35:22,143 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:22,145 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:22,146 INFO sqlalchemy.engine.base.Engine Thread-288 : ROLLBACK
2020-02-02 23:35:22,144 INFO sqlalchemy.engine.base.Engine Thread-289 : ROLLBACK
2020-02-02 23:35:22,217 INFO sqlalchemy.engine.base.Engine Thread-290 : BEGIN (implicit)
2020-02-02 23:35:22,218 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:35:22,218 INFO sqlalchemy.engine.base.Engine Thread-290 : (1, 1)
2020-02-02 23:35:22,219 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:35:22,219 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:35:22,220 INFO sqlalchemy.engine.base.Engine Thread-290 : ROLLBACK
2020-02-02 23:35:22,290 INFO sqlalchemy.engine.base.Engine Thread-291 : BEGIN (implicit)
2020-02-02 23:35:22,291 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:22,291 INFO sqlalchemy.engine.base.Engine Thread-291 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:35:22,292 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:22,293 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:22,293 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:22,293 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:22,296 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:22,296 INFO sqlalchemy.engine.base.Engine Thread-291 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:35:22,297 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:22,297 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:35:22,298 INFO sqlalchemy.engine.base.Engine Thread-291 : ROLLBACK
2020-02-02 23:35:24,605 INFO sqlalchemy.engine.base.Engine Thread-292 : BEGIN (implicit)
2020-02-02 23:35:24,606 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:24,607 INFO sqlalchemy.engine.base.Engine Thread-292 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:35:24,608 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:24,608 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:24,608 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:24,611 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:24,611 INFO sqlalchemy.engine.base.Engine Thread-292 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:35:24,612 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:24,612 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:35:24,613 INFO sqlalchemy.engine.base.Engine Thread-292 : ROLLBACK
2020-02-02 23:35:25,006 INFO sqlalchemy.engine.base.Engine Thread-293 : BEGIN (implicit)
2020-02-02 23:35:25,008 INFO sqlalchemy.engine.base.Engine Thread-293 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:25,008 INFO sqlalchemy.engine.base.Engine Thread-293 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'YES')
2020-02-02 23:35:25,009 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:25,009 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:35:25,013 INFO sqlalchemy.engine.base.Engine Thread-293 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:35:25,013 INFO sqlalchemy.engine.base.Engine Thread-293 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-02-02 23:35:25,014 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:35:25,015 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 23:35:25,015 INFO sqlalchemy.engine.base.Engine Thread-293 : ROLLBACK
2020-02-02 23:36:08,852 INFO sqlalchemy.engine.base.Engine Thread-294 : BEGIN (implicit)
2020-02-02 23:36:08,853 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:08,853 INFO sqlalchemy.engine.base.Engine Thread-294 : (1, 1)
2020-02-02 23:36:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:08,854 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:08,856 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:08,857 INFO sqlalchemy.engine.base.Engine Thread-294 : ('philip', 1, 1)
2020-02-02 23:36:08,857 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:08,858 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:08,866 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 23:36:08,866 INFO sqlalchemy.engine.base.Engine Thread-294 : ()
2020-02-02 23:36:08,867 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 23:36:08,868 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 23:36:08,868 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:08,868 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:08,868 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:08,868 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:08,869 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:08,869 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:08,869 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:08,869 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:08,869 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:08,869 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:08,885 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:08,885 INFO sqlalchemy.engine.base.Engine Thread-294 : ('philip', 1, 1)
2020-02-02 23:36:08,886 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:08,886 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:08,888 INFO sqlalchemy.engine.base.Engine Thread-294 : ROLLBACK
2020-02-02 23:36:09,374 INFO sqlalchemy.engine.base.Engine Thread-303 : BEGIN (implicit)
2020-02-02 23:36:09,375 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:09,376 INFO sqlalchemy.engine.base.Engine Thread-303 : (1, 1)
2020-02-02 23:36:09,377 INFO sqlalchemy.engine.base.Engine Thread-302 : BEGIN (implicit)
2020-02-02 23:36:09,378 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:09,379 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:09,382 INFO sqlalchemy.engine.base.Engine Thread-302 : (1, 1)
2020-02-02 23:36:09,381 INFO sqlalchemy.engine.base.Engine Thread-304 : BEGIN (implicit)
2020-02-02 23:36:09,381 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:09,384 INFO sqlalchemy.engine.base.Engine Thread-303 : ROLLBACK
2020-02-02 23:36:09,383 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:09,380 INFO sqlalchemy.engine.base.Engine Thread-305 : BEGIN (implicit)
2020-02-02 23:36:09,384 INFO sqlalchemy.engine.base.Engine Thread-304 : (1, 1)
2020-02-02 23:36:09,383 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:09,386 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:09,387 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:09,387 INFO sqlalchemy.engine.base.Engine Thread-305 : (1, 1)
2020-02-02 23:36:09,387 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:09,388 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:09,389 INFO sqlalchemy.engine.base.Engine Thread-304 : ROLLBACK
2020-02-02 23:36:09,389 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:09,390 INFO sqlalchemy.engine.base.Engine Thread-302 : ROLLBACK
2020-02-02 23:36:09,391 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:09,392 INFO sqlalchemy.engine.base.Engine Thread-305 : ROLLBACK
2020-02-02 23:36:09,454 INFO sqlalchemy.engine.base.Engine Thread-306 : BEGIN (implicit)
2020-02-02 23:36:09,455 INFO sqlalchemy.engine.base.Engine Thread-306 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:09,455 INFO sqlalchemy.engine.base.Engine Thread-306 : (1, 1)
2020-02-02 23:36:09,456 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:09,456 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:09,457 INFO sqlalchemy.engine.base.Engine Thread-306 : ROLLBACK
2020-02-02 23:36:11,020 INFO sqlalchemy.engine.base.Engine Thread-307 : BEGIN (implicit)
2020-02-02 23:36:11,021 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:11,021 INFO sqlalchemy.engine.base.Engine Thread-307 : (1, 1)
2020-02-02 23:36:11,021 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,022 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,024 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:11,024 INFO sqlalchemy.engine.base.Engine Thread-307 : ('philip', 1, 1)
2020-02-02 23:36:11,025 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,025 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,027 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-02 23:36:11,027 INFO sqlalchemy.engine.base.Engine Thread-307 : ('0', 1)
2020-02-02 23:36:11,028 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-02 23:36:11,030 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:36:11,030 INFO sqlalchemy.engine.base.Engine Thread-307 : (82,)
2020-02-02 23:36:11,031 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:11,031 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-02 23:36:11,031 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-02 23:36:11,031 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-02 23:36:11,033 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-02 23:36:11,033 INFO sqlalchemy.engine.base.Engine Thread-307 : (1,)
2020-02-02 23:36:11,033 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:11,033 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-02 23:36:11,033 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-02 23:36:11,034 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:36:11,035 INFO sqlalchemy.engine.base.Engine Thread-307 : (105,)
2020-02-02 23:36:11,035 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:11,035 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:36:11,035 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:36:11,036 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:36:11,037 INFO sqlalchemy.engine.base.Engine Thread-307 : (105,)
2020-02-02 23:36:11,037 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:11,037 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:36:11,037 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:36:11,068 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:11,068 INFO sqlalchemy.engine.base.Engine Thread-307 : ('philip', 1, 1)
2020-02-02 23:36:11,069 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,069 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,071 INFO sqlalchemy.engine.base.Engine Thread-307 : ROLLBACK
2020-02-02 23:36:11,541 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-02-02 23:36:11,542 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:11,544 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-02-02 23:36:11,548 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:11,548 INFO sqlalchemy.engine.base.Engine Thread-315 : (1, 1)
2020-02-02 23:36:11,544 INFO sqlalchemy.engine.base.Engine Thread-316 : (1, 1)
2020-02-02 23:36:11,547 INFO sqlalchemy.engine.base.Engine Thread-317 : BEGIN (implicit)
2020-02-02 23:36:11,549 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:11,550 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,551 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,553 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,553 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-02-02 23:36:11,554 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:11,551 INFO sqlalchemy.engine.base.Engine Thread-317 : (1, 1)
2020-02-02 23:36:11,555 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-02-02 23:36:11,553 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,555 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-02-02 23:36:11,556 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,557 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,557 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,559 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,559 INFO sqlalchemy.engine.base.Engine Thread-317 : ROLLBACK
2020-02-02 23:36:11,558 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-02-02 23:36:11,561 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-02-02 23:36:11,634 INFO sqlalchemy.engine.base.Engine Thread-319 : BEGIN (implicit)
2020-02-02 23:36:11,635 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:11,635 INFO sqlalchemy.engine.base.Engine Thread-319 : (1, 1)
2020-02-02 23:36:11,635 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:11,636 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:11,636 INFO sqlalchemy.engine.base.Engine Thread-319 : ROLLBACK
2020-02-02 23:36:41,782 INFO sqlalchemy.engine.base.Engine Thread-321 : BEGIN (implicit)
2020-02-02 23:36:41,783 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:41,783 INFO sqlalchemy.engine.base.Engine Thread-321 : (1, 1)
2020-02-02 23:36:41,784 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:41,784 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:41,787 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:41,787 INFO sqlalchemy.engine.base.Engine Thread-321 : ('philip', 1, 1)
2020-02-02 23:36:41,788 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:41,788 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:41,789 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-02 23:36:41,789 INFO sqlalchemy.engine.base.Engine Thread-321 : ('0', 1)
2020-02-02 23:36:41,790 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-02 23:36:41,793 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:36:41,793 INFO sqlalchemy.engine.base.Engine Thread-321 : (82,)
2020-02-02 23:36:41,794 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:41,794 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-02 23:36:41,794 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-02 23:36:41,794 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-02 23:36:41,795 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-02 23:36:41,795 INFO sqlalchemy.engine.base.Engine Thread-321 : (1,)
2020-02-02 23:36:41,796 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:41,796 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-02 23:36:41,796 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-02 23:36:41,798 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:36:41,798 INFO sqlalchemy.engine.base.Engine Thread-321 : (105,)
2020-02-02 23:36:41,798 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:41,798 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:36:41,798 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:36:41,800 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:36:41,800 INFO sqlalchemy.engine.base.Engine Thread-321 : (105,)
2020-02-02 23:36:41,800 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:36:41,800 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:36:41,801 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:36:41,805 INFO sqlalchemy.engine.base.Engine Thread-321 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions, doi_locked, doi_hap) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-02-02 23:36:41,805 INFO sqlalchemy.engine.base.Engine Thread-321 : ('0', 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 83, '', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 23:36:41,806 INFO sqlalchemy.engine.base.Engine Thread-321 : COMMIT
2020-02-02 23:36:41,913 INFO sqlalchemy.engine.base.Engine Thread-322 : BEGIN (implicit)
2020-02-02 23:36:41,915 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:41,915 INFO sqlalchemy.engine.base.Engine Thread-322 : (1, 1)
2020-02-02 23:36:41,915 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:41,916 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:41,918 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:41,918 INFO sqlalchemy.engine.base.Engine Thread-322 : ('philip', 1, 1)
2020-02-02 23:36:41,919 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:41,919 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:41,929 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 23:36:41,929 INFO sqlalchemy.engine.base.Engine Thread-322 : ()
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:41,930 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (19, 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,931 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,931 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,931 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:41,931 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:41,931 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:36:41,931 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:36:41,935 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:41,935 INFO sqlalchemy.engine.base.Engine Thread-322 : ('philip', 1, 1)
2020-02-02 23:36:41,936 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:41,936 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:41,942 INFO sqlalchemy.engine.base.Engine Thread-322 : ROLLBACK
2020-02-02 23:36:42,418 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-02-02 23:36:42,420 INFO sqlalchemy.engine.base.Engine Thread-331 : BEGIN (implicit)
2020-02-02 23:36:42,421 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:42,427 INFO sqlalchemy.engine.base.Engine Thread-330 : (1, 1)
2020-02-02 23:36:42,425 INFO sqlalchemy.engine.base.Engine Thread-331 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:42,427 INFO sqlalchemy.engine.base.Engine Thread-331 : (1, 1)
2020-02-02 23:36:42,424 INFO sqlalchemy.engine.base.Engine Thread-332 : BEGIN (implicit)
2020-02-02 23:36:42,431 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:42,430 INFO sqlalchemy.engine.base.Engine Thread-333 : BEGIN (implicit)
2020-02-02 23:36:42,432 INFO sqlalchemy.engine.base.Engine Thread-333 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:42,431 INFO sqlalchemy.engine.base.Engine Thread-332 : (1, 1)
2020-02-02 23:36:42,428 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:42,433 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:42,432 INFO sqlalchemy.engine.base.Engine Thread-333 : (1, 1)
2020-02-02 23:36:42,430 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:42,435 DEBUG sqlalchemy.engine.base.Engine Thread-331 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:42,434 INFO sqlalchemy.engine.base.Engine Thread-330 : ROLLBACK
2020-02-02 23:36:42,435 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:42,436 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:42,437 DEBUG sqlalchemy.engine.base.Engine Thread-333 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:42,437 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:42,438 INFO sqlalchemy.engine.base.Engine Thread-331 : ROLLBACK
2020-02-02 23:36:42,439 INFO sqlalchemy.engine.base.Engine Thread-333 : ROLLBACK
2020-02-02 23:36:42,440 INFO sqlalchemy.engine.base.Engine Thread-332 : ROLLBACK
2020-02-02 23:36:42,500 INFO sqlalchemy.engine.base.Engine Thread-334 : BEGIN (implicit)
2020-02-02 23:36:42,501 INFO sqlalchemy.engine.base.Engine Thread-334 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:42,501 INFO sqlalchemy.engine.base.Engine Thread-334 : (1, 1)
2020-02-02 23:36:42,502 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:42,502 DEBUG sqlalchemy.engine.base.Engine Thread-334 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:42,503 INFO sqlalchemy.engine.base.Engine Thread-334 : ROLLBACK
2020-02-02 23:36:47,183 INFO sqlalchemy.engine.base.Engine Thread-335 : BEGIN (implicit)
2020-02-02 23:36:47,184 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:47,184 INFO sqlalchemy.engine.base.Engine Thread-335 : (1, 1)
2020-02-02 23:36:47,185 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,185 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,186 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-02-02 23:36:47,186 INFO sqlalchemy.engine.base.Engine Thread-335 : ()
2020-02-02 23:36:47,187 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-02-02 23:36:47,187 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-02-02 23:36:47,298 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-02-02 23:36:47,298 INFO sqlalchemy.engine.base.Engine Thread-335 : ()
2020-02-02 23:36:47,299 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,299 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,299 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-02-02 23:36:47,300 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-02-02 23:36:47,300 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-02-02 23:36:47,300 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-02-02 23:36:47,300 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-02-02 23:36:47,304 INFO sqlalchemy.engine.base.Engine Thread-335 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:47,304 INFO sqlalchemy.engine.base.Engine Thread-335 : ('philip', 1, 1)
2020-02-02 23:36:47,305 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,305 DEBUG sqlalchemy.engine.base.Engine Thread-335 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,306 INFO sqlalchemy.engine.base.Engine Thread-335 : ROLLBACK
2020-02-02 23:36:47,745 INFO sqlalchemy.engine.base.Engine Thread-344 : BEGIN (implicit)
2020-02-02 23:36:47,747 INFO sqlalchemy.engine.base.Engine Thread-343 : BEGIN (implicit)
2020-02-02 23:36:47,749 INFO sqlalchemy.engine.base.Engine Thread-345 : BEGIN (implicit)
2020-02-02 23:36:47,752 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-02-02 23:36:47,753 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:47,754 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:47,755 INFO sqlalchemy.engine.base.Engine Thread-345 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:47,756 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:47,756 INFO sqlalchemy.engine.base.Engine Thread-344 : (1, 1)
2020-02-02 23:36:47,756 INFO sqlalchemy.engine.base.Engine Thread-343 : (1, 1)
2020-02-02 23:36:47,757 INFO sqlalchemy.engine.base.Engine Thread-345 : (1, 1)
2020-02-02 23:36:47,757 INFO sqlalchemy.engine.base.Engine Thread-346 : (1, 1)
2020-02-02 23:36:47,758 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,758 DEBUG sqlalchemy.engine.base.Engine Thread-345 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,759 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,759 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,760 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
2020-02-02 23:36:47,760 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,761 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,762 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,762 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,761 INFO sqlalchemy.engine.base.Engine Thread-345 : ROLLBACK
2020-02-02 23:36:47,763 INFO sqlalchemy.engine.base.Engine Thread-343 : ROLLBACK
2020-02-02 23:36:47,764 INFO sqlalchemy.engine.base.Engine Thread-344 : ROLLBACK
2020-02-02 23:36:47,840 INFO sqlalchemy.engine.base.Engine Thread-347 : BEGIN (implicit)
2020-02-02 23:36:47,841 INFO sqlalchemy.engine.base.Engine Thread-347 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:47,842 INFO sqlalchemy.engine.base.Engine Thread-347 : (1, 1)
2020-02-02 23:36:47,843 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:47,843 DEBUG sqlalchemy.engine.base.Engine Thread-347 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:47,844 INFO sqlalchemy.engine.base.Engine Thread-347 : ROLLBACK
2020-02-02 23:36:48,234 INFO sqlalchemy.engine.base.Engine Thread-348 : BEGIN (implicit)
2020-02-02 23:36:48,236 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:36:48,236 INFO sqlalchemy.engine.base.Engine Thread-348 : ()
2020-02-02 23:36:48,237 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:36:48,238 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:36:48,238 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:36:48,240 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:48,241 INFO sqlalchemy.engine.base.Engine Thread-348 : (1, 1)
2020-02-02 23:36:48,241 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,242 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,246 INFO sqlalchemy.engine.base.Engine Thread-348 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:36:48,246 INFO sqlalchemy.engine.base.Engine Thread-348 : ('philip', 1, 1)
2020-02-02 23:36:48,247 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,247 DEBUG sqlalchemy.engine.base.Engine Thread-348 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,248 INFO sqlalchemy.engine.base.Engine Thread-348 : ROLLBACK
2020-02-02 23:36:48,675 INFO sqlalchemy.engine.base.Engine Thread-356 : BEGIN (implicit)
2020-02-02 23:36:48,676 INFO sqlalchemy.engine.base.Engine Thread-356 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:48,676 INFO sqlalchemy.engine.base.Engine Thread-356 : (1, 1)
2020-02-02 23:36:48,678 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,681 INFO sqlalchemy.engine.base.Engine Thread-358 : BEGIN (implicit)
2020-02-02 23:36:48,682 INFO sqlalchemy.engine.base.Engine Thread-357 : BEGIN (implicit)
2020-02-02 23:36:48,685 INFO sqlalchemy.engine.base.Engine Thread-359 : BEGIN (implicit)
2020-02-02 23:36:48,686 DEBUG sqlalchemy.engine.base.Engine Thread-356 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,687 INFO sqlalchemy.engine.base.Engine Thread-358 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:48,688 INFO sqlalchemy.engine.base.Engine Thread-357 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:48,689 INFO sqlalchemy.engine.base.Engine Thread-359 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:48,690 INFO sqlalchemy.engine.base.Engine Thread-359 : (1, 1)
2020-02-02 23:36:48,690 INFO sqlalchemy.engine.base.Engine Thread-356 : ROLLBACK
2020-02-02 23:36:48,690 INFO sqlalchemy.engine.base.Engine Thread-357 : (1, 1)
2020-02-02 23:36:48,689 INFO sqlalchemy.engine.base.Engine Thread-358 : (1, 1)
2020-02-02 23:36:48,691 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,693 DEBUG sqlalchemy.engine.base.Engine Thread-359 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,692 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,693 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,694 DEBUG sqlalchemy.engine.base.Engine Thread-357 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,696 INFO sqlalchemy.engine.base.Engine Thread-357 : ROLLBACK
2020-02-02 23:36:48,695 DEBUG sqlalchemy.engine.base.Engine Thread-358 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,694 INFO sqlalchemy.engine.base.Engine Thread-359 : ROLLBACK
2020-02-02 23:36:48,698 INFO sqlalchemy.engine.base.Engine Thread-358 : ROLLBACK
2020-02-02 23:36:48,762 INFO sqlalchemy.engine.base.Engine Thread-360 : BEGIN (implicit)
2020-02-02 23:36:48,763 INFO sqlalchemy.engine.base.Engine Thread-360 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:36:48,763 INFO sqlalchemy.engine.base.Engine Thread-360 : (1, 1)
2020-02-02 23:36:48,764 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:36:48,764 DEBUG sqlalchemy.engine.base.Engine Thread-360 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:36:48,765 INFO sqlalchemy.engine.base.Engine Thread-360 : ROLLBACK
2020-02-02 23:36:48,794 INFO sqlalchemy.engine.base.Engine Thread-361 : BEGIN (implicit)
2020-02-02 23:36:48,796 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:48,796 INFO sqlalchemy.engine.base.Engine Thread-361 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:36:48,797 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:48,797 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:48,797 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:48,797 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:48,797 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:48,801 INFO sqlalchemy.engine.base.Engine Thread-361 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:48,801 INFO sqlalchemy.engine.base.Engine Thread-361 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:36:48,802 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:48,802 DEBUG sqlalchemy.engine.base.Engine Thread-361 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:36:48,803 INFO sqlalchemy.engine.base.Engine Thread-361 : ROLLBACK
2020-02-02 23:36:49,978 INFO sqlalchemy.engine.base.Engine Thread-362 : BEGIN (implicit)
2020-02-02 23:36:49,980 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:49,980 INFO sqlalchemy.engine.base.Engine Thread-362 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:36:49,981 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:49,981 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:49,981 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:49,985 INFO sqlalchemy.engine.base.Engine Thread-362 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:49,985 INFO sqlalchemy.engine.base.Engine Thread-362 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:36:49,986 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:49,986 DEBUG sqlalchemy.engine.base.Engine Thread-362 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:36:49,987 INFO sqlalchemy.engine.base.Engine Thread-362 : ROLLBACK
2020-02-02 23:36:50,438 INFO sqlalchemy.engine.base.Engine Thread-363 : BEGIN (implicit)
2020-02-02 23:36:50,440 INFO sqlalchemy.engine.base.Engine Thread-363 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:50,440 INFO sqlalchemy.engine.base.Engine Thread-363 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'YES')
2020-02-02 23:36:50,441 DEBUG sqlalchemy.engine.base.Engine Thread-363 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:50,442 DEBUG sqlalchemy.engine.base.Engine Thread-363 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:50,442 DEBUG sqlalchemy.engine.base.Engine Thread-363 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:50,445 INFO sqlalchemy.engine.base.Engine Thread-363 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:50,445 INFO sqlalchemy.engine.base.Engine Thread-363 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-02-02 23:36:50,446 DEBUG sqlalchemy.engine.base.Engine Thread-363 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:50,447 DEBUG sqlalchemy.engine.base.Engine Thread-363 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 23:36:50,448 INFO sqlalchemy.engine.base.Engine Thread-363 : ROLLBACK
2020-02-02 23:36:51,048 INFO sqlalchemy.engine.base.Engine Thread-364 : BEGIN (implicit)
2020-02-02 23:36:51,050 INFO sqlalchemy.engine.base.Engine Thread-364 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:51,050 INFO sqlalchemy.engine.base.Engine Thread-364 : ('Salmon', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-02-02 23:36:51,051 DEBUG sqlalchemy.engine.base.Engine Thread-364 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:51,052 DEBUG sqlalchemy.engine.base.Engine Thread-364 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:51,052 DEBUG sqlalchemy.engine.base.Engine Thread-364 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:51,055 INFO sqlalchemy.engine.base.Engine Thread-364 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:51,056 INFO sqlalchemy.engine.base.Engine Thread-364 : ('Lightblue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-02-02 23:36:51,056 DEBUG sqlalchemy.engine.base.Engine Thread-364 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:51,057 INFO sqlalchemy.engine.base.Engine Thread-364 : ROLLBACK
2020-02-02 23:36:51,793 INFO sqlalchemy.engine.base.Engine Thread-365 : BEGIN (implicit)
2020-02-02 23:36:51,795 INFO sqlalchemy.engine.base.Engine Thread-365 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:51,796 INFO sqlalchemy.engine.base.Engine Thread-365 : ('Salmon', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'YES')
2020-02-02 23:36:51,797 DEBUG sqlalchemy.engine.base.Engine Thread-365 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:51,800 INFO sqlalchemy.engine.base.Engine Thread-365 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:51,800 INFO sqlalchemy.engine.base.Engine Thread-365 : ('Lightblue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), 'NO')
2020-02-02 23:36:51,801 DEBUG sqlalchemy.engine.base.Engine Thread-365 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:51,802 INFO sqlalchemy.engine.base.Engine Thread-365 : ROLLBACK
2020-02-02 23:36:52,788 INFO sqlalchemy.engine.base.Engine Thread-366 : BEGIN (implicit)
2020-02-02 23:36:52,790 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:52,790 INFO sqlalchemy.engine.base.Engine Thread-366 : ('Salmon', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'YES')
2020-02-02 23:36:52,791 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:52,792 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:52,795 INFO sqlalchemy.engine.base.Engine Thread-366 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:52,795 INFO sqlalchemy.engine.base.Engine Thread-366 : ('Lightblue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), 'NO')
2020-02-02 23:36:52,796 DEBUG sqlalchemy.engine.base.Engine Thread-366 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:52,797 INFO sqlalchemy.engine.base.Engine Thread-366 : ROLLBACK
2020-02-02 23:36:55,131 INFO sqlalchemy.engine.base.Engine Thread-367 : BEGIN (implicit)
2020-02-02 23:36:55,132 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:55,133 INFO sqlalchemy.engine.base.Engine Thread-367 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'YES')
2020-02-02 23:36:55,133 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:55,134 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:55,134 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:55,137 INFO sqlalchemy.engine.base.Engine Thread-367 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:55,137 INFO sqlalchemy.engine.base.Engine Thread-367 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-02-02 23:36:55,137 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:55,138 DEBUG sqlalchemy.engine.base.Engine Thread-367 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 23:36:55,138 INFO sqlalchemy.engine.base.Engine Thread-367 : ROLLBACK
2020-02-02 23:36:57,404 INFO sqlalchemy.engine.base.Engine Thread-368 : BEGIN (implicit)
2020-02-02 23:36:57,405 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:57,406 INFO sqlalchemy.engine.base.Engine Thread-368 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:36:57,406 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:57,406 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:57,407 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:36:57,410 INFO sqlalchemy.engine.base.Engine Thread-368 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:36:57,410 INFO sqlalchemy.engine.base.Engine Thread-368 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:36:57,410 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:36:57,410 DEBUG sqlalchemy.engine.base.Engine Thread-368 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:36:57,411 INFO sqlalchemy.engine.base.Engine Thread-368 : ROLLBACK
2020-02-02 23:37:01,942 INFO sqlalchemy.engine.base.Engine Thread-369 : BEGIN (implicit)
2020-02-02 23:37:01,943 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:01,944 INFO sqlalchemy.engine.base.Engine Thread-369 : (1, 1)
2020-02-02 23:37:01,944 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:01,944 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:01,947 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:37:01,947 INFO sqlalchemy.engine.base.Engine Thread-369 : ('philip', 1, 1)
2020-02-02 23:37:01,947 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:01,948 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:01,955 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 23:37:01,956 INFO sqlalchemy.engine.base.Engine Thread-369 : ()
2020-02-02 23:37:01,956 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (19, 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:37:01,957 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:37:01,961 INFO sqlalchemy.engine.base.Engine Thread-369 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:37:01,961 INFO sqlalchemy.engine.base.Engine Thread-369 : ('philip', 1, 1)
2020-02-02 23:37:01,962 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:01,962 DEBUG sqlalchemy.engine.base.Engine Thread-369 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:01,964 INFO sqlalchemy.engine.base.Engine Thread-369 : ROLLBACK
2020-02-02 23:37:02,454 INFO sqlalchemy.engine.base.Engine Thread-377 : BEGIN (implicit)
2020-02-02 23:37:02,457 INFO sqlalchemy.engine.base.Engine Thread-377 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:02,457 INFO sqlalchemy.engine.base.Engine Thread-377 : (1, 1)
2020-02-02 23:37:02,459 INFO sqlalchemy.engine.base.Engine Thread-379 : BEGIN (implicit)
2020-02-02 23:37:02,460 INFO sqlalchemy.engine.base.Engine Thread-379 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:02,460 INFO sqlalchemy.engine.base.Engine Thread-379 : (1, 1)
2020-02-02 23:37:02,461 DEBUG sqlalchemy.engine.base.Engine Thread-379 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:02,462 DEBUG sqlalchemy.engine.base.Engine Thread-379 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:02,462 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:02,463 INFO sqlalchemy.engine.base.Engine Thread-378 : BEGIN (implicit)
2020-02-02 23:37:02,466 INFO sqlalchemy.engine.base.Engine Thread-379 : ROLLBACK
2020-02-02 23:37:02,467 INFO sqlalchemy.engine.base.Engine Thread-380 : BEGIN (implicit)
2020-02-02 23:37:02,468 DEBUG sqlalchemy.engine.base.Engine Thread-377 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:02,469 INFO sqlalchemy.engine.base.Engine Thread-378 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:02,470 INFO sqlalchemy.engine.base.Engine Thread-378 : (1, 1)
2020-02-02 23:37:02,470 INFO sqlalchemy.engine.base.Engine Thread-380 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:02,471 INFO sqlalchemy.engine.base.Engine Thread-380 : (1, 1)
2020-02-02 23:37:02,471 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:02,472 INFO sqlalchemy.engine.base.Engine Thread-377 : ROLLBACK
2020-02-02 23:37:02,473 DEBUG sqlalchemy.engine.base.Engine Thread-378 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:02,473 DEBUG sqlalchemy.engine.base.Engine Thread-380 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:02,475 DEBUG sqlalchemy.engine.base.Engine Thread-380 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:02,475 INFO sqlalchemy.engine.base.Engine Thread-378 : ROLLBACK
2020-02-02 23:37:02,476 INFO sqlalchemy.engine.base.Engine Thread-380 : ROLLBACK
2020-02-02 23:37:02,551 INFO sqlalchemy.engine.base.Engine Thread-381 : BEGIN (implicit)
2020-02-02 23:37:02,552 INFO sqlalchemy.engine.base.Engine Thread-381 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:02,552 INFO sqlalchemy.engine.base.Engine Thread-381 : (1, 1)
2020-02-02 23:37:02,553 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:02,553 DEBUG sqlalchemy.engine.base.Engine Thread-381 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:02,554 INFO sqlalchemy.engine.base.Engine Thread-381 : ROLLBACK
2020-02-02 23:37:07,042 INFO sqlalchemy.engine.base.Engine Thread-382 : BEGIN (implicit)
2020-02-02 23:37:07,044 INFO sqlalchemy.engine.base.Engine Thread-382 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:37:07,044 INFO sqlalchemy.engine.base.Engine Thread-382 : ()
2020-02-02 23:37:07,045 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:37:07,046 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:37:07,046 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:37:07,048 INFO sqlalchemy.engine.base.Engine Thread-382 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:07,048 INFO sqlalchemy.engine.base.Engine Thread-382 : (1, 1)
2020-02-02 23:37:07,048 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,049 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,053 INFO sqlalchemy.engine.base.Engine Thread-382 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:37:07,053 INFO sqlalchemy.engine.base.Engine Thread-382 : ('philip', 1, 1)
2020-02-02 23:37:07,054 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,054 DEBUG sqlalchemy.engine.base.Engine Thread-382 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,056 INFO sqlalchemy.engine.base.Engine Thread-382 : ROLLBACK
2020-02-02 23:37:07,476 INFO sqlalchemy.engine.base.Engine Thread-390 : BEGIN (implicit)
2020-02-02 23:37:07,477 INFO sqlalchemy.engine.base.Engine Thread-390 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:07,477 INFO sqlalchemy.engine.base.Engine Thread-390 : (1, 1)
2020-02-02 23:37:07,479 DEBUG sqlalchemy.engine.base.Engine Thread-390 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,480 DEBUG sqlalchemy.engine.base.Engine Thread-390 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,481 INFO sqlalchemy.engine.base.Engine Thread-391 : BEGIN (implicit)
2020-02-02 23:37:07,482 INFO sqlalchemy.engine.base.Engine Thread-391 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:07,483 INFO sqlalchemy.engine.base.Engine Thread-390 : ROLLBACK
2020-02-02 23:37:07,483 INFO sqlalchemy.engine.base.Engine Thread-391 : (1, 1)
2020-02-02 23:37:07,486 INFO sqlalchemy.engine.base.Engine Thread-392 : BEGIN (implicit)
2020-02-02 23:37:07,489 INFO sqlalchemy.engine.base.Engine Thread-392 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:07,489 INFO sqlalchemy.engine.base.Engine Thread-392 : (1, 1)
2020-02-02 23:37:07,491 INFO sqlalchemy.engine.base.Engine Thread-393 : BEGIN (implicit)
2020-02-02 23:37:07,491 DEBUG sqlalchemy.engine.base.Engine Thread-391 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,492 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,494 DEBUG sqlalchemy.engine.base.Engine Thread-392 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,493 DEBUG sqlalchemy.engine.base.Engine Thread-391 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,493 INFO sqlalchemy.engine.base.Engine Thread-393 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:07,494 INFO sqlalchemy.engine.base.Engine Thread-393 : (1, 1)
2020-02-02 23:37:07,495 INFO sqlalchemy.engine.base.Engine Thread-391 : ROLLBACK
2020-02-02 23:37:07,496 INFO sqlalchemy.engine.base.Engine Thread-392 : ROLLBACK
2020-02-02 23:37:07,497 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,498 DEBUG sqlalchemy.engine.base.Engine Thread-393 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,499 INFO sqlalchemy.engine.base.Engine Thread-393 : ROLLBACK
2020-02-02 23:37:07,572 INFO sqlalchemy.engine.base.Engine Thread-394 : BEGIN (implicit)
2020-02-02 23:37:07,573 INFO sqlalchemy.engine.base.Engine Thread-394 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:07,573 INFO sqlalchemy.engine.base.Engine Thread-394 : (1, 1)
2020-02-02 23:37:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-394 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-394 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:07,575 INFO sqlalchemy.engine.base.Engine Thread-394 : ROLLBACK
2020-02-02 23:37:07,604 INFO sqlalchemy.engine.base.Engine Thread-395 : BEGIN (implicit)
2020-02-02 23:37:07,606 INFO sqlalchemy.engine.base.Engine Thread-395 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:07,606 INFO sqlalchemy.engine.base.Engine Thread-395 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:37:07,607 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:07,607 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:07,607 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:07,608 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:07,608 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:07,611 INFO sqlalchemy.engine.base.Engine Thread-395 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:07,611 INFO sqlalchemy.engine.base.Engine Thread-395 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:37:07,611 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:07,612 DEBUG sqlalchemy.engine.base.Engine Thread-395 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:37:07,612 INFO sqlalchemy.engine.base.Engine Thread-395 : ROLLBACK
2020-02-02 23:37:09,222 INFO sqlalchemy.engine.base.Engine Thread-396 : BEGIN (implicit)
2020-02-02 23:37:09,223 INFO sqlalchemy.engine.base.Engine Thread-396 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:09,223 INFO sqlalchemy.engine.base.Engine Thread-396 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:37:09,224 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:09,225 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:09,225 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:09,228 INFO sqlalchemy.engine.base.Engine Thread-396 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:09,228 INFO sqlalchemy.engine.base.Engine Thread-396 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:37:09,228 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:09,229 DEBUG sqlalchemy.engine.base.Engine Thread-396 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:37:09,229 INFO sqlalchemy.engine.base.Engine Thread-396 : ROLLBACK
2020-02-02 23:37:09,661 INFO sqlalchemy.engine.base.Engine Thread-397 : BEGIN (implicit)
2020-02-02 23:37:09,662 INFO sqlalchemy.engine.base.Engine Thread-397 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:09,662 INFO sqlalchemy.engine.base.Engine Thread-397 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'YES')
2020-02-02 23:37:09,663 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:09,663 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:09,664 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:09,667 INFO sqlalchemy.engine.base.Engine Thread-397 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:09,667 INFO sqlalchemy.engine.base.Engine Thread-397 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-02-02 23:37:09,667 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:09,668 DEBUG sqlalchemy.engine.base.Engine Thread-397 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 23:37:09,668 INFO sqlalchemy.engine.base.Engine Thread-397 : ROLLBACK
2020-02-02 23:37:39,394 INFO sqlalchemy.engine.base.Engine Thread-398 : BEGIN (implicit)
2020-02-02 23:37:39,396 INFO sqlalchemy.engine.base.Engine Thread-398 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:39,396 INFO sqlalchemy.engine.base.Engine Thread-398 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'YES')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,397 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:37:39,401 INFO sqlalchemy.engine.base.Engine Thread-398 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:37:39,401 INFO sqlalchemy.engine.base.Engine Thread-398 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'NO')
2020-02-02 23:37:39,402 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:37:39,402 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:37:39,402 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 23:37:39,402 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'No', 'Lightblue', 'black')
2020-02-02 23:37:39,402 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'No', 'Lightblue', 'black')
2020-02-02 23:37:39,402 DEBUG sqlalchemy.engine.base.Engine Thread-398 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'No', 'Lightblue', 'black')
2020-02-02 23:37:39,403 INFO sqlalchemy.engine.base.Engine Thread-398 : ROLLBACK
2020-02-02 23:37:39,693 INFO sqlalchemy.engine.base.Engine Thread-399 : BEGIN (implicit)
2020-02-02 23:37:39,694 INFO sqlalchemy.engine.base.Engine Thread-399 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:37:39,694 INFO sqlalchemy.engine.base.Engine Thread-399 : (1, 1)
2020-02-02 23:37:39,695 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:37:39,695 DEBUG sqlalchemy.engine.base.Engine Thread-399 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:37:39,696 INFO sqlalchemy.engine.base.Engine Thread-399 : ROLLBACK
2020-02-02 23:38:43,931 INFO sqlalchemy.engine.base.Engine Thread-400 : BEGIN (implicit)
2020-02-02 23:38:43,933 INFO sqlalchemy.engine.base.Engine Thread-400 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:43,933 INFO sqlalchemy.engine.base.Engine Thread-400 : (1, 1)
2020-02-02 23:38:43,934 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:43,935 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:43,938 INFO sqlalchemy.engine.base.Engine Thread-400 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:43,938 INFO sqlalchemy.engine.base.Engine Thread-400 : ('philip', 1, 1)
2020-02-02 23:38:43,939 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:43,939 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:43,948 INFO sqlalchemy.engine.base.Engine Thread-400 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 23:38:43,948 INFO sqlalchemy.engine.base.Engine Thread-400 : ()
2020-02-02 23:38:43,949 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 23:38:43,949 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,949 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,949 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:43,949 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,949 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (19, 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:43,950 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:43,955 INFO sqlalchemy.engine.base.Engine Thread-400 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:43,955 INFO sqlalchemy.engine.base.Engine Thread-400 : ('philip', 1, 1)
2020-02-02 23:38:43,956 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:43,956 DEBUG sqlalchemy.engine.base.Engine Thread-400 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:43,959 INFO sqlalchemy.engine.base.Engine Thread-400 : ROLLBACK
2020-02-02 23:38:44,471 INFO sqlalchemy.engine.base.Engine Thread-408 : BEGIN (implicit)
2020-02-02 23:38:44,474 INFO sqlalchemy.engine.base.Engine Thread-408 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:44,475 INFO sqlalchemy.engine.base.Engine Thread-408 : (1, 1)
2020-02-02 23:38:44,475 INFO sqlalchemy.engine.base.Engine Thread-409 : BEGIN (implicit)
2020-02-02 23:38:44,477 INFO sqlalchemy.engine.base.Engine Thread-409 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:44,477 INFO sqlalchemy.engine.base.Engine Thread-409 : (1, 1)
2020-02-02 23:38:44,478 INFO sqlalchemy.engine.base.Engine Thread-410 : BEGIN (implicit)
2020-02-02 23:38:44,479 INFO sqlalchemy.engine.base.Engine Thread-410 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:44,480 INFO sqlalchemy.engine.base.Engine Thread-410 : (1, 1)
2020-02-02 23:38:44,480 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:44,481 DEBUG sqlalchemy.engine.base.Engine Thread-408 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:44,481 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:44,484 DEBUG sqlalchemy.engine.base.Engine Thread-410 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:44,483 INFO sqlalchemy.engine.base.Engine Thread-408 : ROLLBACK
2020-02-02 23:38:44,482 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:44,488 DEBUG sqlalchemy.engine.base.Engine Thread-409 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:44,487 INFO sqlalchemy.engine.base.Engine Thread-411 : BEGIN (implicit)
2020-02-02 23:38:44,485 INFO sqlalchemy.engine.base.Engine Thread-410 : ROLLBACK
2020-02-02 23:38:44,489 INFO sqlalchemy.engine.base.Engine Thread-411 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:44,491 INFO sqlalchemy.engine.base.Engine Thread-409 : ROLLBACK
2020-02-02 23:38:44,491 INFO sqlalchemy.engine.base.Engine Thread-411 : (1, 1)
2020-02-02 23:38:44,493 DEBUG sqlalchemy.engine.base.Engine Thread-411 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:44,493 DEBUG sqlalchemy.engine.base.Engine Thread-411 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:44,494 INFO sqlalchemy.engine.base.Engine Thread-411 : ROLLBACK
2020-02-02 23:38:44,560 INFO sqlalchemy.engine.base.Engine Thread-412 : BEGIN (implicit)
2020-02-02 23:38:44,561 INFO sqlalchemy.engine.base.Engine Thread-412 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:44,561 INFO sqlalchemy.engine.base.Engine Thread-412 : (1, 1)
2020-02-02 23:38:44,562 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:44,562 DEBUG sqlalchemy.engine.base.Engine Thread-412 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:44,563 INFO sqlalchemy.engine.base.Engine Thread-412 : ROLLBACK
2020-02-02 23:38:45,679 INFO sqlalchemy.engine.base.Engine Thread-413 : BEGIN (implicit)
2020-02-02 23:38:45,680 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:45,680 INFO sqlalchemy.engine.base.Engine Thread-413 : (1, 1)
2020-02-02 23:38:45,681 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:45,681 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:45,684 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:45,684 INFO sqlalchemy.engine.base.Engine Thread-413 : ('philip', 1, 1)
2020-02-02 23:38:45,685 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:45,685 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:45,686 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-02 23:38:45,686 INFO sqlalchemy.engine.base.Engine Thread-413 : ('19', 1)
2020-02-02 23:38:45,687 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-02 23:38:45,687 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (19, 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 83, '', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 23:38:45,690 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:38:45,690 INFO sqlalchemy.engine.base.Engine Thread-413 : (82,)
2020-02-02 23:38:45,691 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:45,694 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-02 23:38:45,694 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-02 23:38:45,694 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-02 23:38:45,695 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-02 23:38:45,695 INFO sqlalchemy.engine.base.Engine Thread-413 : (1,)
2020-02-02 23:38:45,696 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:45,696 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-02 23:38:45,696 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-02 23:38:45,698 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:38:45,698 INFO sqlalchemy.engine.base.Engine Thread-413 : (105,)
2020-02-02 23:38:45,698 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:45,699 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:38:45,699 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:38:45,700 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:38:45,700 INFO sqlalchemy.engine.base.Engine Thread-413 : (105,)
2020-02-02 23:38:45,701 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:45,701 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:38:45,701 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:38:45,708 INFO sqlalchemy.engine.base.Engine Thread-413 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:45,708 INFO sqlalchemy.engine.base.Engine Thread-413 : ('philip', 1, 1)
2020-02-02 23:38:45,709 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:45,709 DEBUG sqlalchemy.engine.base.Engine Thread-413 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:45,711 INFO sqlalchemy.engine.base.Engine Thread-413 : ROLLBACK
2020-02-02 23:38:46,144 INFO sqlalchemy.engine.base.Engine Thread-421 : BEGIN (implicit)
2020-02-02 23:38:46,145 INFO sqlalchemy.engine.base.Engine Thread-421 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:46,145 INFO sqlalchemy.engine.base.Engine Thread-421 : (1, 1)
2020-02-02 23:38:46,146 DEBUG sqlalchemy.engine.base.Engine Thread-421 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:46,146 DEBUG sqlalchemy.engine.base.Engine Thread-421 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:46,148 INFO sqlalchemy.engine.base.Engine Thread-422 : BEGIN (implicit)
2020-02-02 23:38:46,149 INFO sqlalchemy.engine.base.Engine Thread-421 : ROLLBACK
2020-02-02 23:38:46,150 INFO sqlalchemy.engine.base.Engine Thread-422 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:46,151 INFO sqlalchemy.engine.base.Engine Thread-423 : BEGIN (implicit)
2020-02-02 23:38:46,153 INFO sqlalchemy.engine.base.Engine Thread-424 : BEGIN (implicit)
2020-02-02 23:38:46,153 INFO sqlalchemy.engine.base.Engine Thread-422 : (1, 1)
2020-02-02 23:38:46,157 DEBUG sqlalchemy.engine.base.Engine Thread-422 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:46,156 INFO sqlalchemy.engine.base.Engine Thread-424 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:46,157 DEBUG sqlalchemy.engine.base.Engine Thread-422 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:46,159 INFO sqlalchemy.engine.base.Engine Thread-422 : ROLLBACK
2020-02-02 23:38:46,158 INFO sqlalchemy.engine.base.Engine Thread-424 : (1, 1)
2020-02-02 23:38:46,154 INFO sqlalchemy.engine.base.Engine Thread-423 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:46,159 INFO sqlalchemy.engine.base.Engine Thread-423 : (1, 1)
2020-02-02 23:38:46,160 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:46,160 DEBUG sqlalchemy.engine.base.Engine Thread-424 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:46,161 INFO sqlalchemy.engine.base.Engine Thread-424 : ROLLBACK
2020-02-02 23:38:46,162 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:46,163 DEBUG sqlalchemy.engine.base.Engine Thread-423 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:46,164 INFO sqlalchemy.engine.base.Engine Thread-423 : ROLLBACK
2020-02-02 23:38:46,229 INFO sqlalchemy.engine.base.Engine Thread-425 : BEGIN (implicit)
2020-02-02 23:38:46,230 INFO sqlalchemy.engine.base.Engine Thread-425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:46,230 INFO sqlalchemy.engine.base.Engine Thread-425 : (1, 1)
2020-02-02 23:38:46,230 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:46,231 DEBUG sqlalchemy.engine.base.Engine Thread-425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:46,232 INFO sqlalchemy.engine.base.Engine Thread-425 : ROLLBACK
2020-02-02 23:38:54,173 INFO sqlalchemy.engine.base.Engine Thread-426 : BEGIN (implicit)
2020-02-02 23:38:54,174 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,174 INFO sqlalchemy.engine.base.Engine Thread-426 : (1, 1)
2020-02-02 23:38:54,175 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,176 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,178 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:54,178 INFO sqlalchemy.engine.base.Engine Thread-426 : ('philip', 1, 1)
2020-02-02 23:38:54,179 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,179 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,181 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-02 23:38:54,181 INFO sqlalchemy.engine.base.Engine Thread-426 : ('19', 1)
2020-02-02 23:38:54,181 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-02 23:38:54,181 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (19, 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 83, '', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 2, 17, 23, 45), 'GBR,IND', 106, 106)
2020-02-02 23:38:54,185 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:38:54,185 INFO sqlalchemy.engine.base.Engine Thread-426 : (82,)
2020-02-02 23:38:54,185 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:54,185 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-02 23:38:54,185 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-02 23:38:54,186 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-02 23:38:54,187 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-02 23:38:54,187 INFO sqlalchemy.engine.base.Engine Thread-426 : (1,)
2020-02-02 23:38:54,187 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:54,188 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-02 23:38:54,188 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-02 23:38:54,189 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:38:54,189 INFO sqlalchemy.engine.base.Engine Thread-426 : (105,)
2020-02-02 23:38:54,189 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:38:54,190 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:38:54,192 INFO sqlalchemy.engine.base.Engine Thread-426 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-02 23:38:54,192 INFO sqlalchemy.engine.base.Engine Thread-426 : (105,)
2020-02-02 23:38:54,192 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-02 23:38:54,192 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-02 23:38:54,192 DEBUG sqlalchemy.engine.base.Engine Thread-426 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-02 23:38:54,194 INFO sqlalchemy.engine.base.Engine Thread-426 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-02-02 23:38:54,194 INFO sqlalchemy.engine.base.Engine Thread-426 : ('19', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 17, 23, 45), 19)
2020-02-02 23:38:54,195 INFO sqlalchemy.engine.base.Engine Thread-426 : COMMIT
2020-02-02 23:38:54,320 INFO sqlalchemy.engine.base.Engine Thread-427 : BEGIN (implicit)
2020-02-02 23:38:54,321 INFO sqlalchemy.engine.base.Engine Thread-427 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,321 INFO sqlalchemy.engine.base.Engine Thread-427 : (1, 1)
2020-02-02 23:38:54,322 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,322 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,325 INFO sqlalchemy.engine.base.Engine Thread-427 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:54,325 INFO sqlalchemy.engine.base.Engine Thread-427 : ('philip', 1, 1)
2020-02-02 23:38:54,326 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,326 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,335 INFO sqlalchemy.engine.base.Engine Thread-427 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-02 23:38:54,336 INFO sqlalchemy.engine.base.Engine Thread-427 : ()
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (19, 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', 'GBR,IND', datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 17, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,337 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:54,338 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:54,338 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-02 23:38:54,338 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-02 23:38:54,342 INFO sqlalchemy.engine.base.Engine Thread-427 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:54,342 INFO sqlalchemy.engine.base.Engine Thread-427 : ('philip', 1, 1)
2020-02-02 23:38:54,343 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,343 DEBUG sqlalchemy.engine.base.Engine Thread-427 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,347 INFO sqlalchemy.engine.base.Engine Thread-427 : ROLLBACK
2020-02-02 23:38:54,837 INFO sqlalchemy.engine.base.Engine Thread-435 : BEGIN (implicit)
2020-02-02 23:38:54,839 INFO sqlalchemy.engine.base.Engine Thread-436 : BEGIN (implicit)
2020-02-02 23:38:54,841 INFO sqlalchemy.engine.base.Engine Thread-435 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,843 INFO sqlalchemy.engine.base.Engine Thread-436 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,849 INFO sqlalchemy.engine.base.Engine Thread-436 : (1, 1)
2020-02-02 23:38:54,849 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,848 INFO sqlalchemy.engine.base.Engine Thread-435 : (1, 1)
2020-02-02 23:38:54,848 INFO sqlalchemy.engine.base.Engine Thread-437 : BEGIN (implicit)
2020-02-02 23:38:54,845 INFO sqlalchemy.engine.base.Engine Thread-438 : BEGIN (implicit)
2020-02-02 23:38:54,852 INFO sqlalchemy.engine.base.Engine Thread-438 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,851 INFO sqlalchemy.engine.base.Engine Thread-437 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,851 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,850 DEBUG sqlalchemy.engine.base.Engine Thread-436 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,852 INFO sqlalchemy.engine.base.Engine Thread-438 : (1, 1)
2020-02-02 23:38:54,853 INFO sqlalchemy.engine.base.Engine Thread-437 : (1, 1)
2020-02-02 23:38:54,853 DEBUG sqlalchemy.engine.base.Engine Thread-435 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,854 DEBUG sqlalchemy.engine.base.Engine Thread-437 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,855 DEBUG sqlalchemy.engine.base.Engine Thread-437 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,856 INFO sqlalchemy.engine.base.Engine Thread-435 : ROLLBACK
2020-02-02 23:38:54,856 DEBUG sqlalchemy.engine.base.Engine Thread-438 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,857 INFO sqlalchemy.engine.base.Engine Thread-436 : ROLLBACK
2020-02-02 23:38:54,858 INFO sqlalchemy.engine.base.Engine Thread-437 : ROLLBACK
2020-02-02 23:38:54,859 DEBUG sqlalchemy.engine.base.Engine Thread-438 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,861 INFO sqlalchemy.engine.base.Engine Thread-438 : ROLLBACK
2020-02-02 23:38:54,975 INFO sqlalchemy.engine.base.Engine Thread-439 : BEGIN (implicit)
2020-02-02 23:38:54,976 INFO sqlalchemy.engine.base.Engine Thread-439 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:54,976 INFO sqlalchemy.engine.base.Engine Thread-439 : (1, 1)
2020-02-02 23:38:54,977 DEBUG sqlalchemy.engine.base.Engine Thread-439 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:54,977 DEBUG sqlalchemy.engine.base.Engine Thread-439 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:54,978 INFO sqlalchemy.engine.base.Engine Thread-439 : ROLLBACK
2020-02-02 23:38:56,966 INFO sqlalchemy.engine.base.Engine Thread-440 : BEGIN (implicit)
2020-02-02 23:38:56,968 INFO sqlalchemy.engine.base.Engine Thread-440 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-02 23:38:56,968 INFO sqlalchemy.engine.base.Engine Thread-440 : ()
2020-02-02 23:38:56,970 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-02 23:38:56,970 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-02 23:38:56,970 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-02 23:38:56,972 INFO sqlalchemy.engine.base.Engine Thread-440 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:56,973 INFO sqlalchemy.engine.base.Engine Thread-440 : (1, 1)
2020-02-02 23:38:56,973 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:56,973 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:56,978 INFO sqlalchemy.engine.base.Engine Thread-440 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-02 23:38:56,978 INFO sqlalchemy.engine.base.Engine Thread-440 : ('philip', 1, 1)
2020-02-02 23:38:56,979 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:56,979 DEBUG sqlalchemy.engine.base.Engine Thread-440 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:56,981 INFO sqlalchemy.engine.base.Engine Thread-440 : ROLLBACK
2020-02-02 23:38:57,431 INFO sqlalchemy.engine.base.Engine Thread-450 : BEGIN (implicit)
2020-02-02 23:38:57,433 INFO sqlalchemy.engine.base.Engine Thread-448 : BEGIN (implicit)
2020-02-02 23:38:57,434 INFO sqlalchemy.engine.base.Engine Thread-450 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:57,438 INFO sqlalchemy.engine.base.Engine Thread-450 : (1, 1)
2020-02-02 23:38:57,435 INFO sqlalchemy.engine.base.Engine Thread-449 : BEGIN (implicit)
2020-02-02 23:38:57,438 INFO sqlalchemy.engine.base.Engine Thread-451 : BEGIN (implicit)
2020-02-02 23:38:57,436 INFO sqlalchemy.engine.base.Engine Thread-448 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:57,441 INFO sqlalchemy.engine.base.Engine Thread-448 : (1, 1)
2020-02-02 23:38:57,439 DEBUG sqlalchemy.engine.base.Engine Thread-450 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:57,441 DEBUG sqlalchemy.engine.base.Engine Thread-450 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:57,439 INFO sqlalchemy.engine.base.Engine Thread-449 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:57,443 INFO sqlalchemy.engine.base.Engine Thread-449 : (1, 1)
2020-02-02 23:38:57,442 DEBUG sqlalchemy.engine.base.Engine Thread-448 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:57,443 INFO sqlalchemy.engine.base.Engine Thread-450 : ROLLBACK
2020-02-02 23:38:57,440 INFO sqlalchemy.engine.base.Engine Thread-451 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:57,444 INFO sqlalchemy.engine.base.Engine Thread-451 : (1, 1)
2020-02-02 23:38:57,444 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:57,445 DEBUG sqlalchemy.engine.base.Engine Thread-449 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:57,443 DEBUG sqlalchemy.engine.base.Engine Thread-448 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:57,446 INFO sqlalchemy.engine.base.Engine Thread-449 : ROLLBACK
2020-02-02 23:38:57,447 INFO sqlalchemy.engine.base.Engine Thread-448 : ROLLBACK
2020-02-02 23:38:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-451 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:57,449 DEBUG sqlalchemy.engine.base.Engine Thread-451 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:57,450 INFO sqlalchemy.engine.base.Engine Thread-451 : ROLLBACK
2020-02-02 23:38:57,533 INFO sqlalchemy.engine.base.Engine Thread-452 : BEGIN (implicit)
2020-02-02 23:38:57,534 INFO sqlalchemy.engine.base.Engine Thread-452 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-02 23:38:57,535 INFO sqlalchemy.engine.base.Engine Thread-452 : (1, 1)
2020-02-02 23:38:57,535 DEBUG sqlalchemy.engine.base.Engine Thread-452 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-02 23:38:57,536 DEBUG sqlalchemy.engine.base.Engine Thread-452 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-02 23:38:57,537 INFO sqlalchemy.engine.base.Engine Thread-452 : ROLLBACK
2020-02-02 23:38:57,553 INFO sqlalchemy.engine.base.Engine Thread-453 : BEGIN (implicit)
2020-02-02 23:38:57,555 INFO sqlalchemy.engine.base.Engine Thread-453 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:38:57,555 INFO sqlalchemy.engine.base.Engine Thread-453 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'YES')
2020-02-02 23:38:57,556 DEBUG sqlalchemy.engine.base.Engine Thread-453 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:38:57,556 DEBUG sqlalchemy.engine.base.Engine Thread-453 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:57,556 DEBUG sqlalchemy.engine.base.Engine Thread-453 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:57,556 DEBUG sqlalchemy.engine.base.Engine Thread-453 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:57,560 INFO sqlalchemy.engine.base.Engine Thread-453 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:38:57,560 INFO sqlalchemy.engine.base.Engine Thread-453 : ('Lightblue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), 'NO')
2020-02-02 23:38:57,560 DEBUG sqlalchemy.engine.base.Engine Thread-453 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:38:57,561 DEBUG sqlalchemy.engine.base.Engine Thread-453 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:38:57,562 INFO sqlalchemy.engine.base.Engine Thread-453 : ROLLBACK
2020-02-02 23:38:58,826 INFO sqlalchemy.engine.base.Engine Thread-454 : BEGIN (implicit)
2020-02-02 23:38:58,828 INFO sqlalchemy.engine.base.Engine Thread-454 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:38:58,828 INFO sqlalchemy.engine.base.Engine Thread-454 : ('Salmon', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'YES')
2020-02-02 23:38:58,829 DEBUG sqlalchemy.engine.base.Engine Thread-454 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:38:58,830 DEBUG sqlalchemy.engine.base.Engine Thread-454 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:58,830 DEBUG sqlalchemy.engine.base.Engine Thread-454 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:58,833 INFO sqlalchemy.engine.base.Engine Thread-454 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:38:58,833 INFO sqlalchemy.engine.base.Engine Thread-454 : ('Lightblue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), 'NO')
2020-02-02 23:38:58,834 DEBUG sqlalchemy.engine.base.Engine Thread-454 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:38:58,834 DEBUG sqlalchemy.engine.base.Engine Thread-454 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'No', 'Lightblue', 'black')
2020-02-02 23:38:58,835 INFO sqlalchemy.engine.base.Engine Thread-454 : ROLLBACK
2020-02-02 23:38:59,392 INFO sqlalchemy.engine.base.Engine Thread-455 : BEGIN (implicit)
2020-02-02 23:38:59,394 INFO sqlalchemy.engine.base.Engine Thread-455 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:38:59,394 INFO sqlalchemy.engine.base.Engine Thread-455 : ('Salmon', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'YES')
2020-02-02 23:38:59,395 DEBUG sqlalchemy.engine.base.Engine Thread-455 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:38:59,395 DEBUG sqlalchemy.engine.base.Engine Thread-455 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:59,395 DEBUG sqlalchemy.engine.base.Engine Thread-455 : Row (datetime.datetime(2020, 4, 14, 0, 0), datetime.datetime(2020, 4, 17, 23, 45), 'Change Freeze RED abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz', '', 'Yes', 'Salmon', 'black')
2020-02-02 23:38:59,399 INFO sqlalchemy.engine.base.Engine Thread-455 : SELECT anon_1.start AS anon_1_start, anon_1.end AS anon_1_end, anon_1.title AS anon_1_title, anon_1.description AS anon_1_description, anon_1.locked AS anon_1_locked, %s AS `backgroundColor`, %s AS `textColor` 
FROM (SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AS anon_1 
WHERE lower(anon_1.locked) LIKE lower(%s)
2020-02-02 23:38:59,399 INFO sqlalchemy.engine.base.Engine Thread-455 : ('Lightblue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), 'NO')
2020-02-02 23:38:59,400 DEBUG sqlalchemy.engine.base.Engine Thread-455 : Col ('anon_1_start', 'anon_1_end', 'anon_1_title', 'anon_1_description', 'anon_1_locked', 'backgroundColor', 'textColor')
2020-02-02 23:38:59,401 DEBUG sqlalchemy.engine.base.Engine Thread-455 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'No', 'Lightblue', 'black')
2020-02-02 23:38:59,401 INFO sqlalchemy.engine.base.Engine Thread-455 : ROLLBACK
