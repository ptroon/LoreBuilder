2020-01-26 16:43:54,677 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 16:43:54,678 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,679 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-01-26 16:43:54,680 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('sql_mode', '')
2020-01-26 16:43:54,681 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 16:43:54,681 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,681 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-01-26 16:43:54,681 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('lower_case_table_names', '0')
2020-01-26 16:43:54,682 INFO sqlalchemy.engine.base.Engine MainThread : SELECT DATABASE()
2020-01-26 16:43:54,682 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,682 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('DATABASE()',)
2020-01-26 16:43:54,682 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('fmapp',)
2020-01-26 16:43:54,683 INFO sqlalchemy.engine.base.Engine MainThread : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 16:43:54,683 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,683 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 16:43:54,684 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 16:43:54,685 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 16:43:54,685 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,685 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 16:43:54,685 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,686 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 16:43:54,686 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,687 INFO sqlalchemy.engine.base.Engine MainThread : BEGIN (implicit)
2020-01-26 16:43:54,688 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 16:43:54,688 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:43:54,689 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 16:43:54,690 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 16:43:54,690 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 16:43:54,690 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 16:43:54,690 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 16:43:54,690 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 16:44:26,327 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, User.created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 16:44:26,327 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 16:59:24,189 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, to_char(users.created_date, %s) AS to_char_1, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 16:59:24,189 INFO sqlalchemy.engine.base.Engine MainThread : ('%Y-%m-%d %H:%M',)
2020-01-26 17:05:45,972 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:05:45,972 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:05:45,974 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:05:45,974 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:05:45,974 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:05:45,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:05:45,975 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:05:45,975 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,976 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:05:45,976 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:05:45,976 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:05:45,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,977 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:05:45,977 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:05:45,978 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:05:45,978 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,979 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:05:45,979 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,980 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:05:45,980 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:05:45,981 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:05:45,983 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:05:45,983 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 17:05:45,984 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:05:45,984 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:05:46,011 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:05:52,309 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-26 17:05:52,310 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:05:52,310 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-26 17:05:52,311 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:05:52,311 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:06:17,032 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:06:17,032 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,034 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:06:17,034 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:06:17,035 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:06:17,035 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,035 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:06:17,035 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:06:17,036 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:06:17,036 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,036 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:06:17,036 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:06:17,037 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:06:17,037 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,038 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:06:17,038 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:06:17,038 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:06:17,039 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,039 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:06:17,039 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,040 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:06:17,040 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,040 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:06:17,043 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:06:17,043 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:06:17,044 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:06:17,044 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:06:17,048 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:06:17,048 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:06:17,049 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:06:17,049 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:06:17,049 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:06:17,049 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:06:17,049 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:06:17,049 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:07:32,126 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:07:32,126 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:07:32,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:07:32,128 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:07:32,128 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:07:32,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:07:32,130 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:07:32,130 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,130 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:07:32,130 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:07:32,131 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:07:32,131 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,131 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:07:32,132 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:07:32,132 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:07:32,132 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,133 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:07:32,133 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,133 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:07:32,134 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,134 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:07:32,136 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:07:32,136 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:07:32,137 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:07:32,137 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:07:32,140 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:07:32,140 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:07:32,141 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:07:32,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:07:32,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:07:32,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:07:32,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:07:32,142 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:08:23,965 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:08:23,965 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,966 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:08:23,966 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:08:23,967 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:08:23,967 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,967 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:08:23,967 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:08:23,968 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:08:23,968 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:08:23,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:08:23,969 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:08:23,969 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:08:23,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:08:23,970 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:08:23,970 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,970 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:08:23,971 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,971 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:08:23,971 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,972 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:08:23,974 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:08:23,975 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:08:23,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:08:23,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:08:23,978 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:08:23,978 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:08:23,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:08:23,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:08:23,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:08:23,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:08:23,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:08:23,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:13:47,173 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:13:47,173 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:13:47,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:13:47,176 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:13:47,176 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:13:47,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:13:47,177 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:13:47,177 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:13:47,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:13:47,178 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:13:47,178 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:13:47,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:13:47,179 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:13:47,179 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,180 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:13:47,180 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,181 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:13:47,181 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,181 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:13:47,183 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:13:47,184 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:13:47,185 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:13:47,185 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:13:47,188 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:13:47,188 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:13:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:13:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:13:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:13:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:13:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:13:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:16:46,900 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:16:46,901 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,902 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:16:46,902 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:16:46,903 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:16:46,903 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,903 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:16:46,903 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:16:46,904 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:16:46,904 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:16:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:16:46,905 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:16:46,905 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,905 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:16:46,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:16:46,906 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:16:46,906 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,907 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:16:46,907 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,908 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:16:46,908 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,908 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:16:46,911 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:16:46,911 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:16:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:16:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:16:46,915 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:16:46,915 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:16:46,916 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:16:46,916 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:16:46,916 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:16:46,916 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:16:46,916 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:16:46,916 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:17:14,488 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:17:14,488 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,489 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:17:14,490 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:17:14,490 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:17:14,490 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:17:14,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:17:14,491 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:17:14,491 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:17:14,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:17:14,492 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:17:14,492 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,493 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:17:14,493 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:17:14,494 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:17:14,494 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,494 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:17:14,494 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,495 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:17:14,495 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,496 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:17:14,498 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:17:14,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:17:14,499 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:17:14,500 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:17:14,503 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:17:14,503 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:17:14,503 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:17:14,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:17:14,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:17:14,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:17:14,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:17:14,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:17:14,506 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:18:10,921 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:18:10,921 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,923 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:18:10,923 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:18:10,924 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:18:10,924 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,924 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:18:10,924 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:18:10,925 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:18:10,925 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,925 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:18:10,925 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:18:10,925 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:18:10,925 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,926 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:18:10,926 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:18:10,927 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:18:10,927 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,927 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:18:10,928 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,928 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:18:10,928 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,929 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:18:10,931 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:18:10,931 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:18:10,932 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:18:10,932 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:18:10,935 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:18:10,935 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:18:10,936 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:18:10,936 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:18:10,937 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:18:10,937 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:18:10,937 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:18:10,937 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:18:10,938 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:18:12,934 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:18:12,936 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:18:12,936 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:18:12,936 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:18:12,937 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:18:12,939 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:18:12,939 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 17:18:12,939 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:18:12,940 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:18:12,940 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:18:12,940 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:18:12,940 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:18:12,940 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:18:12,941 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:18:14,297 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 17:18:14,299 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:18:14,299 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-26 17:18:14,299 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:18:14,300 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:18:14,302 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:18:14,302 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 17:18:14,302 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:18:14,303 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:18:14,303 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:18:14,303 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:18:14,303 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:18:14,303 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:18:14,304 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 17:19:03,259 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:19:03,260 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,261 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:19:03,261 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:19:03,262 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:19:03,262 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,262 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:19:03,262 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:19:03,263 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:19:03,263 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,263 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:19:03,263 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:19:03,263 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:19:03,263 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,264 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:19:03,264 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:19:03,265 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:19:03,265 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,265 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:19:03,266 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,266 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:19:03,266 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,267 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:19:03,269 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:19:03,270 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:19:03,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:19:03,271 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:19:03,273 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:19:03,274 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:03,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:19:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:19:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:19:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:19:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:19:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:19:23,036 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:19:23,036 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,037 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:19:23,038 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:19:23,038 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:19:23,038 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,039 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:19:23,039 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:19:23,039 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:19:23,039 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,040 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:19:23,040 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:19:23,040 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:19:23,040 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,041 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:19:23,041 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:19:23,041 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:19:23,041 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,042 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:19:23,042 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,043 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:19:23,043 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,043 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:19:23,046 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:19:23,046 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:19:23,046 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:19:23,047 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:19:23,050 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:19:23,050 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:19:23,050 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:19:23,051 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:19:23,051 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:19:23,051 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:19:23,051 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:19:23,051 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:19:24,708 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:19:24,710 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:19:24,712 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:19:24,713 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:19:24,713 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:19:24,714 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:19:24,716 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, users.created_date AS users_created_date, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:19:24,716 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 17:19:24,717 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'users_created_date', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:19:24,717 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:19:24,717 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'New User', 'Vendor-name1')
2020-01-26 17:19:24,717 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', datetime.datetime(2019, 8, 28, 11, 46, 8), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:19:24,717 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', datetime.datetime(2019, 9, 2, 15, 14, 53), 'Standard User Access', 'Main-Organisation')
2020-01-26 17:19:24,717 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', datetime.datetime(2019, 9, 2, 16, 50, 50), 'Standard User Access', 'Vendor-name2')
2020-01-26 17:23:15,117 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:23:15,117 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,118 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:23:15,119 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:23:15,119 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:23:15,120 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:23:15,120 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:23:15,121 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:23:15,121 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:23:15,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:23:15,121 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:23:15,122 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:23:15,123 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:23:15,123 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:23:15,123 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,124 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:23:15,124 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,125 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:23:15,125 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,125 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:23:15,128 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:23:15,128 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:23:15,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:23:15,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:23:15,132 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:23:15,132 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:23:15,133 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:23:15,133 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:23:15,134 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:23:15,134 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:23:15,134 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:23:15,134 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:23:15,135 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:27:03,923 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:27:03,923 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,925 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:27:03,925 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:27:03,926 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:27:03,926 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,926 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:27:03,926 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:27:03,927 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:27:03,927 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,927 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:27:03,927 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:27:03,928 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:27:03,928 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,928 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:27:03,929 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:27:03,929 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:27:03,929 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,930 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:27:03,930 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,930 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:27:03,931 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:03,931 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:27:03,934 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:27:03,934 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 17:27:03,935 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:27:03,935 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:27:03,961 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:27:52,504 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:27:52,504 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:27:52,506 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:27:52,506 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:27:52,506 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:27:52,507 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:27:52,508 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:27:52,508 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,508 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:27:52,508 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:27:52,509 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:27:52,509 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:27:52,510 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:27:52,510 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:27:52,510 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,511 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:27:52,511 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,512 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:27:52,512 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:27:52,512 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:27:52,515 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:27:52,515 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:27:52,516 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:27:52,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:27:52,519 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:27:52,520 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1', 1)
2020-01-26 17:27:52,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:27:52,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:29:04,928 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:29:04,929 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,930 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:29:04,930 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:29:04,931 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:29:04,931 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,931 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:29:04,932 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:29:04,932 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:29:04,933 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,933 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:29:04,933 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:29:04,933 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:29:04,934 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,934 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:29:04,935 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:29:04,935 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:29:04,936 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,936 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:29:04,936 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,937 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:29:04,937 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:04,938 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:29:04,941 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:29:04,941 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:29:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:29:04,942 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:29:04,945 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:29:04,945 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1',)
2020-01-26 17:29:04,946 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:29:04,946 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:29:04,948 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:29:31,813 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:29:31,813 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,814 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:29:31,815 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:29:31,816 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:29:31,816 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,816 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:29:31,816 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:29:31,817 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:29:31,817 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,817 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:29:31,817 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:29:31,817 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:29:31,817 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,818 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:29:31,818 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:29:31,819 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:29:31,819 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,820 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:29:31,820 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,820 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:29:31,820 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:29:31,821 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:29:31,823 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:29:31,824 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:29:31,824 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:29:31,825 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:29:31,828 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:29:31,828 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1',)
2020-01-26 17:29:31,829 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:29:31,829 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:29:31,831 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:29:45,870 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:29:45,871 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:29:45,871 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:29:45,872 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:29:45,872 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:29:45,874 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:29:45,874 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-01-26 17:29:45,875 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:29:45,875 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:29:45,876 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:30:03,269 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 17:30:03,270 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:30:03,270 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-26 17:30:03,271 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:30:03,272 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:30:03,273 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:30:03,274 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 17:30:03,274 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:30:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:30:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:30:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:30:03,275 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:03,276 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 17:30:38,196 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:30:38,196 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,197 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:30:38,197 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:30:38,198 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:30:38,198 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,198 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:30:38,198 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:30:38,199 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:30:38,199 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:30:38,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:30:38,200 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:30:38,200 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,200 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:30:38,200 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:30:38,201 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:30:38,201 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,202 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:30:38,202 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,202 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:30:38,202 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,203 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:30:38,205 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:30:38,205 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:30:38,206 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:30:38,207 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:30:38,209 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:30:38,209 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:30:38,210 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:30:38,210 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:30:38,210 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:30:38,210 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:38,211 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:30:38,211 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:38,212 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:30:40,603 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:30:40,605 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:30:40,605 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:30:40,605 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:30:40,606 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:30:40,608 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:30:40,608 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 17:30:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:30:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:30:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:30:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:30:40,609 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:40,610 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:30:42,049 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 17:30:42,050 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:30:42,050 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-26 17:30:42,051 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:30:42,051 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:30:42,053 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:30:42,053 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 17:30:42,054 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:30:42,054 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:30:42,054 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:30:42,054 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:42,054 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:30:42,054 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:42,055 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 17:30:50,128 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 17:30:50,130 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:30:50,130 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 17:30:50,131 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:30:50,131 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:30:50,133 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:30:50,133 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 17:30:50,133 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:30:50,134 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:30:50,134 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:30:50,134 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:50,134 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:30:50,134 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:30:50,135 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-26 17:31:25,167 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:31:25,167 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,168 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:31:25,168 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:31:25,169 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:31:25,169 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,169 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:31:25,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:31:25,170 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:31:25,170 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:31:25,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:31:25,171 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:31:25,171 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,171 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:31:25,171 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:31:25,172 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:31:25,172 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,173 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:31:25,173 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,173 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:31:25,173 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,174 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:31:25,176 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:31:25,176 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:31:25,177 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:31:25,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:31:25,181 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:31:25,181 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:31:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:31:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:31:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:31:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:31:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:31:25,184 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:31:44,265 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:31:44,265 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:31:44,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:31:44,267 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:31:44,268 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,268 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:31:44,268 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:31:44,269 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:31:44,269 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,269 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:31:44,269 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:31:44,269 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:31:44,269 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:31:44,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:31:44,271 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:31:44,271 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,272 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:31:44,272 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,272 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:31:44,272 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,273 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:31:44,275 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:31:44,276 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:31:44,276 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:31:44,277 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:31:44,279 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:31:44,280 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:31:44,280 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:31:44,280 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:31:44,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:31:44,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:31:44,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:31:44,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:31:44,282 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:33:11,064 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:33:11,064 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,065 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:33:11,065 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:33:11,066 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:33:11,066 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:33:11,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:33:11,067 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:33:11,067 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:33:11,068 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:33:11,068 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:33:11,068 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,069 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:33:11,069 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:33:11,069 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:33:11,070 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,070 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:33:11,070 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:33:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:33:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:33:11,074 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:33:11,074 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:33:11,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:33:11,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:33:11,078 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:33:11,078 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1',)
2020-01-26 17:33:11,079 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled')
2020-01-26 17:33:11,079 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0)
2020-01-26 17:33:11,080 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:34:40,129 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:34:40,130 INFO sqlalchemy.engine.base.Engine MainThread : (1, 1)
2020-01-26 17:34:40,131 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:34:40,131 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:35:59,011 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:35:59,011 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:35:59,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:35:59,014 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:35:59,014 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:35:59,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:35:59,015 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:35:59,015 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,015 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:35:59,015 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:35:59,016 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:35:59,016 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,017 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:35:59,017 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:35:59,018 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:35:59,018 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,018 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:35:59,018 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,019 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:35:59,019 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:35:59,020 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:35:59,022 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:35:59,023 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:35:59,023 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:35:59,024 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:37:40,918 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:37:40,918 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:37:40,919 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:37:40,920 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:37:40,920 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:37:40,920 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:37:40,920 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:37:40,920 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:46:14,178 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:46:14,178 INFO sqlalchemy.engine.base.Engine MainThread : (<built-in function id>,)
2020-01-26 17:46:14,180 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:47:23,491 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:47:23,491 INFO sqlalchemy.engine.base.Engine MainThread : (1,)
2020-01-26 17:47:23,493 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:47:23,493 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8))
2020-01-26 17:48:01,991 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:48:01,992 INFO sqlalchemy.engine.base.Engine MainThread : (1,)
2020-01-26 17:48:01,993 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:48:01,993 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8))
2020-01-26 17:49:10,735 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:49:10,736 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,737 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-01-26 17:49:10,738 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('sql_mode', '')
2020-01-26 17:49:10,738 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:49:10,738 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,739 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-01-26 17:49:10,739 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('lower_case_table_names', '0')
2020-01-26 17:49:10,740 INFO sqlalchemy.engine.base.Engine MainThread : SELECT DATABASE()
2020-01-26 17:49:10,740 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,740 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('DATABASE()',)
2020-01-26 17:49:10,740 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('fmapp',)
2020-01-26 17:49:10,740 INFO sqlalchemy.engine.base.Engine MainThread : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:49:10,740 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,742 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:49:10,742 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:49:10,743 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:49:10,743 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,743 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:49:10,743 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,744 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:49:10,744 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 17:49:10,745 INFO sqlalchemy.engine.base.Engine MainThread : BEGIN (implicit)
2020-01-26 17:49:10,747 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:49:10,747 INFO sqlalchemy.engine.base.Engine MainThread : (<built-in function id>,)
2020-01-26 17:49:10,748 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:49:23,126 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:49:23,127 INFO sqlalchemy.engine.base.Engine MainThread : (1,)
2020-01-26 17:49:23,127 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:49:23,128 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8))
2020-01-26 17:50:02,035 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:50:02,035 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,036 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:50:02,037 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:50:02,038 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:50:02,038 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,038 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:50:02,038 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:50:02,039 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:50:02,039 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,039 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:50:02,039 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:50:02,040 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:50:02,040 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,040 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:50:02,040 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:50:02,041 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:50:02,041 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,042 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:50:02,042 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,042 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:50:02,043 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:02,043 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:50:02,046 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:02,046 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:50:02,047 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:02,047 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:11,219 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:50:11,223 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:50:11,224 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:11,224 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:50:11,224 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:11,225 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:11,229 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:50:11,229 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 17:50:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:50:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:50:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:50:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:50:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:50:11,231 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:50:11,232 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:50:15,361 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 17:50:15,362 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:15,362 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-26 17:50:15,363 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:15,363 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:30,323 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:50:30,323 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,324 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:50:30,325 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:50:30,325 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:50:30,325 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,326 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:50:30,326 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:50:30,326 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:50:30,326 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,327 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:50:30,327 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:50:30,327 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:50:30,327 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,328 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:50:30,328 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:50:30,328 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:50:30,328 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,329 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:50:30,329 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,330 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:50:30,330 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:50:30,330 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:50:30,332 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:30,333 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:50:30,333 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:30,334 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:30,337 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:50:30,337 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1',)
2020-01-26 17:50:30,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:50:30,338 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8))
2020-01-26 17:50:30,339 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:50:42,244 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:50:42,245 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:50:42,245 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-26 17:50:42,247 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:42,247 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:42,275 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:50:45,542 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 17:50:45,542 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:50:45,543 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-26 17:50:45,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:45,544 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:45,545 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-26 17:50:45,546 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 17:50:45,546 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-26 17:50:45,546 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-26 17:50:45,619 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 17:50:45,620 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 17:50:45,620 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:45,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:45,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 17:50:45,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 17:50:45,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 17:50:45,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 17:50:45,668 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:45,668 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 17:50:45,669 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:45,669 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:45,670 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-26 17:50:48,306 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-26 17:50:48,307 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:50:48,307 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-26 17:50:48,308 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:48,308 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:48,310 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:48,310 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-26 17:50:48,311 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:48,311 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:48,329 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:50:48,329 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-26 17:50:48,330 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:50:48,330 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:50:48,334 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:50:48,334 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-01-26 17:50:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 17:50:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 17:50:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 17:50:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 17:50:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 17:50:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 17:51:09,851 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-26 17:51:09,854 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:51:09,854 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-01-26 17:51:09,855 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:51:09,855 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:51:09,857 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:51:09,857 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-26 17:51:09,858 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:51:09,858 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:51:09,873 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:51:09,873 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-26 17:51:09,874 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:51:09,874 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:51:09,876 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.id ASC
2020-01-26 17:51:09,876 INFO sqlalchemy.engine.base.Engine Thread-31 : ()
2020-01-26 17:51:09,877 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 17:51:09,877 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 17:51:09,877 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 17:51:09,877 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 17:52:07,630 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:52:07,631 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:52:07,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:52:07,633 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:52:07,633 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:52:07,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:52:07,635 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:52:07,635 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,635 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:52:07,635 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:52:07,635 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:52:07,635 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,636 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:52:07,636 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:52:07,637 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:52:07,637 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,637 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:52:07,638 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,638 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:52:07,638 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:07,639 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:52:07,641 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:52:07,641 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:52:07,642 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:52:07,642 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:52:07,646 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:52:07,646 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1',)
2020-01-26 17:52:07,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:52:07,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8))
2020-01-26 17:52:07,648 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:52:11,224 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:52:11,225 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:52:11,225 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:52:11,226 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:52:11,226 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:52:11,229 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:52:11,229 INFO sqlalchemy.engine.base.Engine Thread-3 : ('1',)
2020-01-26 17:52:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date')
2020-01-26 17:52:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8))
2020-01-26 17:52:11,231 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:52:56,902 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:52:56,902 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,903 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:52:56,904 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:52:56,905 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:52:56,905 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,905 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:52:56,905 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:52:56,906 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:52:56,906 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:52:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:52:56,906 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:52:56,906 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:52:56,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:52:56,908 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:52:56,908 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,908 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:52:56,908 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,909 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:52:56,909 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:52:56,910 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:52:56,912 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:52:56,912 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 17:52:56,913 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:52:56,913 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:52:56,917 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:52:56,917 INFO sqlalchemy.engine.base.Engine Thread-2 : ('1',)
2020-01-26 17:52:56,917 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by')
2020-01-26 17:52:56,918 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip')
2020-01-26 17:52:56,919 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:53:15,057 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 17:53:15,058 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:53:15,058 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 17:53:15,059 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:53:15,060 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:53:15,062 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:53:15,062 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 17:53:15,063 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:53:15,063 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:53:15,063 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:53:15,064 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:53:15,064 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:53:15,064 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:53:15,065 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 17:53:40,690 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 17:53:40,690 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,692 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:53:40,692 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 17:53:40,693 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 17:53:40,693 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 17:53:40,693 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 17:53:40,694 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 17:53:40,694 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,694 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 17:53:40,694 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 17:53:40,694 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 17:53:40,695 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,695 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 17:53:40,695 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 17:53:40,696 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 17:53:40,696 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,697 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 17:53:40,697 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,697 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 17:53:40,698 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 17:53:40,698 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 17:53:40,700 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:53:40,701 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 17:53:40,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:53:40,702 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:53:40,729 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 17:53:53,172 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 17:53:53,173 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:53:53,173 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 17:53:53,174 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:53:53,174 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:53:53,177 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:53:53,177 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 17:53:53,177 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 17:53:53,178 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 17:53:53,178 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 17:53:53,178 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:53:53,178 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 17:53:53,178 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST123999', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 17:53:53,179 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-26 17:54:05,888 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-26 17:54:05,890 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:54:05,890 INFO sqlalchemy.engine.base.Engine Thread-6 : ('philip', 1, 1)
2020-01-26 17:54:05,891 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:54:05,891 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:54:05,893 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 17:54:05,894 INFO sqlalchemy.engine.base.Engine Thread-6 : ('2',)
2020-01-26 17:54:05,894 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by')
2020-01-26 17:54:05,895 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip')
2020-01-26 17:54:05,895 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-26 17:54:27,367 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-01-26 17:54:27,373 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-26 17:54:27,374 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-01-26 17:54:27,375 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 17:54:27,376 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-26 17:54:27,376 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67)
2020-01-26 17:54:27,378 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:54:27,378 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-01-26 17:54:27,379 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:54:27,379 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:54:27,430 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:54:27,430 INFO sqlalchemy.engine.base.Engine Thread-7 : ('philip', 1, 1)
2020-01-26 17:54:27,431 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:54:27,432 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:54:27,433 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-01-26 17:54:29,794 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-26 17:54:29,795 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 17:54:29,795 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-01-26 17:54:29,796 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:54:29,796 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:54:29,798 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:54:29,798 INFO sqlalchemy.engine.base.Engine Thread-15 : ('philip', 1, 1)
2020-01-26 17:54:29,799 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:54:29,800 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:54:29,817 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 17:54:29,817 INFO sqlalchemy.engine.base.Engine Thread-15 : ('philip', 1, 1)
2020-01-26 17:54:29,818 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 17:54:29,818 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 17:54:29,823 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 17:54:29,823 INFO sqlalchemy.engine.base.Engine Thread-15 : ()
2020-01-26 17:54:29,824 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 17:54:29,824 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 17:54:29,824 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 17:54:29,825 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 17:54:29,825 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 17:54:29,825 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:01,751 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:11:01,751 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,753 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:11:01,753 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:11:01,754 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:11:01,754 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:11:01,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:11:01,755 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:11:01,755 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:11:01,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:11:01,756 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:11:01,756 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:11:01,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:11:01,758 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:11:01,758 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,759 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:11:01,759 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,759 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:11:01,760 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,760 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:11:01,762 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:01,763 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:11:01,764 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:01,764 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:01,767 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:01,767 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:11:01,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:01,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:01,833 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:01,833 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:11:01,834 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:01,834 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:01,838 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 19:11:01,838 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:11:01,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:01,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:01,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:01,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:01,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:01,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:01,843 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:11:05,018 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-26 19:11:05,019 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:05,019 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-26 19:11:05,020 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:05,020 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:05,022 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:05,022 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-26 19:11:05,023 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:05,023 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:05,025 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:05,025 INFO sqlalchemy.engine.base.Engine Thread-9 : ('1', 1)
2020-01-26 19:11:05,026 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:05,026 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:05,029 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:11:05,029 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-26 19:11:05,029 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:11:05,030 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:05,030 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:11:05,030 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:05,031 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:11:05,031 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-26 19:11:05,032 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:05,032 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:05,032 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:05,032 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:05,067 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:05,067 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-26 19:11:05,067 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:05,068 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:05,070 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-26 19:11:07,274 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-26 19:11:07,275 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:07,275 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-26 19:11:07,276 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:07,276 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:07,278 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:07,278 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-26 19:11:07,279 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:07,279 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:07,284 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:07,285 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-26 19:11:07,285 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:07,287 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:07,290 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 19:11:07,290 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-26 19:11:07,291 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:07,292 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:07,292 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:07,292 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:07,292 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:07,292 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:07,294 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-26 19:11:09,232 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-26 19:11:09,233 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:09,233 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-01-26 19:11:09,233 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:09,234 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:09,236 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:09,236 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-26 19:11:09,237 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:09,237 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:09,239 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:09,239 INFO sqlalchemy.engine.base.Engine Thread-23 : ('6', 1)
2020-01-26 19:11:09,239 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:09,239 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 19:11:09,241 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:11:09,241 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-01-26 19:11:09,242 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:11:09,242 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:09,242 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:11:09,242 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:09,244 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:11:09,244 INFO sqlalchemy.engine.base.Engine Thread-23 : (63,)
2020-01-26 19:11:09,244 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:09,244 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:09,245 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:09,245 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:09,249 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:09,249 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-26 19:11:09,250 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:09,250 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:09,252 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-26 19:11:12,396 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-26 19:11:12,397 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:12,397 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-01-26 19:11:12,398 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:12,398 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:12,400 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:12,400 INFO sqlalchemy.engine.base.Engine Thread-30 : ('philip', 1, 1)
2020-01-26 19:11:12,401 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:12,401 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:12,403 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:12,403 INFO sqlalchemy.engine.base.Engine Thread-30 : ('6', 1)
2020-01-26 19:11:12,404 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:12,404 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 19:11:12,408 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:11:12,408 INFO sqlalchemy.engine.base.Engine Thread-30 : ()
2020-01-26 19:11:12,408 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:11:12,409 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:12,409 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:11:12,409 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:12,410 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:11:12,410 INFO sqlalchemy.engine.base.Engine Thread-30 : (63,)
2020-01-26 19:11:12,411 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:12,411 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:12,412 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:12,412 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:12,416 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:12,417 INFO sqlalchemy.engine.base.Engine Thread-30 : ('philip', 1, 1)
2020-01-26 19:11:12,417 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:12,417 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:12,421 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-26 19:11:21,626 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-26 19:11:21,627 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:21,627 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-01-26 19:11:21,628 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:21,628 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:21,630 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:21,630 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-26 19:11:21,631 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:21,631 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:21,633 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:21,633 INFO sqlalchemy.engine.base.Engine Thread-37 : ('6', 1)
2020-01-26 19:11:21,634 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:21,634 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 19:11:21,637 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:11:21,637 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-01-26 19:11:21,637 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:11:21,638 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:21,638 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:11:21,638 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:21,639 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:11:21,639 INFO sqlalchemy.engine.base.Engine Thread-37 : (63,)
2020-01-26 19:11:21,640 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:21,640 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:21,641 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:21,641 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:21,645 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:21,645 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-26 19:11:21,645 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:21,645 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:21,649 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-26 19:11:26,483 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-01-26 19:11:26,484 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:26,484 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-01-26 19:11:26,485 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:26,485 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:26,487 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:26,487 INFO sqlalchemy.engine.base.Engine Thread-44 : ('philip', 1, 1)
2020-01-26 19:11:26,488 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:26,488 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:26,493 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:26,493 INFO sqlalchemy.engine.base.Engine Thread-44 : ('philip', 1, 1)
2020-01-26 19:11:26,494 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:26,494 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:26,497 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 19:11:26,497 INFO sqlalchemy.engine.base.Engine Thread-44 : ()
2020-01-26 19:11:26,498 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:26,498 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:26,498 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:26,498 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:26,499 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:26,499 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:26,500 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-01-26 19:11:28,379 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-01-26 19:11:28,380 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:28,380 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-01-26 19:11:28,381 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:28,381 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:28,383 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:28,383 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-01-26 19:11:28,384 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:28,384 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:28,386 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:28,386 INFO sqlalchemy.engine.base.Engine Thread-51 : ('4', 1)
2020-01-26 19:11:28,386 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:28,387 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 19:11:28,389 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:11:28,389 INFO sqlalchemy.engine.base.Engine Thread-51 : ()
2020-01-26 19:11:28,389 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:11:28,390 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:28,390 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:11:28,390 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:28,391 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:11:28,391 INFO sqlalchemy.engine.base.Engine Thread-51 : (63,)
2020-01-26 19:11:28,392 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:28,392 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:28,392 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:28,392 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:28,396 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:28,396 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-01-26 19:11:28,396 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:28,397 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:28,399 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-01-26 19:11:29,635 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-01-26 19:11:29,636 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:29,636 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-01-26 19:11:29,637 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:29,637 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:29,640 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:29,640 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-01-26 19:11:29,641 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:29,641 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:29,643 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:11:29,643 INFO sqlalchemy.engine.base.Engine Thread-58 : ('4', 1)
2020-01-26 19:11:29,643 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:29,644 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 19:11:29,647 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:11:29,647 INFO sqlalchemy.engine.base.Engine Thread-58 : ()
2020-01-26 19:11:29,647 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:11:29,648 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:29,648 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:11:29,648 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:11:29,649 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:11:29,650 INFO sqlalchemy.engine.base.Engine Thread-58 : (63,)
2020-01-26 19:11:29,650 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:11:29,651 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:11:29,651 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:11:29,651 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:11:29,655 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:11:29,655 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-01-26 19:11:29,656 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:11:29,656 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:11:29,659 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-01-26 19:12:19,245 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-01-26 19:12:19,246 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:19,247 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-01-26 19:12:19,247 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:19,248 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:19,250 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:19,250 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-01-26 19:12:19,251 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:19,251 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:19,255 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:19,255 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-01-26 19:12:19,256 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:19,256 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:19,259 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 19:12:19,259 INFO sqlalchemy.engine.base.Engine Thread-65 : ()
2020-01-26 19:12:19,260 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:19,261 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:19,261 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:19,261 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:19,261 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:19,261 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:19,263 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-01-26 19:12:20,920 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-01-26 19:12:20,921 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:20,921 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-01-26 19:12:20,922 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:20,922 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:20,924 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:20,924 INFO sqlalchemy.engine.base.Engine Thread-72 : ('philip', 1, 1)
2020-01-26 19:12:20,925 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:20,925 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:20,927 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:20,927 INFO sqlalchemy.engine.base.Engine Thread-72 : ('4', 1)
2020-01-26 19:12:20,927 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:20,927 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 19:12:20,929 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:12:20,929 INFO sqlalchemy.engine.base.Engine Thread-72 : ()
2020-01-26 19:12:20,930 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:20,930 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:20,930 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:20,930 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:20,932 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:12:20,932 INFO sqlalchemy.engine.base.Engine Thread-72 : (63,)
2020-01-26 19:12:20,932 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:20,932 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:20,932 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:20,933 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:20,966 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:20,966 INFO sqlalchemy.engine.base.Engine Thread-72 : ('philip', 1, 1)
2020-01-26 19:12:20,967 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:20,967 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:20,969 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-01-26 19:12:23,794 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-01-26 19:12:23,795 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:23,795 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-01-26 19:12:23,796 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:23,796 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:23,798 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:23,798 INFO sqlalchemy.engine.base.Engine Thread-79 : ('philip', 1, 1)
2020-01-26 19:12:23,799 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:23,799 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:23,801 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:23,801 INFO sqlalchemy.engine.base.Engine Thread-79 : ('4', 1)
2020-01-26 19:12:23,801 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:23,802 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 19:12:23,804 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:12:23,805 INFO sqlalchemy.engine.base.Engine Thread-79 : ()
2020-01-26 19:12:23,805 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:23,805 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:23,805 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:23,805 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:23,807 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:12:23,807 INFO sqlalchemy.engine.base.Engine Thread-79 : (63,)
2020-01-26 19:12:23,808 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:23,808 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:23,808 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:23,808 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:23,810 INFO sqlalchemy.engine.base.Engine Thread-79 : UPDATE users SET id=%s, last_login=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-26 19:12:23,810 INFO sqlalchemy.engine.base.Engine Thread-79 : ('4', None, datetime.datetime(2020, 1, 26, 19, 12, 23, 809436), '1', 4)
2020-01-26 19:12:23,811 INFO sqlalchemy.engine.base.Engine Thread-79 : COMMIT
2020-01-26 19:12:23,875 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-01-26 19:12:23,876 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:23,876 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-01-26 19:12:23,877 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:23,877 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:23,879 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:23,879 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-01-26 19:12:23,880 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:23,880 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:23,884 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:23,884 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-01-26 19:12:23,885 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:23,885 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:23,888 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 19:12:23,888 INFO sqlalchemy.engine.base.Engine Thread-80 : ()
2020-01-26 19:12:23,889 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:23,890 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:23,890 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:23,890 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:23,890 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 26, 19, 12, 23), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:23,890 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:23,893 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-01-26 19:12:25,913 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-01-26 19:12:25,914 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:25,914 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-01-26 19:12:25,915 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:25,915 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:25,917 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:25,917 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-01-26 19:12:25,918 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:25,918 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:25,920 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:25,920 INFO sqlalchemy.engine.base.Engine Thread-87 : ('6', 1)
2020-01-26 19:12:25,921 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:25,921 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 19:12:25,923 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:12:25,923 INFO sqlalchemy.engine.base.Engine Thread-87 : ()
2020-01-26 19:12:25,924 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:25,924 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:25,924 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:25,924 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:25,925 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:12:25,926 INFO sqlalchemy.engine.base.Engine Thread-87 : (63,)
2020-01-26 19:12:25,926 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:25,926 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:25,927 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:25,927 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:25,930 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:25,930 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-01-26 19:12:25,931 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:25,931 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:25,933 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-01-26 19:12:30,334 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-01-26 19:12:30,335 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:30,336 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-01-26 19:12:30,336 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:30,336 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:30,338 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:30,339 INFO sqlalchemy.engine.base.Engine Thread-94 : ('philip', 1, 1)
2020-01-26 19:12:30,339 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:30,339 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:30,341 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:30,341 INFO sqlalchemy.engine.base.Engine Thread-94 : ('6', 1)
2020-01-26 19:12:30,342 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:30,342 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 19:12:30,345 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:12:30,345 INFO sqlalchemy.engine.base.Engine Thread-94 : ()
2020-01-26 19:12:30,345 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:30,347 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:30,347 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:30,347 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:30,348 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:12:30,348 INFO sqlalchemy.engine.base.Engine Thread-94 : (63,)
2020-01-26 19:12:30,349 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:30,349 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:30,349 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:30,349 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:30,351 INFO sqlalchemy.engine.base.Engine Thread-94 : UPDATE users SET id=%s, comment=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-26 19:12:30,351 INFO sqlalchemy.engine.base.Engine Thread-94 : ('6', 'Dylan Troon TEST12399', datetime.datetime(2020, 1, 26, 19, 12, 30, 350241), '1', 6)
2020-01-26 19:12:30,351 INFO sqlalchemy.engine.base.Engine Thread-94 : COMMIT
2020-01-26 19:12:30,424 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-01-26 19:12:30,425 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:30,425 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-01-26 19:12:30,426 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:30,426 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:30,428 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:30,428 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-01-26 19:12:30,428 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:30,429 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:30,433 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:30,433 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-01-26 19:12:30,434 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:30,434 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:30,437 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 19:12:30,437 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-01-26 19:12:30,438 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:12:30,438 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:30,438 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:12:30,438 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:30,438 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 26, 19, 12, 23), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:12:30,438 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:12:30,441 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-01-26 19:12:38,132 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-01-26 19:12:38,133 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:38,134 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-01-26 19:12:38,134 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:38,135 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:38,138 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:38,138 INFO sqlalchemy.engine.base.Engine Thread-102 : ('philip', 1, 1)
2020-01-26 19:12:38,139 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:38,139 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:38,154 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:38,154 INFO sqlalchemy.engine.base.Engine Thread-102 : ('philip', 1, 1)
2020-01-26 19:12:38,155 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:38,155 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:38,157 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.id ASC
2020-01-26 19:12:38,157 INFO sqlalchemy.engine.base.Engine Thread-102 : ()
2020-01-26 19:12:38,157 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:38,158 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:38,158 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:38,158 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:38,159 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-01-26 19:12:40,329 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-01-26 19:12:40,330 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:40,330 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-01-26 19:12:40,331 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:40,331 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:40,334 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:40,334 INFO sqlalchemy.engine.base.Engine Thread-109 : ('philip', 1, 1)
2020-01-26 19:12:40,335 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:40,335 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:40,336 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-26 19:12:40,336 INFO sqlalchemy.engine.base.Engine Thread-109 : ('6', 1)
2020-01-26 19:12:40,337 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:40,337 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:40,362 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:40,362 INFO sqlalchemy.engine.base.Engine Thread-109 : ('philip', 1, 1)
2020-01-26 19:12:40,363 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:40,363 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:40,365 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-01-26 19:12:42,028 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-01-26 19:12:42,029 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:42,029 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-01-26 19:12:42,030 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:42,030 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:42,033 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:42,033 INFO sqlalchemy.engine.base.Engine Thread-116 : ('philip', 1, 1)
2020-01-26 19:12:42,034 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:42,034 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:42,038 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:42,038 INFO sqlalchemy.engine.base.Engine Thread-116 : ('philip', 1, 1)
2020-01-26 19:12:42,039 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:42,039 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:42,041 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.id ASC
2020-01-26 19:12:42,041 INFO sqlalchemy.engine.base.Engine Thread-116 : ()
2020-01-26 19:12:42,042 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:42,042 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:42,042 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:42,042 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:42,043 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-01-26 19:12:47,554 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-01-26 19:12:47,555 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:47,555 INFO sqlalchemy.engine.base.Engine Thread-123 : (1, 1)
2020-01-26 19:12:47,556 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:47,557 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:47,559 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:47,559 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-01-26 19:12:47,560 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:47,560 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:47,561 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-26 19:12:47,562 INFO sqlalchemy.engine.base.Engine Thread-123 : ('6', 1)
2020-01-26 19:12:47,562 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:47,562 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:47,566 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:47,566 INFO sqlalchemy.engine.base.Engine Thread-123 : ('philip', 1, 1)
2020-01-26 19:12:47,567 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:47,567 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:47,569 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-01-26 19:12:54,822 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-01-26 19:12:54,823 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:54,823 INFO sqlalchemy.engine.base.Engine Thread-130 : (1, 1)
2020-01-26 19:12:54,823 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:54,824 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:54,826 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:54,826 INFO sqlalchemy.engine.base.Engine Thread-130 : ('philip', 1, 1)
2020-01-26 19:12:54,826 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:54,827 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:54,828 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-26 19:12:54,828 INFO sqlalchemy.engine.base.Engine Thread-130 : ('6', 1)
2020-01-26 19:12:54,828 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:54,828 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 8, 17, 8, 55), 1)
2020-01-26 19:12:54,831 INFO sqlalchemy.engine.base.Engine Thread-130 : UPDATE roles SET id=%s, role_name=%s, created_date=%s WHERE roles.id = %s
2020-01-26 19:12:54,831 INFO sqlalchemy.engine.base.Engine Thread-130 : ('6', 'New User2', datetime.datetime(2020, 1, 26, 19, 12, 54, 830573), 6)
2020-01-26 19:12:54,832 INFO sqlalchemy.engine.base.Engine Thread-130 : COMMIT
2020-01-26 19:12:54,910 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-01-26 19:12:54,911 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:54,911 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-01-26 19:12:54,911 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:54,912 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:54,914 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:54,914 INFO sqlalchemy.engine.base.Engine Thread-131 : ('philip', 1, 1)
2020-01-26 19:12:54,915 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:54,915 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:54,919 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:54,919 INFO sqlalchemy.engine.base.Engine Thread-131 : ('philip', 1, 1)
2020-01-26 19:12:54,919 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:54,920 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:54,921 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.id ASC
2020-01-26 19:12:54,921 INFO sqlalchemy.engine.base.Engine Thread-131 : ()
2020-01-26 19:12:54,922 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:54,922 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:54,922 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:54,922 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (6, 'New User2', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 54), 1)
2020-01-26 19:12:54,924 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-01-26 19:12:56,354 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-01-26 19:12:56,355 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:56,355 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-01-26 19:12:56,356 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:56,356 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:56,358 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:56,358 INFO sqlalchemy.engine.base.Engine Thread-138 : ('philip', 1, 1)
2020-01-26 19:12:56,359 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:56,359 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:56,360 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-26 19:12:56,360 INFO sqlalchemy.engine.base.Engine Thread-138 : ('6', 1)
2020-01-26 19:12:56,361 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:56,361 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (6, 'New User2', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 54), 1)
2020-01-26 19:12:56,365 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:56,365 INFO sqlalchemy.engine.base.Engine Thread-138 : ('philip', 1, 1)
2020-01-26 19:12:56,366 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:56,367 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:56,368 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-01-26 19:12:58,519 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-01-26 19:12:58,520 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:58,520 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-01-26 19:12:58,520 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:58,520 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:58,522 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:58,523 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-01-26 19:12:58,523 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:58,523 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:58,524 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-26 19:12:58,524 INFO sqlalchemy.engine.base.Engine Thread-145 : ('6', 1)
2020-01-26 19:12:58,525 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:58,525 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (6, 'New User2', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 54), 1)
2020-01-26 19:12:58,527 INFO sqlalchemy.engine.base.Engine Thread-145 : UPDATE roles SET id=%s, role_name=%s, created_date=%s WHERE roles.id = %s
2020-01-26 19:12:58,527 INFO sqlalchemy.engine.base.Engine Thread-145 : ('6', 'New User', datetime.datetime(2020, 1, 26, 19, 12, 58, 527210), 6)
2020-01-26 19:12:58,528 INFO sqlalchemy.engine.base.Engine Thread-145 : COMMIT
2020-01-26 19:12:58,619 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-01-26 19:12:58,620 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:12:58,620 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-01-26 19:12:58,620 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:58,621 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:58,623 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:58,623 INFO sqlalchemy.engine.base.Engine Thread-146 : ('philip', 1, 1)
2020-01-26 19:12:58,623 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:58,624 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:58,628 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:12:58,628 INFO sqlalchemy.engine.base.Engine Thread-146 : ('philip', 1, 1)
2020-01-26 19:12:58,628 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:12:58,628 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:12:58,630 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.id ASC
2020-01-26 19:12:58,630 INFO sqlalchemy.engine.base.Engine Thread-146 : ()
2020-01-26 19:12:58,631 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:12:58,631 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:58,631 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:12:58,631 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 19:12:58,633 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-01-26 19:13:01,652 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-01-26 19:13:01,653 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:13:01,653 INFO sqlalchemy.engine.base.Engine Thread-153 : (1, 1)
2020-01-26 19:13:01,654 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:01,654 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:01,656 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:13:01,656 INFO sqlalchemy.engine.base.Engine Thread-153 : ('philip', 1, 1)
2020-01-26 19:13:01,657 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:01,657 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:01,671 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:13:01,672 INFO sqlalchemy.engine.base.Engine Thread-153 : ('philip', 1, 1)
2020-01-26 19:13:01,672 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:01,672 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:01,675 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-26 19:13:01,675 INFO sqlalchemy.engine.base.Engine Thread-153 : ()
2020-01-26 19:13:01,676 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:13:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:01,677 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:01,678 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-01-26 19:13:03,353 INFO sqlalchemy.engine.base.Engine Thread-160 : BEGIN (implicit)
2020-01-26 19:13:03,354 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:13:03,355 INFO sqlalchemy.engine.base.Engine Thread-160 : (1, 1)
2020-01-26 19:13:03,355 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:03,356 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:03,358 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:13:03,358 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-01-26 19:13:03,359 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:03,359 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:03,360 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:13:03,361 INFO sqlalchemy.engine.base.Engine Thread-160 : ('9', 1)
2020-01-26 19:13:03,361 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:13:03,361 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:13:03,363 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:13:03,364 INFO sqlalchemy.engine.base.Engine Thread-160 : (82,)
2020-01-26 19:13:03,364 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:13:03,364 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:03,364 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:13:03,364 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:13:03,366 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:13:03,366 INFO sqlalchemy.engine.base.Engine Thread-160 : (1,)
2020-01-26 19:13:03,366 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:13:03,367 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:13:03,367 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:13:03,394 INFO sqlalchemy.engine.base.Engine Thread-160 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:13:03,394 INFO sqlalchemy.engine.base.Engine Thread-160 : ('philip', 1, 1)
2020-01-26 19:13:03,395 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:03,395 DEBUG sqlalchemy.engine.base.Engine Thread-160 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:03,397 INFO sqlalchemy.engine.base.Engine Thread-160 : ROLLBACK
2020-01-26 19:13:15,528 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-01-26 19:13:15,529 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:13:15,529 INFO sqlalchemy.engine.base.Engine Thread-167 : (1, 1)
2020-01-26 19:13:15,530 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:15,530 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:15,532 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:13:15,532 INFO sqlalchemy.engine.base.Engine Thread-167 : ('philip', 1, 1)
2020-01-26 19:13:15,533 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:15,533 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:15,537 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:13:15,537 INFO sqlalchemy.engine.base.Engine Thread-167 : ('philip', 1, 1)
2020-01-26 19:13:15,537 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:13:15,538 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:13:15,540 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-26 19:13:15,540 INFO sqlalchemy.engine.base.Engine Thread-167 : ()
2020-01-26 19:13:15,540 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:13:15,541 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:15,541 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:15,541 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:13:15,542 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-01-26 19:14:11,064 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:14:11,064 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:14:11,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:14:11,067 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:14:11,067 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:14:11,068 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:14:11,068 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:14:11,068 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,068 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:14:11,068 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:14:11,069 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:14:11,069 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,070 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:14:11,070 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:14:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:14:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:14:11,071 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,072 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:14:11,072 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,073 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:14:11,075 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:14:11,075 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:14:11,076 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:14:11,077 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:14:11,079 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:14:11,080 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:14:11,080 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:14:11,081 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:14:11,148 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:14:11,148 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:14:11,149 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:14:11,149 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:14:11,153 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-26 19:14:11,153 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:14:11,154 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:14:11,155 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:14:11,155 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:14:11,155 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:14:11,156 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:14:15,779 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-26 19:14:15,780 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:14:15,780 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-26 19:14:15,781 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:14:15,781 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:14:15,784 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:14:15,784 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-26 19:14:15,785 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:14:15,785 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:14:15,786 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:14:15,786 INFO sqlalchemy.engine.base.Engine Thread-10 : ('9', 1)
2020-01-26 19:14:15,787 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:14:15,787 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:14:15,790 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:14:15,790 INFO sqlalchemy.engine.base.Engine Thread-10 : (82,)
2020-01-26 19:14:15,791 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:14:15,791 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:14:15,791 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:14:15,791 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:14:15,793 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:14:15,793 INFO sqlalchemy.engine.base.Engine Thread-10 : (1,)
2020-01-26 19:14:15,794 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:14:15,794 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:14:15,794 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:16:42,079 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:16:42,079 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,080 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:16:42,081 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:16:42,081 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:16:42,081 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,082 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:16:42,082 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:16:42,082 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:16:42,082 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,083 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:16:42,083 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:16:42,083 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:16:42,083 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:16:42,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:16:42,085 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:16:42,085 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,085 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:16:42,085 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,086 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:16:42,086 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:16:42,086 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:16:42,089 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:16:42,089 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:16:42,090 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:16:42,090 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:16:42,092 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:16:42,093 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:16:42,093 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:16:42,093 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:16:42,096 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:16:42,096 INFO sqlalchemy.engine.base.Engine Thread-2 : ('9', 1)
2020-01-26 19:16:42,096 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:16:42,096 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:16:42,100 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:16:42,100 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-01-26 19:16:42,100 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:16:42,101 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:16:42,101 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:16:42,101 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:16:42,102 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:16:42,102 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-01-26 19:16:42,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:16:42,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:16:42,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:17:22,543 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:17:22,543 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,544 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:17:22,544 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:17:22,545 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:17:22,545 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:17:22,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:17:22,546 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:17:22,546 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,547 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:17:22,547 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:17:22,547 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:17:22,547 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,548 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:17:22,548 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:17:22,548 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:17:22,548 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,549 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:17:22,549 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,549 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:17:22,550 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:17:22,550 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:17:22,552 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:17:22,552 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:17:22,553 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:17:22,553 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:17:22,556 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:17:22,556 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:17:22,557 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:17:22,557 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:17:22,559 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:17:22,559 INFO sqlalchemy.engine.base.Engine Thread-2 : ('9', 1)
2020-01-26 19:17:22,560 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:17:22,560 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:17:22,563 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:17:22,563 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-01-26 19:17:22,564 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:17:22,564 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:17:22,564 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:17:22,564 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:17:22,565 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:17:22,565 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-01-26 19:17:22,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:17:22,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:17:22,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:18:06,852 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:18:06,852 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,853 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:18:06,853 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:18:06,854 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:18:06,854 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,855 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:18:06,855 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:18:06,855 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:18:06,855 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,855 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:18:06,855 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:18:06,856 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:18:06,856 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,856 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:18:06,856 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:18:06,857 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:18:06,857 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,858 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:18:06,858 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,858 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:18:06,858 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:18:06,859 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:18:06,861 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:18:06,861 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:18:06,862 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:06,862 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:06,865 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:06,865 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:18:06,865 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:06,866 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:06,868 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:18:06,868 INFO sqlalchemy.engine.base.Engine Thread-2 : ('9', 1)
2020-01-26 19:18:06,868 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:18:06,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:18:06,872 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:18:06,872 INFO sqlalchemy.engine.base.Engine Thread-2 : (82,)
2020-01-26 19:18:06,872 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:06,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:06,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:18:06,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:18:06,874 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:18:06,874 INFO sqlalchemy.engine.base.Engine Thread-2 : (1,)
2020-01-26 19:18:06,875 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:06,875 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:18:06,875 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:18:06,952 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:06,952 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:18:06,953 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:06,953 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:06,956 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:18:16,915 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-26 19:18:16,916 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:18:16,916 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-26 19:18:16,917 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:16,917 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:16,919 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:16,919 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-26 19:18:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:16,920 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:16,921 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:18:16,921 INFO sqlalchemy.engine.base.Engine Thread-9 : ('9', 1)
2020-01-26 19:18:16,922 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:18:16,922 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:18:16,925 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:18:16,925 INFO sqlalchemy.engine.base.Engine Thread-9 : (82,)
2020-01-26 19:18:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:18:16,926 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:18:16,927 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:18:16,927 INFO sqlalchemy.engine.base.Engine Thread-9 : (1,)
2020-01-26 19:18:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:18:16,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:18:16,932 INFO sqlalchemy.engine.base.Engine Thread-9 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_regions=%s WHERE datesofinterest.id = %s
2020-01-26 19:18:16,932 INFO sqlalchemy.engine.base.Engine Thread-9 : ('9', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR', 9)
2020-01-26 19:18:16,933 INFO sqlalchemy.engine.base.Engine Thread-9 : COMMIT
2020-01-26 19:18:17,004 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-26 19:18:17,005 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:18:17,005 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-26 19:18:17,006 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:17,006 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:17,009 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:17,009 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-26 19:18:17,010 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:17,010 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:17,024 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:17,024 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-26 19:18:17,025 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:17,025 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:17,027 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-26 19:18:17,027 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-26 19:18:17,028 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:17,028 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:17,028 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:17,028 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:17,030 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-26 19:18:22,135 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-26 19:18:22,136 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:18:22,136 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-26 19:18:22,137 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:22,138 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:22,140 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:22,140 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-26 19:18:22,141 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:22,141 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:22,142 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:18:22,142 INFO sqlalchemy.engine.base.Engine Thread-17 : ('9', 1)
2020-01-26 19:18:22,143 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:18:22,143 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR')
2020-01-26 19:18:22,145 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:18:22,145 INFO sqlalchemy.engine.base.Engine Thread-17 : (82,)
2020-01-26 19:18:22,145 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:22,145 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:22,145 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:18:22,146 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:18:22,147 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:18:22,147 INFO sqlalchemy.engine.base.Engine Thread-17 : (1,)
2020-01-26 19:18:22,147 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:22,147 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:18:22,148 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:18:22,151 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:22,151 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-26 19:18:22,152 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:22,152 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:22,154 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-26 19:18:25,427 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-26 19:18:25,428 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:18:25,428 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-26 19:18:25,429 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:25,429 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:25,431 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:25,431 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-26 19:18:25,432 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:25,432 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:25,433 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-26 19:18:25,433 INFO sqlalchemy.engine.base.Engine Thread-24 : ('9', 1)
2020-01-26 19:18:25,434 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:18:25,434 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR')
2020-01-26 19:18:25,437 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:18:25,437 INFO sqlalchemy.engine.base.Engine Thread-24 : (82,)
2020-01-26 19:18:25,437 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:25,437 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:25,437 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-26 19:18:25,438 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-26 19:18:25,439 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 19:18:25,439 INFO sqlalchemy.engine.base.Engine Thread-24 : (1,)
2020-01-26 19:18:25,439 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:25,440 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 19:18:25,440 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 19:18:25,441 INFO sqlalchemy.engine.base.Engine Thread-24 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_regions=%s WHERE datesofinterest.id = %s
2020-01-26 19:18:25,441 INFO sqlalchemy.engine.base.Engine Thread-24 : ('9', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 9)
2020-01-26 19:18:25,441 INFO sqlalchemy.engine.base.Engine Thread-24 : COMMIT
2020-01-26 19:18:25,515 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-26 19:18:25,516 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:18:25,516 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-01-26 19:18:25,516 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:25,517 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:25,519 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:25,519 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-01-26 19:18:25,519 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:25,519 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:25,523 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:18:25,524 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-01-26 19:18:25,524 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:18:25,524 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:18:25,526 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-26 19:18:25,526 INFO sqlalchemy.engine.base.Engine Thread-25 : ()
2020-01-26 19:18:25,527 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:18:25,527 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:25,527 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:25,527 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-26 19:18:25,529 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-26 19:24:57,381 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:24:57,381 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:24:57,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:24:57,384 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:24:57,384 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,384 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:24:57,385 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:24:57,385 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:24:57,385 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,385 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:24:57,385 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:24:57,386 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:24:57,386 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,386 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:24:57,386 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:24:57,387 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:24:57,387 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,388 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:24:57,388 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,388 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:24:57,388 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:24:57,389 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:24:57,392 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:24:57,392 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:24:57,393 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:24:57,393 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:24:57,397 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 19:24:57,398 INFO sqlalchemy.engine.base.Engine Thread-2 : ('2',)
2020-01-26 19:24:57,398 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by')
2020-01-26 19:24:57,399 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip')
2020-01-26 19:24:57,400 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:25:04,327 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 19:25:04,328 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:25:04,328 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-26 19:25:04,330 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:25:04,330 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:25:04,332 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 19:25:04,541 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 19:25:04,542 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:25:04,542 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 19:25:04,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:25:04,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:25:04,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 19:25:04,543 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:25:04,545 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:25:04,546 INFO sqlalchemy.engine.base.Engine Thread-5 : (63,)
2020-01-26 19:25:04,546 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:25:04,547 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:25:04,547 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:25:04,547 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:25:04,564 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-26 19:25:21,296 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-26 19:25:21,298 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id IS NULL AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:25:21,298 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-26 19:25:21,299 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:25:21,300 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-26 19:26:06,413 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:26:06,414 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,415 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:26:06,415 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:26:06,416 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:26:06,416 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,417 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:26:06,417 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:26:06,418 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:26:06,418 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,418 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:26:06,418 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:26:06,418 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:26:06,419 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:26:06,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:26:06,420 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:26:06,420 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,421 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:26:06,421 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,421 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:26:06,422 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:26:06,422 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:26:06,425 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id IS NULL AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:26:06,425 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:26:06,425 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:06,427 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:26:18,148 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 19:26:18,149 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:26:18,149 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 19:26:18,150 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:26:18,150 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:26:18,151 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 19:26:18,151 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:26:18,153 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:26:18,153 INFO sqlalchemy.engine.base.Engine Thread-3 : (63,)
2020-01-26 19:26:18,154 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:26:18,154 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:26:18,154 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:26:18,154 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:26:18,156 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-26 19:26:18,156 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1)
2020-01-26 19:26:18,157 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:18,157 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:26:18,465 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 19:26:18,538 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 19:26:18,539 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:26:18,539 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-26 19:26:18,540 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:18,540 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:26:18,542 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-26 19:26:18,542 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 19:26:18,543 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-26 19:26:18,543 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-26 19:26:18,619 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 19:26:18,620 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 19:26:18,620 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:18,621 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:26:18,621 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 19:26:18,621 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 19:26:18,621 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 26, 19, 12, 23), 'philip', 1)
2020-01-26 19:26:18,621 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-26 19:26:18,673 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:26:18,673 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-26 19:26:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:18,674 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:26:18,677 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 19:26:21,199 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-26 19:26:21,200 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:26:21,200 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-01-26 19:26:21,201 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:21,201 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:26:21,204 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-26 19:26:21,395 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-26 19:26:21,396 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:26:21,396 INFO sqlalchemy.engine.base.Engine Thread-13 : ()
2020-01-26 19:26:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:26:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:26:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 19:26:21,397 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:26:21,399 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:26:21,399 INFO sqlalchemy.engine.base.Engine Thread-13 : (63,)
2020-01-26 19:26:21,400 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:26:21,400 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:26:21,400 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:26:21,400 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:26:21,411 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-26 19:26:54,240 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-26 19:26:54,241 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-26 19:26:54,241 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-26 19:26:54,242 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:26:54,242 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:26:54,546 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-26 19:27:13,588 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-26 19:27:13,589 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id IS NULL AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:27:13,589 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-26 19:27:13,590 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:27:13,591 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-26 19:27:41,749 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-26 19:27:41,749 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 19:27:41,750 INFO sqlalchemy.engine.base.Engine Thread-20 : ()
2020-01-26 19:27:41,750 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 19:27:41,750 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:27:41,751 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 19:27:41,751 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:27:41,752 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 19:27:41,752 INFO sqlalchemy.engine.base.Engine Thread-20 : (63,)
2020-01-26 19:27:41,753 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 19:27:41,753 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 19:27:41,753 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 19:27:41,753 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 19:27:41,754 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-26 19:27:41,755 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1)
2020-01-26 19:27:41,755 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:27:41,755 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:27:42,063 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-26 19:27:42,143 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-26 19:27:42,144 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:27:42,144 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-01-26 19:27:42,145 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:27:42,145 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:27:42,146 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-26 19:27:42,146 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-01-26 19:27:42,147 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-26 19:27:42,147 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-26 19:27:42,222 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 19:27:42,222 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-01-26 19:27:42,222 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:27:42,223 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:27:42,223 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 19:27:42,223 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 19:27:42,223 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 26, 19, 12, 23), 'philip', 1)
2020-01-26 19:27:42,223 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-26 19:27:42,227 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:27:42,227 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-01-26 19:27:42,228 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:27:42,228 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:27:42,231 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-26 19:29:59,425 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:29:59,425 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,427 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:29:59,427 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:29:59,428 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:29:59,428 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,428 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:29:59,428 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:29:59,429 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:29:59,429 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,429 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:29:59,429 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:29:59,429 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:29:59,429 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:29:59,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:29:59,431 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:29:59,431 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,432 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:29:59,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,432 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:29:59,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:29:59,433 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:29:59,435 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:29:59,435 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:29:59,436 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:29:59,436 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:29:59,463 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:31:32,125 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:31:32,125 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,126 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:31:32,127 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:31:32,127 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:31:32,128 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:31:32,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:31:32,128 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:31:32,129 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:31:32,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:31:32,129 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:31:32,129 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,130 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:31:32,130 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:31:32,131 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:31:32,131 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,132 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:31:32,132 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,132 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:31:32,132 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:32,133 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:31:32,135 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:31:32,135 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:31:32,136 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:31:32,136 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:31:32,163 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:31:37,574 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 19:31:37,576 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:31:37,576 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 19:31:37,577 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:31:37,577 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:31:57,620 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:31:57,620 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:31:57,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:31:57,622 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:31:57,622 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,623 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:31:57,623 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:31:57,623 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:31:57,623 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,623 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:31:57,623 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:31:57,624 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:31:57,624 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,624 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:31:57,625 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:31:57,625 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:31:57,625 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,626 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:31:57,626 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,627 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:31:57,627 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,627 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:31:57,630 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:31:57,631 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:31:57,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:31:57,632 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:31:57,634 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles
2020-01-26 19:31:57,634 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:31:57,635 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_created_date', 'roles_enabled')
2020-01-26 19:31:57,635 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Standard User Access', 0, datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:31:57,635 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Administrator User Access', 1, datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 19:31:57,635 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'New User', 0, datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 19:31:57,637 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:35:05,280 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:35:05,280 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,282 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:35:05,282 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:35:05,283 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:35:05,283 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,283 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:35:05,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:35:05,284 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:35:05,284 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:35:05,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:35:05,285 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:35:05,285 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,286 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:35:05,286 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:35:05,286 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:35:05,287 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,287 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:35:05,287 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,288 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:35:05,288 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:35:05,288 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:35:05,291 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 19:35:05,291 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 19:35:05,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:35:05,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:35:05,320 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:35:10,107 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 19:35:10,108 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:35:10,108 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 19:35:10,109 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:35:10,109 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:35:10,111 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 19:35:10,111 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 19:35:10,112 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:35:10,112 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 19:35:10,112 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 19:35:10,112 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:36:00,289 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:36:00,290 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,291 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:36:00,291 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:36:00,292 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:36:00,292 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:36:00,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:36:00,293 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:36:00,293 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,293 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:36:00,293 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:36:00,293 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:36:00,294 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,294 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:36:00,294 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:36:00,295 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:36:00,295 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,295 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:36:00,296 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,296 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:36:00,296 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:00,297 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:36:00,299 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:36:00,299 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:36:00,300 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:36:00,300 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:36:17,981 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:36:17,981 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:36:17,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:36:17,984 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:36:17,984 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,984 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:36:17,985 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:36:17,985 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:36:17,985 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,985 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:36:17,985 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:36:17,986 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:36:17,986 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,986 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:36:17,987 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:36:17,987 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:36:17,987 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,988 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:36:17,988 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,989 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:36:17,989 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,989 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:36:17,992 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:36:17,992 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:36:17,992 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:36:17,993 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:36:17,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 19:36:17,995 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:36:17,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:36:17,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 19:36:17,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 19:36:17,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:40:40,677 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:40:40,677 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,679 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:40:40,679 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:40:40,680 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:40:40,680 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,681 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:40:40,681 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:40:40,681 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:40:40,681 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,682 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:40:40,682 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:40:40,682 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:40:40,682 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,683 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:40:40,683 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:40:40,684 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:40:40,684 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,684 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:40:40,685 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,685 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:40:40,685 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,686 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:40:40,688 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:40:40,688 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:40:40,689 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:40:40,689 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:40:40,690 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id 
FROM datesofinterest
2020-01-26 19:40:40,690 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:40:40,691 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id',)
2020-01-26 19:40:40,691 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1,)
2020-01-26 19:40:40,691 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8,)
2020-01-26 19:40:40,691 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9,)
2020-01-26 19:40:40,692 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 19:42:07,198 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 19:42:07,198 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,199 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:42:07,200 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 19:42:07,200 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 19:42:07,201 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,201 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 19:42:07,201 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 19:42:07,201 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 19:42:07,201 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,202 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 19:42:07,202 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 19:42:07,202 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 19:42:07,202 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,203 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 19:42:07,203 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 19:42:07,204 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 19:42:07,204 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,204 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 19:42:07,204 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,205 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 19:42:07,205 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,205 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 19:42:07,208 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 19:42:07,208 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 19:42:07,208 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:42:07,209 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:42:07,211 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 19:42:07,211 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 19:42:07,212 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:42:07,212 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 19:42:07,212 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 19:42:07,212 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:53:41,846 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 19:53:41,847 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:53:41,851 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 19:53:41,851 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 19:53:41,851 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 19:53:41,851 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 19:53:41,851 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 19:53:41,852 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 19:54:50,621 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 19:54:50,621 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:54:50,622 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:54:50,623 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 19:54:50,623 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 19:54:50,623 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:55:48,547 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest.id AS datesofinterest_id 
FROM datesofinterest
2020-01-26 19:55:48,547 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:55:48,548 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_id',)
2020-01-26 19:55:48,549 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1,)
2020-01-26 19:55:48,549 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8,)
2020-01-26 19:55:48,549 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9,)
2020-01-26 19:58:09,395 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest.id AS datesofinterest_id 
FROM datesofinterest
2020-01-26 19:58:09,395 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:58:09,396 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_id',)
2020-01-26 19:58:09,396 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1,)
2020-01-26 19:58:09,396 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8,)
2020-01-26 19:58:09,396 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9,)
2020-01-26 19:58:23,506 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 19:58:23,506 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:58:23,506 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:58:23,507 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 19:58:23,507 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 19:58:23,507 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 19:59:19,402 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest.id AS datesofinterest_id 
FROM datesofinterest
2020-01-26 19:59:19,402 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:59:19,403 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_id',)
2020-01-26 19:59:19,403 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1,)
2020-01-26 19:59:19,403 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8,)
2020-01-26 19:59:19,403 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9,)
2020-01-26 19:59:57,393 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 19:59:57,393 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 19:59:57,394 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 19:59:57,394 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 19:59:57,395 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 19:59:57,395 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 20:03:34,546 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
 LIMIT %s
2020-01-26 20:03:34,546 INFO sqlalchemy.engine.base.Engine MainThread : (1,)
2020-01-26 20:03:34,548 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:03:34,548 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:04:01,023 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 20:04:01,023 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 20:04:01,024 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:04:01,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:04:01,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 20:04:01,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 20:04:01,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 20:04:01,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 20:05:52,401 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
 LIMIT %s
2020-01-26 20:05:52,401 INFO sqlalchemy.engine.base.Engine MainThread : (1,)
2020-01-26 20:05:52,403 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:05:52,403 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:07:09,134 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 20:07:09,135 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 20:07:09,136 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:07:09,136 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:07:09,136 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 20:07:09,136 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 20:07:09,137 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1)
2020-01-26 20:07:09,137 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1)
2020-01-26 20:17:21,886 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 20:17:21,886 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:17:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 20:17:21,889 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 20:17:21,889 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:17:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 20:17:21,890 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 20:17:21,890 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,890 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 20:17:21,891 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 20:17:21,891 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 20:17:21,891 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,892 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 20:17:21,892 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 20:17:21,892 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 20:17:21,893 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,893 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 20:17:21,893 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,894 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 20:17:21,894 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,894 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 20:17:21,897 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:17:21,897 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 20:17:21,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:17:21,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:17:21,900 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 20:17:21,900 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:17:21,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 20:17:21,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 20:17:21,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 20:17:21,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 20:17:23,697 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 20:17:23,699 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 20:17:23,700 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:17:23,700 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 20:17:23,702 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:17:23,702 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:17:23,703 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 20:17:23,703 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 20:17:23,704 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 20:17:23,704 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 20:17:23,704 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 20:17:23,704 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 20:18:06,793 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 20:18:06,793 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,794 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:18:06,794 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 20:18:06,795 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 20:18:06,795 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,796 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:18:06,796 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 20:18:06,796 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 20:18:06,796 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,797 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 20:18:06,797 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 20:18:06,797 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 20:18:06,797 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,798 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 20:18:06,798 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 20:18:06,798 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 20:18:06,799 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,799 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 20:18:06,799 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,800 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 20:18:06,800 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,800 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 20:18:06,803 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:18:06,803 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 20:18:06,804 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:18:06,804 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:18:06,806 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 20:18:06,806 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:06,806 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 20:18:06,807 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 20:18:06,807 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 20:18:06,807 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 20:18:08,485 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 20:18:08,488 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 20:18:08,489 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:18:08,489 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 20:18:08,491 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:18:08,491 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:18:08,493 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 20:18:08,493 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 20:18:08,493 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 20:18:08,493 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 20:18:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 20:18:08,494 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 20:18:18,991 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 20:18:18,991 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,992 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:18:18,993 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 20:18:18,994 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 20:18:18,994 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,994 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:18:18,994 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 20:18:18,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 20:18:18,995 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 20:18:18,995 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 20:18:18,996 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 20:18:18,996 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 20:18:18,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 20:18:18,997 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 20:18:18,997 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,998 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 20:18:18,998 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,999 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 20:18:18,999 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:18,999 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 20:18:19,002 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:18:19,003 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 20:18:19,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:18:19,004 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:18:19,006 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 20:18:19,007 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:18:19,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 20:18:19,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 20:18:19,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 20:18:19,008 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 20:18:19,009 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 20:18:42,030 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 20:18:42,031 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:18:42,031 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 20:18:42,033 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:18:42,033 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:18:42,035 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles
2020-01-26 20:18:42,035 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 20:18:42,036 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_created_date', 'roles_enabled')
2020-01-26 20:18:42,036 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Standard User Access', 0, datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 20:18:42,036 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Administrator User Access', 1, datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 20:18:42,036 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (6, 'New User', 0, datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 20:18:42,037 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 20:20:01,882 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 20:20:01,883 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 20:20:01,884 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-26 20:20:01,885 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:20:01,885 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:20:01,886 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 20:21:24,136 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 20:21:24,136 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,137 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:21:24,138 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 20:21:24,138 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 20:21:24,138 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,139 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 20:21:24,139 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 20:21:24,140 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 20:21:24,140 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,140 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 20:21:24,140 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 20:21:24,140 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 20:21:24,141 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,141 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 20:21:24,141 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 20:21:24,142 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 20:21:24,142 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,143 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 20:21:24,143 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,144 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 20:21:24,144 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 20:21:24,144 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 20:21:24,147 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 20:21:24,147 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 20:21:24,148 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:21:24,148 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 20:21:24,152 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 20:21:24,350 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 20:21:24,351 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 20:21:24,351 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 20:21:24,352 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 20:21:24,352 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 20:21:24,352 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 20:21:24,352 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 20:21:24,355 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 20:21:24,355 INFO sqlalchemy.engine.base.Engine Thread-4 : (63,)
2020-01-26 20:21:24,356 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 20:21:24,356 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 20:21:24,356 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 20:21:24,357 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 20:21:24,374 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 20:21:28,817 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-26 20:21:28,818 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id IS NULL AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 20:21:28,818 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-01-26 20:21:28,819 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 20:21:28,820 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-26 22:31:31,695 INFO sqlalchemy.engine.base.Engine MainThread : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles_1.role_name AS roles_1_role_name 
FROM users INNER JOIN roles AS roles_1 ON roles_1.id = users.`role`
2020-01-26 22:31:31,696 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 22:31:31,700 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_1_role_name')
2020-01-26 22:31:31,700 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 'Administrator User Access')
2020-01-26 22:31:31,701 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 'New User')
2020-01-26 22:31:31,701 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 'Standard User Access')
2020-01-26 22:31:31,701 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), datetime.datetime(2020, 1, 17, 10, 10, 1), datetime.datetime(2020, 1, 17, 10, 10, 1), 'philip', 1, 'Standard User Access')
2020-01-26 22:31:31,701 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST123999', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 18, 16, 52, 1), 'philip', 1, 'Standard User Access')
2020-01-26 22:38:05,038 INFO sqlalchemy.engine.base.Engine MainThread : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 22:38:05,039 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 22:38:05,041 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 22:38:05,042 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 22:38:05,042 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 22:39:02,292 INFO sqlalchemy.engine.base.Engine MainThread : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 22:39:02,292 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 22:39:02,294 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 22:39:02,294 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 22:39:02,294 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 22:39:30,109 INFO sqlalchemy.engine.base.Engine MainThread : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_name AS parameters_4_param_name 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 22:39:30,109 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 22:39:30,110 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_name')
2020-01-26 22:39:30,111 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 22:39:30,111 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 22:50:32,640 INFO sqlalchemy.engine.base.Engine MainThread : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_name AS parameters_4_param_name 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 22:50:32,641 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-26 22:50:32,644 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_name')
2020-01-26 22:50:32,644 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 22:50:32,645 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:12:33,777 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:12:33,778 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,779 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:12:33,779 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:12:33,780 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:12:33,780 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,781 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:12:33,781 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:12:33,781 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:12:33,781 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,782 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:12:33,782 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:12:33,782 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:12:33,782 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,783 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:12:33,783 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:12:33,784 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:12:33,784 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,784 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:12:33,784 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,785 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:12:33,785 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,785 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:12:33,787 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 23:12:33,787 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:12:33,787 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 23:12:33,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 23:12:33,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 23:12:33,788 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 23:12:33,790 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:12:33,790 INFO sqlalchemy.engine.base.Engine Thread-2 : (63,)
2020-01-26 23:12:33,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:12:33,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 23:12:33,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 23:12:33,791 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 23:12:33,808 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:12:36,487 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 23:12:36,488 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-26 23:12:36,488 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 23:12:36,488 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-26 23:12:36,488 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Administrator User Access', 1, 'CHANGES,ADMIN', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 23:12:36,489 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'New User', 0, '', datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 23:12:36,489 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Standard User Access', 0, 'CHANGES', datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 23:12:36,490 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:12:36,490 INFO sqlalchemy.engine.base.Engine Thread-4 : (63,)
2020-01-26 23:12:36,491 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:12:36,491 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-26 23:12:36,491 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-26 23:12:36,491 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-26 23:12:36,494 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-26 23:12:36,495 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1)
2020-01-26 23:12:36,496 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:12:36,496 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:12:36,807 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 23:12:36,906 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 23:12:36,907 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:12:36,908 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-26 23:12:36,908 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:12:36,909 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:12:36,910 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-26 23:12:36,910 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 23:12:36,911 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-26 23:12:36,911 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-26 23:12:36,987 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-26 23:12:36,987 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 23:12:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:12:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:12:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-26 23:12:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-26 23:12:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Bobba Fett', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 26, 19, 12, 23), 'philip', 1)
2020-01-26 23:12:36,988 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-26 23:12:37,035 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:12:37,035 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 23:12:37,036 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:12:37,036 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:12:37,038 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-26 23:12:46,765 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-26 23:12:46,766 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:12:46,766 INFO sqlalchemy.engine.base.Engine Thread-13 : ('philip', 1, 1)
2020-01-26 23:12:46,767 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:12:46,767 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:13:32,491 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:13:32,491 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,492 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:13:32,493 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:13:32,494 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:13:32,494 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:13:32,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:13:32,495 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:13:32,495 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:13:32,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:13:32,496 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:13:32,496 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:13:32,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:13:32,498 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:13:32,498 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,499 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:13:32,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,499 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:13:32,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,500 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:13:32,502 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:13:32,503 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:13:32,503 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:13:32,504 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:13:32,518 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:13:32,519 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:32,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:13:32,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:13:32,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:13:32,522 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:13:50,451 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:13:50,452 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,453 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:13:50,453 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:13:50,454 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:13:50,454 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,454 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:13:50,454 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:13:50,455 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:13:50,455 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,455 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:13:50,455 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:13:50,455 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:13:50,456 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:13:50,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:13:50,457 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:13:50,457 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,458 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:13:50,458 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,458 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:13:50,458 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,459 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:13:50,462 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:13:50,462 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:13:50,463 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:13:50,463 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:13:50,479 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:13:50,479 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:13:50,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:13:50,481 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:13:50,481 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:14:08,529 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:14:08,529 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,530 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:14:08,530 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:14:08,531 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:14:08,531 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,532 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:14:08,532 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:14:08,532 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:14:08,532 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,532 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:14:08,532 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:14:08,533 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:14:08,533 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,533 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:14:08,534 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:14:08,534 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:14:08,534 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,535 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:14:08,535 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,535 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:14:08,535 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,536 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:14:08,539 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:14:08,539 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:14:08,539 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:14:08,540 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:14:08,555 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:14:08,555 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:14:08,557 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:14:08,557 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:14:08,557 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:14:08,558 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:16:19,978 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:16:19,979 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:16:19,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:16:19,981 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:16:19,981 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:16:19,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:16:19,982 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:16:19,982 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:16:19,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:16:19,983 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:16:19,983 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,984 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:16:19,984 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:16:19,985 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:16:19,985 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,985 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:16:19,985 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,986 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:16:19,986 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:19,986 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:16:19,989 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:16:19,989 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:16:19,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:16:19,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:16:20,008 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:16:20,008 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:16:20,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:16:20,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:16:20,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:16:20,012 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:17:27,190 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:17:27,190 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,191 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:17:27,191 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:17:27,192 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:17:27,192 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,193 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:17:27,193 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:17:27,193 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:17:27,193 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:17:27,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:17:27,194 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:17:27,194 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,195 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:17:27,196 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:17:27,196 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:17:27,196 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,197 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:17:27,197 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,198 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:17:27,198 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,199 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:17:27,201 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:17:27,201 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:17:27,202 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:17:27,202 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:17:27,217 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:17:27,218 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:17:27,219 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:17:27,220 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:17:27,220 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:17:27,222 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:17:53,108 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 23:17:53,109 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:17:53,110 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 23:17:53,111 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:17:53,111 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:17:53,113 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest
2020-01-26 23:17:53,114 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 23:17:53,114 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-26 23:17:53,114 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-26 23:17:53,114 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-26 23:17:53,115 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-26 23:17:53,116 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 23:18:11,930 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-26 23:18:11,931 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:18:11,931 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-26 23:18:11,932 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:18:11,933 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:18:11,934 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles
2020-01-26 23:18:11,934 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-26 23:18:11,935 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_created_date', 'roles_enabled')
2020-01-26 23:18:11,935 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Standard User Access', 0, datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 23:18:11,935 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Administrator User Access', 1, datetime.datetime(2019, 8, 28, 11, 44, 3), 1)
2020-01-26 23:18:11,935 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (6, 'New User', 0, datetime.datetime(2020, 1, 26, 19, 12, 58), 1)
2020-01-26 23:18:11,936 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-26 23:18:22,985 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 23:18:22,986 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:18:22,986 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 23:18:22,987 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:18:22,987 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:18:22,990 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-26 23:18:22,990 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 23:18:22,990 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value')
2020-01-26 23:18:22,991 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Philip', 'Troon', 'User account for Philip Troon', 'philiptroon@gmail.com', 'Administrator User Access', 'Vendor-name1')
2020-01-26 23:18:22,991 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1')
2020-01-26 23:18:22,991 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (3, 'Frank', 'Black', 'User account for Frank Black test 987654321', 'frank@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 23:18:22,991 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (4, 'Evan', 'Troon', 'Account for Evan Bobba Fett', 'evan@someone.com', 'Standard User Access', 'Main-Organisation')
2020-01-26 23:18:22,991 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (6, 'Dylan', 'Troon', 'Dylan Troon TEST12399', 'dylan@somewhere.com', 'Standard User Access', 'Vendor-name2')
2020-01-26 23:18:22,992 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-26 23:18:50,494 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-26 23:18:50,496 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:18:50,496 INFO sqlalchemy.engine.base.Engine Thread-6 : ('philip', 1, 1)
2020-01-26 23:18:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:18:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:18:50,500 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users.email AS users_email, roles.role_name AS roles_role_name, parameters.param_value AS parameters_param_value, users.enabled AS users_enabled, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor 
WHERE users.id = %s
2020-01-26 23:18:50,500 INFO sqlalchemy.engine.base.Engine Thread-6 : ('2',)
2020-01-26 23:18:50,501 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users_email', 'roles_role_name', 'parameters_param_value', 'users_enabled', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by')
2020-01-26 23:18:50,501 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', 'bob@somewhere.com', 'New User', 'Vendor-name1', 0, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip')
2020-01-26 23:18:50,502 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-26 23:19:02,916 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-01-26 23:19:02,918 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:19:02,918 INFO sqlalchemy.engine.base.Engine Thread-7 : ('philip', 1, 1)
2020-01-26 23:19:02,918 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:19:02,918 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:19:02,929 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:19:02,929 INFO sqlalchemy.engine.base.Engine Thread-7 : ()
2020-01-26 23:19:02,930 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:19:02,931 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:19:02,931 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:19:02,932 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-01-26 23:26:47,751 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:26:47,752 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,753 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:26:47,754 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:26:47,754 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:26:47,754 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:26:47,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:26:47,755 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:26:47,756 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:26:47,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:26:47,756 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:26:47,756 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:26:47,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:26:47,758 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:26:47,758 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,759 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:26:47,759 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,759 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:26:47,759 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,760 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:26:47,763 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:26:47,763 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:26:47,764 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:26:47,764 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:26:47,782 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS complex_manager, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value, parameters_4.param_value AS parameters_4_param_value 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:26:47,782 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:26:47,783 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'complex_manager', 'parameters_2_param_value', 'parameters_3_param_value', 'parameters_4_param_value')
2020-01-26 23:26:47,784 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:26:47,784 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:26:47,786 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:28:18,263 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:28:18,263 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,264 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:28:18,264 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:28:18,265 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:28:18,265 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,265 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:28:18,265 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:28:18,266 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:28:18,266 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:28:18,266 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:28:18,267 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:28:18,267 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:28:18,267 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:28:18,268 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:28:18,268 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,269 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:28:18,269 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,270 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:28:18,270 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,270 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:28:18,273 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:28:18,273 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:28:18,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:28:18,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:28:18,291 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_value AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:28:18,291 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:18,293 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:28:18,293 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:28:18,293 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', '1')
2020-01-26 23:28:18,295 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:28:54,118 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:28:54,118 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,119 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:28:54,119 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:28:54,120 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:28:54,120 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:28:54,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:28:54,121 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:28:54,121 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,121 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:28:54,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:28:54,122 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:28:54,122 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,122 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:28:54,123 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:28:54,123 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:28:54,123 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,124 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:28:54,124 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,124 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:28:54,124 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,125 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:28:54,127 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:28:54,127 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:28:54,128 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:28:54,129 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:28:54,143 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:28:54,143 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:28:54,145 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:28:54,145 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:28:54,146 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:28:54,148 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:29:25,171 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:29:25,171 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,172 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:29:25,172 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:29:25,173 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:29:25,173 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:29:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:29:25,174 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:29:25,174 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:29:25,175 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:29:25,175 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:29:25,175 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:29:25,176 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:29:25,176 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:29:25,176 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,177 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:29:25,177 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,178 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:29:25,178 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,178 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:29:25,180 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:29:25,181 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:29:25,181 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:29:25,182 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:29:25,191 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.complex_name AS complexes_complex_name, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:29:25,191 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:29:25,192 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_complex_name', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:29:25,192 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('This is a Complex', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:29:25,192 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('Fortigate blah blah', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:29:25,193 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:30:58,956 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:30:58,957 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:30:58,959 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:30:58,959 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:30:58,959 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:30:58,960 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:30:58,960 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:30:58,961 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,961 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:30:58,961 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:30:58,961 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:30:58,961 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:30:58,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:30:58,963 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:30:58,963 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,964 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:30:58,964 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,964 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:30:58,964 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,965 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:30:58,968 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:30:58,968 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:30:58,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:30:58,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:30:58,978 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:30:58,978 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:30:58,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:30:58,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:30:58,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:30:58,981 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:31:58,969 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:31:58,969 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,970 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:31:58,971 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:31:58,971 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:31:58,971 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,972 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:31:58,972 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:31:58,972 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:31:58,972 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:31:58,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:31:58,973 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:31:58,973 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,974 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:31:58,974 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:31:58,975 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:31:58,975 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,975 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:31:58,975 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,976 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:31:58,976 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,976 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:31:58,979 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:31:58,979 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-26 23:31:58,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:31:58,980 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:31:58,990 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:31:58,990 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:31:58,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:31:58,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'This is a Complex', 'NYNNNNN', '02:00', '04:00', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:31:58,991 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Fortigate blah blah', 'NNNNNYY', '02:00', '04:00', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:31:58,992 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:32:34,277 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-26 23:32:34,278 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:34,278 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-26 23:32:34,278 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:34,279 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:34,281 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:34,281 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 23:32:34,282 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:34,282 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:34,299 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-26 23:32:34,299 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-26 23:32:34,301 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-26 23:32:34,302 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:34,302 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:34,366 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:34,366 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-26 23:32:34,367 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:34,367 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:34,368 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-26 23:32:37,650 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-26 23:32:37,651 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:37,651 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-26 23:32:37,652 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:37,652 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:37,655 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:37,655 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-26 23:32:37,656 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:37,656 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:37,660 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:32:37,660 INFO sqlalchemy.engine.base.Engine Thread-10 : ('2', 1)
2020-01-26 23:32:37,661 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:32:37,662 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-26 23:32:37,665 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:37,665 INFO sqlalchemy.engine.base.Engine Thread-10 : (89,)
2020-01-26 23:32:37,666 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,666 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:32:37,666 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:32:37,667 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:37,668 INFO sqlalchemy.engine.base.Engine Thread-10 : (2,)
2020-01-26 23:32:37,668 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,668 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:32:37,668 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:32:37,668 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:32:37,670 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:37,670 INFO sqlalchemy.engine.base.Engine Thread-10 : (100,)
2020-01-26 23:32:37,670 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,670 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:32:37,671 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:32:37,671 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:32:37,671 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:32:37,672 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:37,672 INFO sqlalchemy.engine.base.Engine Thread-10 : (1,)
2020-01-26 23:32:37,673 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,673 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:37,673 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:37,674 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:37,674 INFO sqlalchemy.engine.base.Engine Thread-10 : (1,)
2020-01-26 23:32:37,675 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,675 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:37,675 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:37,676 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:37,676 INFO sqlalchemy.engine.base.Engine Thread-10 : (105,)
2020-01-26 23:32:37,677 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,677 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:32:37,677 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:32:37,679 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:37,679 INFO sqlalchemy.engine.base.Engine Thread-10 : (92,)
2020-01-26 23:32:37,679 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,679 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:32:37,679 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:32:37,679 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:32:37,680 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:32:37,681 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:37,681 INFO sqlalchemy.engine.base.Engine Thread-10 : (66,)
2020-01-26 23:32:37,681 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:37,682 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:32:37,682 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:37,705 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:37,705 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-26 23:32:37,705 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:37,706 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:37,710 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-26 23:32:39,787 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-26 23:32:39,788 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:39,788 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-26 23:32:39,789 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:39,789 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:39,792 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:39,792 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-26 23:32:39,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:39,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:39,805 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-26 23:32:39,805 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-26 23:32:39,806 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-26 23:32:39,807 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:39,807 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:39,811 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:39,811 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-26 23:32:39,812 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:39,812 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:39,814 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-26 23:32:40,946 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-26 23:32:40,947 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:40,948 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-26 23:32:40,948 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:40,949 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:40,951 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:40,951 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-26 23:32:40,952 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:40,952 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:40,956 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:32:40,956 INFO sqlalchemy.engine.base.Engine Thread-24 : ('1', 1)
2020-01-26 23:32:40,957 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:32:40,957 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67)
2020-01-26 23:32:40,960 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:40,960 INFO sqlalchemy.engine.base.Engine Thread-24 : (89,)
2020-01-26 23:32:40,961 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,961 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:32:40,961 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:32:40,962 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:40,963 INFO sqlalchemy.engine.base.Engine Thread-24 : (2,)
2020-01-26 23:32:40,963 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,963 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:32:40,963 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:32:40,963 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:32:40,965 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:40,965 INFO sqlalchemy.engine.base.Engine Thread-24 : (100,)
2020-01-26 23:32:40,965 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,966 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:32:40,966 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:32:40,966 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:32:40,966 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:32:40,967 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:40,967 INFO sqlalchemy.engine.base.Engine Thread-24 : (1,)
2020-01-26 23:32:40,968 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,968 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:40,968 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:40,970 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:40,970 INFO sqlalchemy.engine.base.Engine Thread-24 : (1,)
2020-01-26 23:32:40,970 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,970 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:40,971 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:40,972 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:40,972 INFO sqlalchemy.engine.base.Engine Thread-24 : (105,)
2020-01-26 23:32:40,972 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,973 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:32:40,973 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:32:40,974 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:40,974 INFO sqlalchemy.engine.base.Engine Thread-24 : (92,)
2020-01-26 23:32:40,974 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,975 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:32:40,975 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:32:40,975 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:32:40,975 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:32:40,976 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:40,976 INFO sqlalchemy.engine.base.Engine Thread-24 : (66,)
2020-01-26 23:32:40,977 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:40,977 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:32:40,977 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:40,981 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:40,981 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-26 23:32:40,981 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:40,982 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:40,986 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-26 23:32:48,009 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-26 23:32:48,010 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:48,010 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-01-26 23:32:48,011 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:48,011 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:48,014 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:48,014 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-26 23:32:48,015 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:48,015 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:48,019 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:32:48,020 INFO sqlalchemy.engine.base.Engine Thread-31 : ('1', 1)
2020-01-26 23:32:48,021 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:32:48,021 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'This is a Complex', 86, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 24, 14, 50, 19), 67)
2020-01-26 23:32:48,027 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:48,027 INFO sqlalchemy.engine.base.Engine Thread-31 : (89,)
2020-01-26 23:32:48,028 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,028 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:32:48,028 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:32:48,030 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:48,030 INFO sqlalchemy.engine.base.Engine Thread-31 : (2,)
2020-01-26 23:32:48,030 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,031 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:32:48,031 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:32:48,031 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:32:48,032 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:48,032 INFO sqlalchemy.engine.base.Engine Thread-31 : (100,)
2020-01-26 23:32:48,033 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,033 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:32:48,033 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:32:48,033 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:32:48,033 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:32:48,034 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:48,034 INFO sqlalchemy.engine.base.Engine Thread-31 : (1,)
2020-01-26 23:32:48,035 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,035 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:48,035 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:48,036 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:48,036 INFO sqlalchemy.engine.base.Engine Thread-31 : (1,)
2020-01-26 23:32:48,037 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,037 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:48,037 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:48,038 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:48,038 INFO sqlalchemy.engine.base.Engine Thread-31 : (105,)
2020-01-26 23:32:48,039 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,039 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:32:48,039 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:32:48,041 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:48,041 INFO sqlalchemy.engine.base.Engine Thread-31 : (92,)
2020-01-26 23:32:48,041 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,042 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:32:48,042 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:32:48,042 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:32:48,042 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:32:48,043 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:48,043 INFO sqlalchemy.engine.base.Engine Thread-31 : (66,)
2020-01-26 23:32:48,044 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:48,044 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:32:48,044 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:48,047 INFO sqlalchemy.engine.base.Engine Thread-31 : UPDATE complexes SET id=%s, complex_manager=%s, complex_restrict_start=%s, complex_restrict_end=%s, complex_updated=%s WHERE complexes.id = %s
2020-01-26 23:32:48,048 INFO sqlalchemy.engine.base.Engine Thread-31 : ('1', 87, '0', '0', datetime.datetime(2020, 1, 26, 23, 32, 48, 46142), 1)
2020-01-26 23:32:48,049 INFO sqlalchemy.engine.base.Engine Thread-31 : COMMIT
2020-01-26 23:32:48,170 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-26 23:32:48,171 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:48,172 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-01-26 23:32:48,172 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:48,173 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:48,175 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:48,175 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-01-26 23:32:48,176 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:48,176 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:48,187 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-26 23:32:48,188 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-01-26 23:32:48,189 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-26 23:32:48,190 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 32, 48), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:48,190 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:48,195 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:48,195 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-01-26 23:32:48,195 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:48,196 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:48,199 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-26 23:32:51,908 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-26 23:32:51,909 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:32:51,909 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-01-26 23:32:51,910 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:51,910 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:51,912 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:51,912 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-26 23:32:51,913 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:51,913 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:51,917 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:32:51,917 INFO sqlalchemy.engine.base.Engine Thread-39 : ('1', 1)
2020-01-26 23:32:51,918 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:32:51,918 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 32, 48), 67)
2020-01-26 23:32:51,922 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:51,922 INFO sqlalchemy.engine.base.Engine Thread-39 : (89,)
2020-01-26 23:32:51,922 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,923 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:32:51,923 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:32:51,924 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:51,924 INFO sqlalchemy.engine.base.Engine Thread-39 : (2,)
2020-01-26 23:32:51,925 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,925 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:32:51,925 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:32:51,925 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:32:51,926 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:32:51,926 INFO sqlalchemy.engine.base.Engine Thread-39 : (100,)
2020-01-26 23:32:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:32:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:32:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:32:51,927 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:32:51,928 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:51,929 INFO sqlalchemy.engine.base.Engine Thread-39 : (1,)
2020-01-26 23:32:51,929 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,929 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:51,929 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:51,931 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:51,931 INFO sqlalchemy.engine.base.Engine Thread-39 : (1,)
2020-01-26 23:32:51,931 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,932 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:32:51,932 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:32:51,933 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:51,933 INFO sqlalchemy.engine.base.Engine Thread-39 : (105,)
2020-01-26 23:32:51,934 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,934 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:32:51,934 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:32:51,935 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:51,936 INFO sqlalchemy.engine.base.Engine Thread-39 : (92,)
2020-01-26 23:32:51,936 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,936 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:32:51,936 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:32:51,937 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:32:51,937 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:32:51,938 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:32:51,938 INFO sqlalchemy.engine.base.Engine Thread-39 : (66,)
2020-01-26 23:32:51,939 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:32:51,939 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:32:51,939 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:32:51,943 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:32:51,943 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-26 23:32:51,944 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:32:51,944 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:32:51,948 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-26 23:33:08,093 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-26 23:33:08,094 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:08,094 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-01-26 23:33:08,095 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:08,095 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:08,098 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:08,098 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip', 1, 1)
2020-01-26 23:33:08,099 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:08,099 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:08,102 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:33:08,103 INFO sqlalchemy.engine.base.Engine Thread-46 : ('1', 1)
2020-01-26 23:33:08,104 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:33:08,104 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 32, 48), 67)
2020-01-26 23:33:08,110 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:08,110 INFO sqlalchemy.engine.base.Engine Thread-46 : (89,)
2020-01-26 23:33:08,111 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,111 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:33:08,111 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:33:08,112 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:08,112 INFO sqlalchemy.engine.base.Engine Thread-46 : (2,)
2020-01-26 23:33:08,113 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,113 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:33:08,113 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:33:08,113 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:33:08,115 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:08,115 INFO sqlalchemy.engine.base.Engine Thread-46 : (100,)
2020-01-26 23:33:08,115 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,116 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:33:08,116 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:33:08,116 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:33:08,116 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:33:08,117 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:08,118 INFO sqlalchemy.engine.base.Engine Thread-46 : (1,)
2020-01-26 23:33:08,118 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,118 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:33:08,118 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:33:08,120 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:08,120 INFO sqlalchemy.engine.base.Engine Thread-46 : (1,)
2020-01-26 23:33:08,120 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,120 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:33:08,121 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:33:08,122 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:08,122 INFO sqlalchemy.engine.base.Engine Thread-46 : (105,)
2020-01-26 23:33:08,123 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,123 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:33:08,123 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:33:08,124 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:08,124 INFO sqlalchemy.engine.base.Engine Thread-46 : (92,)
2020-01-26 23:33:08,125 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,125 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:33:08,125 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:33:08,125 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:33:08,125 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:33:08,127 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:08,127 INFO sqlalchemy.engine.base.Engine Thread-46 : (66,)
2020-01-26 23:33:08,127 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:08,127 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:33:08,128 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:08,130 INFO sqlalchemy.engine.base.Engine Thread-46 : UPDATE complexes SET id=%s, complex_area=%s, complex_type=%s, complex_country=%s, complex_restrict_start=%s, complex_restrict_end=%s, complex_updated=%s WHERE complexes.id = %s
2020-01-26 23:33:08,130 INFO sqlalchemy.engine.base.Engine Thread-46 : ('1', 69, 102, 69, '0', '0', datetime.datetime(2020, 1, 26, 23, 33, 8, 129411), 1)
2020-01-26 23:33:08,131 INFO sqlalchemy.engine.base.Engine Thread-46 : COMMIT
2020-01-26 23:33:08,210 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-01-26 23:33:08,211 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:08,211 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-01-26 23:33:08,212 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:08,212 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:08,215 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:08,215 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-01-26 23:33:08,216 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:08,216 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:08,227 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-26 23:33:08,227 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-01-26 23:33:08,228 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-26 23:33:08,229 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 102, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 33, 8), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 102, 'Juniper', 'Juniper', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:08,230 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:08,233 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:08,234 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-01-26 23:33:08,234 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:08,234 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:08,237 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-01-26 23:33:17,772 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-01-26 23:33:17,773 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:17,773 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-01-26 23:33:17,774 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:17,775 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:17,777 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:17,777 INFO sqlalchemy.engine.base.Engine Thread-54 : ('philip', 1, 1)
2020-01-26 23:33:17,778 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:17,778 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:17,781 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:17,781 INFO sqlalchemy.engine.base.Engine Thread-54 : (0,)
2020-01-26 23:33:17,781 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:17,782 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:17,783 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:17,785 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-01-26 23:33:17,785 INFO sqlalchemy.engine.base.Engine Thread-54 : (0, 1)
2020-01-26 23:33:17,786 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:17,786 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:17,788 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-26 23:33:17,788 INFO sqlalchemy.engine.base.Engine Thread-54 : (66, 0, 20)
2020-01-26 23:33:17,788 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:17,789 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:17,789 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:33:17,815 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:17,815 INFO sqlalchemy.engine.base.Engine Thread-54 : ('philip', 1, 1)
2020-01-26 23:33:17,815 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:17,816 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:17,818 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-01-26 23:33:20,593 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-01-26 23:33:20,594 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:20,594 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-01-26 23:33:20,595 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:20,596 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:20,598 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:20,598 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-01-26 23:33:20,599 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:20,599 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:20,602 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:20,602 INFO sqlalchemy.engine.base.Engine Thread-61 : (0,)
2020-01-26 23:33:20,602 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:20,603 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:20,604 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:20,604 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:20,605 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-26 23:33:20,605 INFO sqlalchemy.engine.base.Engine Thread-61 : ('89', 0, 20)
2020-01-26 23:33:20,606 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:20,606 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:33:20,606 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:33:20,610 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:20,610 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-01-26 23:33:20,611 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:20,612 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:20,615 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-01-26 23:33:26,230 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-01-26 23:33:26,231 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:26,231 INFO sqlalchemy.engine.base.Engine Thread-68 : (1, 1)
2020-01-26 23:33:26,232 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:26,232 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:26,235 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:26,235 INFO sqlalchemy.engine.base.Engine Thread-68 : ('philip', 1, 1)
2020-01-26 23:33:26,235 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:26,235 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:26,238 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:26,238 INFO sqlalchemy.engine.base.Engine Thread-68 : (0,)
2020-01-26 23:33:26,238 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:26,239 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:26,240 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:26,240 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:26,240 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:26,240 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:26,240 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:26,240 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:26,242 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-26 23:33:26,242 INFO sqlalchemy.engine.base.Engine Thread-68 : ('100', 0, 20)
2020-01-26 23:33:26,243 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:26,243 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:33:26,243 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:33:26,243 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:33:26,243 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:33:26,247 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:26,247 INFO sqlalchemy.engine.base.Engine Thread-68 : ('philip', 1, 1)
2020-01-26 23:33:26,248 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:26,248 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:26,251 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-01-26 23:33:30,203 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-01-26 23:33:30,205 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:30,205 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-01-26 23:33:30,206 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:30,206 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:30,208 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:30,208 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-01-26 23:33:30,209 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:30,209 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:30,210 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-01-26 23:33:30,210 INFO sqlalchemy.engine.base.Engine Thread-75 : ('100', 1)
2020-01-26 23:33:30,211 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:30,211 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:30,213 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:30,213 INFO sqlalchemy.engine.base.Engine Thread-75 : (0,)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:30,214 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:30,244 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:30,245 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-01-26 23:33:30,245 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:30,245 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:30,248 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-01-26 23:33:31,907 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-01-26 23:33:31,908 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:31,908 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-01-26 23:33:31,909 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:31,909 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:31,911 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:31,912 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-01-26 23:33:31,912 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:31,913 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:31,915 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:31,915 INFO sqlalchemy.engine.base.Engine Thread-82 : (0,)
2020-01-26 23:33:31,915 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:31,915 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:31,916 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:31,917 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:31,917 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:31,917 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:31,919 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-01-26 23:33:31,919 INFO sqlalchemy.engine.base.Engine Thread-82 : (100, 1)
2020-01-26 23:33:31,919 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:31,919 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:31,921 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-26 23:33:31,921 INFO sqlalchemy.engine.base.Engine Thread-82 : (100, 0, 20)
2020-01-26 23:33:31,922 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:31,922 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:33:31,922 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:33:31,922 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:33:31,922 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:33:31,926 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:31,926 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-01-26 23:33:31,927 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:31,927 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:31,930 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-01-26 23:33:33,710 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-01-26 23:33:33,712 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:33,712 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-01-26 23:33:33,712 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:33,713 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:33,715 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:33,715 INFO sqlalchemy.engine.base.Engine Thread-89 : ('philip', 1, 1)
2020-01-26 23:33:33,716 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:33,716 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:33,718 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-01-26 23:33:33,718 INFO sqlalchemy.engine.base.Engine Thread-89 : ('0', 1)
2020-01-26 23:33:33,718 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:33,721 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:33,721 INFO sqlalchemy.engine.base.Engine Thread-89 : (0,)
2020-01-26 23:33:33,721 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:33,722 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:33,723 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:33,723 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:33,723 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:33,727 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:33,727 INFO sqlalchemy.engine.base.Engine Thread-89 : ('philip', 1, 1)
2020-01-26 23:33:33,727 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:33,729 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:33,731 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-01-26 23:33:47,592 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-01-26 23:33:47,593 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:47,593 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-01-26 23:33:47,594 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:47,594 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:47,596 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:47,596 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-01-26 23:33:47,597 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:47,597 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:47,598 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-01-26 23:33:47,598 INFO sqlalchemy.engine.base.Engine Thread-96 : ('0', 1)
2020-01-26 23:33:47,599 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:47,601 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:47,601 INFO sqlalchemy.engine.base.Engine Thread-96 : (0,)
2020-01-26 23:33:47,602 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:47,602 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:47,602 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:47,602 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:47,603 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:47,604 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:47,606 INFO sqlalchemy.engine.base.Engine Thread-96 : INSERT INTO parameters (id, param_name, param_value, param_group, param_parent, param_disabled, param_critical) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-01-26 23:33:47,606 INFO sqlalchemy.engine.base.Engine Thread-96 : ('0', 'CheckPoint', 'CheckPoint', 100, '', 0, 0)
2020-01-26 23:33:47,607 INFO sqlalchemy.engine.base.Engine Thread-96 : COMMIT
2020-01-26 23:33:47,697 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-01-26 23:33:47,698 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:47,698 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-01-26 23:33:47,699 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:47,699 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:47,701 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:47,701 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-01-26 23:33:47,702 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:47,702 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:47,704 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:47,704 INFO sqlalchemy.engine.base.Engine Thread-97 : (0,)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-26 23:33:47,705 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-26 23:33:47,706 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-26 23:33:47,708 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.id = %s 
 LIMIT %s
2020-01-26 23:33:47,708 INFO sqlalchemy.engine.base.Engine Thread-97 : (100, 1)
2020-01-26 23:33:47,709 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:47,709 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-26 23:33:47,711 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-26 23:33:47,711 INFO sqlalchemy.engine.base.Engine Thread-97 : (100, 0, 20)
2020-01-26 23:33:47,711 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:47,712 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:33:47,712 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:33:47,712 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:33:47,712 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:33:47,712 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-26 23:33:47,716 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:47,716 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-01-26 23:33:47,717 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:47,717 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:47,720 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-01-26 23:33:52,033 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-01-26 23:33:52,034 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:52,034 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-01-26 23:33:52,035 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:52,035 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:52,038 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:52,038 INFO sqlalchemy.engine.base.Engine Thread-104 : ('philip', 1, 1)
2020-01-26 23:33:52,039 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:52,039 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:52,049 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-26 23:33:52,049 INFO sqlalchemy.engine.base.Engine Thread-104 : ()
2020-01-26 23:33:52,050 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-26 23:33:52,051 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 102, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 33, 8), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 102, 'Juniper', 'Juniper', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:52,052 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:52,055 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:52,055 INFO sqlalchemy.engine.base.Engine Thread-104 : ('philip', 1, 1)
2020-01-26 23:33:52,056 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:52,056 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:52,058 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-01-26 23:33:53,475 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-01-26 23:33:53,476 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:33:53,476 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-01-26 23:33:53,477 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:53,477 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:53,480 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:53,480 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-01-26 23:33:53,480 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:53,481 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:53,484 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:33:53,484 INFO sqlalchemy.engine.base.Engine Thread-111 : ('1', 1)
2020-01-26 23:33:53,485 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:33:53,486 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 102, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 33, 8), 67)
2020-01-26 23:33:53,488 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:53,488 INFO sqlalchemy.engine.base.Engine Thread-111 : (89,)
2020-01-26 23:33:53,489 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,489 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:33:53,489 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:33:53,490 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:53,490 INFO sqlalchemy.engine.base.Engine Thread-111 : (2,)
2020-01-26 23:33:53,491 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,491 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:33:53,491 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:33:53,491 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:33:53,492 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:33:53,493 INFO sqlalchemy.engine.base.Engine Thread-111 : (100,)
2020-01-26 23:33:53,493 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,493 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-26 23:33:53,493 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:33:53,493 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:33:53,493 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:33:53,494 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:33:53,495 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:53,495 INFO sqlalchemy.engine.base.Engine Thread-111 : (1,)
2020-01-26 23:33:53,495 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,496 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:33:53,496 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:33:53,497 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:53,497 INFO sqlalchemy.engine.base.Engine Thread-111 : (1,)
2020-01-26 23:33:53,497 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,498 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:33:53,498 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:33:53,499 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:53,499 INFO sqlalchemy.engine.base.Engine Thread-111 : (105,)
2020-01-26 23:33:53,499 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,500 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:33:53,500 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:33:53,501 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:53,501 INFO sqlalchemy.engine.base.Engine Thread-111 : (92,)
2020-01-26 23:33:53,502 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,502 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:33:53,502 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:33:53,502 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:33:53,502 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:33:53,503 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:33:53,503 INFO sqlalchemy.engine.base.Engine Thread-111 : (66,)
2020-01-26 23:33:53,504 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:33:53,504 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:33:53,504 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:33:53,508 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:33:53,508 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-01-26 23:33:53,509 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:33:53,509 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:33:53,514 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-01-26 23:34:01,237 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-01-26 23:34:01,239 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:34:01,239 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-01-26 23:34:01,240 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:01,240 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:01,243 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:34:01,243 INFO sqlalchemy.engine.base.Engine Thread-118 : ('philip', 1, 1)
2020-01-26 23:34:01,243 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:01,244 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:01,247 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-26 23:34:01,247 INFO sqlalchemy.engine.base.Engine Thread-118 : ('1', 1)
2020-01-26 23:34:01,247 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-26 23:34:01,248 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 102, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 33, 8), 67)
2020-01-26 23:34:01,252 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:34:01,253 INFO sqlalchemy.engine.base.Engine Thread-118 : (89,)
2020-01-26 23:34:01,253 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,253 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-26 23:34:01,253 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-26 23:34:01,255 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:34:01,255 INFO sqlalchemy.engine.base.Engine Thread-118 : (2,)
2020-01-26 23:34:01,255 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,255 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-26 23:34:01,256 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-26 23:34:01,256 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-26 23:34:01,257 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-26 23:34:01,257 INFO sqlalchemy.engine.base.Engine Thread-118 : (100,)
2020-01-26 23:34:01,257 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,258 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-26 23:34:01,258 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-26 23:34:01,258 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-26 23:34:01,258 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-26 23:34:01,258 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-26 23:34:01,259 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:34:01,260 INFO sqlalchemy.engine.base.Engine Thread-118 : (1,)
2020-01-26 23:34:01,260 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,260 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:34:01,260 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:34:01,262 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:34:01,262 INFO sqlalchemy.engine.base.Engine Thread-118 : (1,)
2020-01-26 23:34:01,262 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,262 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-26 23:34:01,262 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-26 23:34:01,264 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:34:01,264 INFO sqlalchemy.engine.base.Engine Thread-118 : (105,)
2020-01-26 23:34:01,264 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,264 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-26 23:34:01,264 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-26 23:34:01,266 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:34:01,266 INFO sqlalchemy.engine.base.Engine Thread-118 : (92,)
2020-01-26 23:34:01,266 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,266 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-26 23:34:01,266 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-26 23:34:01,266 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-26 23:34:01,267 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-26 23:34:01,268 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-26 23:34:01,268 INFO sqlalchemy.engine.base.Engine Thread-118 : (66,)
2020-01-26 23:34:01,268 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-26 23:34:01,268 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-26 23:34:01,269 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:34:01,271 INFO sqlalchemy.engine.base.Engine Thread-118 : UPDATE complexes SET id=%s, complex_type=%s, complex_restrict_start=%s, complex_restrict_end=%s, complex_updated=%s WHERE complexes.id = %s
2020-01-26 23:34:01,271 INFO sqlalchemy.engine.base.Engine Thread-118 : ('1', 108, '0', '0', datetime.datetime(2020, 1, 26, 23, 34, 1, 270150), 1)
2020-01-26 23:34:01,271 INFO sqlalchemy.engine.base.Engine Thread-118 : COMMIT
2020-01-26 23:34:01,359 INFO sqlalchemy.engine.base.Engine Thread-119 : BEGIN (implicit)
2020-01-26 23:34:01,360 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:34:01,361 INFO sqlalchemy.engine.base.Engine Thread-119 : (1, 1)
2020-01-26 23:34:01,361 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:01,362 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:01,364 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:34:01,364 INFO sqlalchemy.engine.base.Engine Thread-119 : ('philip', 1, 1)
2020-01-26 23:34:01,365 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:01,365 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:01,377 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-26 23:34:01,377 INFO sqlalchemy.engine.base.Engine Thread-119 : ()
2020-01-26 23:34:01,378 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-26 23:34:01,379 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:34:01,379 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-26 23:34:01,383 INFO sqlalchemy.engine.base.Engine Thread-119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:34:01,383 INFO sqlalchemy.engine.base.Engine Thread-119 : ('philip', 1, 1)
2020-01-26 23:34:01,384 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:01,384 DEBUG sqlalchemy.engine.base.Engine Thread-119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:01,387 INFO sqlalchemy.engine.base.Engine Thread-119 : ROLLBACK
2020-01-26 23:34:10,729 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-01-26 23:34:10,730 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:34:10,730 INFO sqlalchemy.engine.base.Engine Thread-126 : ('philip', 1, 1)
2020-01-26 23:34:10,731 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:10,731 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:10,739 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:34:10,739 INFO sqlalchemy.engine.base.Engine Thread-126 : ()
2020-01-26 23:34:10,740 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:34:10,740 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'This is a Complex', 'NYNNNNN', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 'IND', 'Active')
2020-01-26 23:34:10,740 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (2, 'Fortigate blah blah', 'NNNNNYY', '02:00', '04:00', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:34:10,741 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-01-26 23:34:56,984 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-26 23:34:56,984 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,985 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:34:56,986 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-26 23:34:56,987 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-26 23:34:56,987 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,987 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-26 23:34:56,987 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-26 23:34:56,988 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-26 23:34:56,988 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,988 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-26 23:34:56,988 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-26 23:34:56,988 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-26 23:34:56,989 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-26 23:34:56,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-26 23:34:56,990 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-26 23:34:56,990 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,991 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-26 23:34:56,991 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,992 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-26 23:34:56,992 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-26 23:34:56,992 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-26 23:34:56,995 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-26 23:34:56,995 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-26 23:34:56,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:34:56,996 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:34:57,022 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-26 23:35:02,763 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-26 23:35:02,765 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-26 23:35:02,765 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-26 23:35:02,766 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-26 23:35:02,766 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-26 23:35:02,777 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, parameters_1.param_value AS complex_manager, parameters_2.param_value AS complex_type, parameters_3.param_value AS complex_country, parameters_4.param_name AS complex_active 
FROM complexes INNER JOIN parameters AS parameters_1 ON complexes.complex_manager = parameters_1.id INNER JOIN parameters AS parameters_2 ON complexes.complex_type = parameters_2.id INNER JOIN parameters AS parameters_3 ON complexes.complex_country = parameters_3.id INNER JOIN parameters AS parameters_4 ON complexes.complex_active = parameters_4.id
2020-01-26 23:35:02,777 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-26 23:35:02,778 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_push_days', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complex_manager', 'complex_type', 'complex_country', 'complex_active')
2020-01-26 23:35:02,779 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'This is a Complex', 'NYNNNNN', '02:00', '04:00', 'CheckPoint CMA', 'CheckPoint', 'IND', 'Active')
2020-01-26 23:35:02,779 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Fortigate blah blah', 'NNNNNYY', '02:00', '04:00', 'Fortigate FortiManager', 'Cisco', 'GBR', 'Active')
2020-01-26 23:35:02,779 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
