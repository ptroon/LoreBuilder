2020-02-01 00:00:30,449 INFO sqlalchemy.engine.base.Engine Thread-1633 : BEGIN (implicit)
2020-02-01 00:00:30,453 INFO sqlalchemy.engine.base.Engine Thread-1633 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:00:30,453 INFO sqlalchemy.engine.base.Engine Thread-1633 : ()
2020-02-01 00:00:30,455 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:00:30,458 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:00:30,458 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:00:30,461 INFO sqlalchemy.engine.base.Engine Thread-1633 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:00:30,461 INFO sqlalchemy.engine.base.Engine Thread-1633 : (1, 1)
2020-02-01 00:00:30,461 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:30,462 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:30,473 INFO sqlalchemy.engine.base.Engine Thread-1633 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:00:30,473 INFO sqlalchemy.engine.base.Engine Thread-1633 : ('philip', 1, 1)
2020-02-01 00:00:30,474 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:30,474 DEBUG sqlalchemy.engine.base.Engine Thread-1633 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:30,476 INFO sqlalchemy.engine.base.Engine Thread-1633 : ROLLBACK
2020-02-01 00:00:31,013 INFO sqlalchemy.engine.base.Engine Thread-1655 : BEGIN (implicit)
2020-02-01 00:00:31,014 INFO sqlalchemy.engine.base.Engine Thread-1655 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:00:31,014 INFO sqlalchemy.engine.base.Engine Thread-1655 : (1, 1)
2020-02-01 00:00:31,016 DEBUG sqlalchemy.engine.base.Engine Thread-1655 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:31,019 DEBUG sqlalchemy.engine.base.Engine Thread-1655 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:31,021 INFO sqlalchemy.engine.base.Engine Thread-1655 : ROLLBACK
2020-02-01 00:00:31,021 INFO sqlalchemy.engine.base.Engine Thread-1656 : BEGIN (implicit)
2020-02-01 00:00:31,022 INFO sqlalchemy.engine.base.Engine Thread-1656 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:00:31,022 INFO sqlalchemy.engine.base.Engine Thread-1656 : (1, 1)
2020-02-01 00:00:31,023 DEBUG sqlalchemy.engine.base.Engine Thread-1656 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:31,023 DEBUG sqlalchemy.engine.base.Engine Thread-1656 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:31,024 INFO sqlalchemy.engine.base.Engine Thread-1656 : ROLLBACK
2020-02-01 00:00:31,035 INFO sqlalchemy.engine.base.Engine Thread-1657 : BEGIN (implicit)
2020-02-01 00:00:31,037 INFO sqlalchemy.engine.base.Engine Thread-1657 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:00:31,037 INFO sqlalchemy.engine.base.Engine Thread-1657 : (1, 1)
2020-02-01 00:00:31,038 INFO sqlalchemy.engine.base.Engine Thread-1658 : BEGIN (implicit)
2020-02-01 00:00:31,039 INFO sqlalchemy.engine.base.Engine Thread-1658 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:00:31,039 DEBUG sqlalchemy.engine.base.Engine Thread-1657 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:31,039 INFO sqlalchemy.engine.base.Engine Thread-1658 : (1, 1)
2020-02-01 00:00:31,039 DEBUG sqlalchemy.engine.base.Engine Thread-1657 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:31,041 INFO sqlalchemy.engine.base.Engine Thread-1657 : ROLLBACK
2020-02-01 00:00:31,041 DEBUG sqlalchemy.engine.base.Engine Thread-1658 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:31,041 DEBUG sqlalchemy.engine.base.Engine Thread-1658 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:31,042 INFO sqlalchemy.engine.base.Engine Thread-1658 : ROLLBACK
2020-02-01 00:00:31,278 INFO sqlalchemy.engine.base.Engine Thread-1659 : BEGIN (implicit)
2020-02-01 00:00:31,279 INFO sqlalchemy.engine.base.Engine Thread-1659 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:00:31,279 INFO sqlalchemy.engine.base.Engine Thread-1659 : (1, 1)
2020-02-01 00:00:31,280 DEBUG sqlalchemy.engine.base.Engine Thread-1659 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:00:31,280 DEBUG sqlalchemy.engine.base.Engine Thread-1659 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:00:31,281 INFO sqlalchemy.engine.base.Engine Thread-1659 : ROLLBACK
2020-02-01 00:00:31,329 INFO sqlalchemy.engine.base.Engine Thread-1660 : BEGIN (implicit)
2020-02-01 00:00:31,330 INFO sqlalchemy.engine.base.Engine Thread-1660 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:00:31,330 INFO sqlalchemy.engine.base.Engine Thread-1660 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:00:31,331 DEBUG sqlalchemy.engine.base.Engine Thread-1660 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:00:31,332 DEBUG sqlalchemy.engine.base.Engine Thread-1660 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:00:31,332 INFO sqlalchemy.engine.base.Engine Thread-1660 : ROLLBACK
2020-02-01 00:00:32,051 INFO sqlalchemy.engine.base.Engine Thread-1662 : BEGIN (implicit)
2020-02-01 00:00:32,052 INFO sqlalchemy.engine.base.Engine Thread-1662 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:00:32,052 INFO sqlalchemy.engine.base.Engine Thread-1662 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:00:32,053 DEBUG sqlalchemy.engine.base.Engine Thread-1662 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:00:32,053 DEBUG sqlalchemy.engine.base.Engine Thread-1662 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:00:32,054 INFO sqlalchemy.engine.base.Engine Thread-1662 : ROLLBACK
2020-02-01 00:00:33,492 INFO sqlalchemy.engine.base.Engine Thread-1663 : BEGIN (implicit)
2020-02-01 00:00:33,493 INFO sqlalchemy.engine.base.Engine Thread-1663 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:00:33,493 INFO sqlalchemy.engine.base.Engine Thread-1663 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:00:33,494 DEBUG sqlalchemy.engine.base.Engine Thread-1663 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:00:33,494 DEBUG sqlalchemy.engine.base.Engine Thread-1663 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:00:33,495 INFO sqlalchemy.engine.base.Engine Thread-1663 : ROLLBACK
2020-02-01 00:00:35,357 INFO sqlalchemy.engine.base.Engine Thread-1664 : BEGIN (implicit)
2020-02-01 00:00:35,358 INFO sqlalchemy.engine.base.Engine Thread-1664 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:00:35,358 INFO sqlalchemy.engine.base.Engine Thread-1664 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:00:35,359 DEBUG sqlalchemy.engine.base.Engine Thread-1664 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:00:35,359 DEBUG sqlalchemy.engine.base.Engine Thread-1664 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:00:35,359 INFO sqlalchemy.engine.base.Engine Thread-1664 : ROLLBACK
2020-02-01 00:00:36,542 INFO sqlalchemy.engine.base.Engine Thread-1665 : BEGIN (implicit)
2020-02-01 00:00:36,543 INFO sqlalchemy.engine.base.Engine Thread-1665 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:00:36,543 INFO sqlalchemy.engine.base.Engine Thread-1665 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:00:36,544 DEBUG sqlalchemy.engine.base.Engine Thread-1665 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:00:36,544 DEBUG sqlalchemy.engine.base.Engine Thread-1665 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:00:36,544 DEBUG sqlalchemy.engine.base.Engine Thread-1665 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:00:36,545 INFO sqlalchemy.engine.base.Engine Thread-1665 : ROLLBACK
2020-02-01 00:01:59,626 INFO sqlalchemy.engine.base.Engine Thread-1666 : BEGIN (implicit)
2020-02-01 00:01:59,629 INFO sqlalchemy.engine.base.Engine Thread-1666 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:01:59,629 INFO sqlalchemy.engine.base.Engine Thread-1666 : ()
2020-02-01 00:01:59,630 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:01:59,630 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:01:59,631 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:01:59,633 INFO sqlalchemy.engine.base.Engine Thread-1666 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:01:59,633 INFO sqlalchemy.engine.base.Engine Thread-1666 : (1, 1)
2020-02-01 00:01:59,634 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:01:59,634 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:01:59,646 INFO sqlalchemy.engine.base.Engine Thread-1666 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:01:59,646 INFO sqlalchemy.engine.base.Engine Thread-1666 : ('philip', 1, 1)
2020-02-01 00:01:59,647 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:01:59,647 DEBUG sqlalchemy.engine.base.Engine Thread-1666 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:01:59,649 INFO sqlalchemy.engine.base.Engine Thread-1666 : ROLLBACK
2020-02-01 00:02:00,259 INFO sqlalchemy.engine.base.Engine Thread-1674 : BEGIN (implicit)
2020-02-01 00:02:00,260 INFO sqlalchemy.engine.base.Engine Thread-1674 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:00,261 INFO sqlalchemy.engine.base.Engine Thread-1674 : (1, 1)
2020-02-01 00:02:00,262 INFO sqlalchemy.engine.base.Engine Thread-1676 : BEGIN (implicit)
2020-02-01 00:02:00,265 INFO sqlalchemy.engine.base.Engine Thread-1675 : BEGIN (implicit)
2020-02-01 00:02:00,268 INFO sqlalchemy.engine.base.Engine Thread-1677 : BEGIN (implicit)
2020-02-01 00:02:00,269 INFO sqlalchemy.engine.base.Engine Thread-1676 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:00,269 DEBUG sqlalchemy.engine.base.Engine Thread-1674 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:00,270 INFO sqlalchemy.engine.base.Engine Thread-1675 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:00,271 INFO sqlalchemy.engine.base.Engine Thread-1677 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:00,272 INFO sqlalchemy.engine.base.Engine Thread-1676 : (1, 1)
2020-02-01 00:02:00,272 DEBUG sqlalchemy.engine.base.Engine Thread-1674 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:00,272 INFO sqlalchemy.engine.base.Engine Thread-1675 : (1, 1)
2020-02-01 00:02:00,272 INFO sqlalchemy.engine.base.Engine Thread-1677 : (1, 1)
2020-02-01 00:02:00,273 DEBUG sqlalchemy.engine.base.Engine Thread-1676 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:00,274 DEBUG sqlalchemy.engine.base.Engine Thread-1676 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:00,274 INFO sqlalchemy.engine.base.Engine Thread-1674 : ROLLBACK
2020-02-01 00:02:00,275 INFO sqlalchemy.engine.base.Engine Thread-1676 : ROLLBACK
2020-02-01 00:02:00,276 DEBUG sqlalchemy.engine.base.Engine Thread-1677 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:00,276 DEBUG sqlalchemy.engine.base.Engine Thread-1675 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:00,277 DEBUG sqlalchemy.engine.base.Engine Thread-1677 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:00,278 DEBUG sqlalchemy.engine.base.Engine Thread-1675 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:00,280 INFO sqlalchemy.engine.base.Engine Thread-1677 : ROLLBACK
2020-02-01 00:02:00,281 INFO sqlalchemy.engine.base.Engine Thread-1675 : ROLLBACK
2020-02-01 00:02:00,348 INFO sqlalchemy.engine.base.Engine Thread-1678 : BEGIN (implicit)
2020-02-01 00:02:00,349 INFO sqlalchemy.engine.base.Engine Thread-1678 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:00,349 INFO sqlalchemy.engine.base.Engine Thread-1678 : (1, 1)
2020-02-01 00:02:00,350 DEBUG sqlalchemy.engine.base.Engine Thread-1678 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:00,350 DEBUG sqlalchemy.engine.base.Engine Thread-1678 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:00,351 INFO sqlalchemy.engine.base.Engine Thread-1678 : ROLLBACK
2020-02-01 00:02:00,376 INFO sqlalchemy.engine.base.Engine Thread-1679 : BEGIN (implicit)
2020-02-01 00:02:00,377 INFO sqlalchemy.engine.base.Engine Thread-1679 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:02:00,377 INFO sqlalchemy.engine.base.Engine Thread-1679 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:02:00,378 DEBUG sqlalchemy.engine.base.Engine Thread-1679 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:02:00,378 DEBUG sqlalchemy.engine.base.Engine Thread-1679 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:02:00,379 INFO sqlalchemy.engine.base.Engine Thread-1679 : ROLLBACK
2020-02-01 00:02:42,861 INFO sqlalchemy.engine.base.Engine Thread-1681 : BEGIN (implicit)
2020-02-01 00:02:42,864 INFO sqlalchemy.engine.base.Engine Thread-1681 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:02:42,864 INFO sqlalchemy.engine.base.Engine Thread-1681 : ()
2020-02-01 00:02:42,865 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:02:42,866 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:02:42,866 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:02:42,868 INFO sqlalchemy.engine.base.Engine Thread-1681 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:42,868 INFO sqlalchemy.engine.base.Engine Thread-1681 : (1, 1)
2020-02-01 00:02:42,869 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:42,869 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:42,881 INFO sqlalchemy.engine.base.Engine Thread-1681 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:02:42,881 INFO sqlalchemy.engine.base.Engine Thread-1681 : ('philip', 1, 1)
2020-02-01 00:02:42,882 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:42,882 DEBUG sqlalchemy.engine.base.Engine Thread-1681 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:42,884 INFO sqlalchemy.engine.base.Engine Thread-1681 : ROLLBACK
2020-02-01 00:02:43,544 INFO sqlalchemy.engine.base.Engine Thread-1690 : BEGIN (implicit)
2020-02-01 00:02:43,546 INFO sqlalchemy.engine.base.Engine Thread-1689 : BEGIN (implicit)
2020-02-01 00:02:43,547 INFO sqlalchemy.engine.base.Engine Thread-1690 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:43,549 INFO sqlalchemy.engine.base.Engine Thread-1689 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:43,549 INFO sqlalchemy.engine.base.Engine Thread-1690 : (1, 1)
2020-02-01 00:02:43,551 INFO sqlalchemy.engine.base.Engine Thread-1689 : (1, 1)
2020-02-01 00:02:43,552 INFO sqlalchemy.engine.base.Engine Thread-1691 : BEGIN (implicit)
2020-02-01 00:02:43,555 INFO sqlalchemy.engine.base.Engine Thread-1691 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:43,555 INFO sqlalchemy.engine.base.Engine Thread-1691 : (1, 1)
2020-02-01 00:02:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-1690 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-1689 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-1690 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:43,560 INFO sqlalchemy.engine.base.Engine Thread-1690 : ROLLBACK
2020-02-01 00:02:43,558 INFO sqlalchemy.engine.base.Engine Thread-1692 : BEGIN (implicit)
2020-02-01 00:02:43,561 INFO sqlalchemy.engine.base.Engine Thread-1692 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-1691 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:43,561 INFO sqlalchemy.engine.base.Engine Thread-1692 : (1, 1)
2020-02-01 00:02:43,558 DEBUG sqlalchemy.engine.base.Engine Thread-1689 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:43,562 DEBUG sqlalchemy.engine.base.Engine Thread-1691 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:43,564 INFO sqlalchemy.engine.base.Engine Thread-1691 : ROLLBACK
2020-02-01 00:02:43,564 INFO sqlalchemy.engine.base.Engine Thread-1689 : ROLLBACK
2020-02-01 00:02:43,566 DEBUG sqlalchemy.engine.base.Engine Thread-1692 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:43,566 DEBUG sqlalchemy.engine.base.Engine Thread-1692 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:43,568 INFO sqlalchemy.engine.base.Engine Thread-1692 : ROLLBACK
2020-02-01 00:02:43,655 INFO sqlalchemy.engine.base.Engine Thread-1693 : BEGIN (implicit)
2020-02-01 00:02:43,656 INFO sqlalchemy.engine.base.Engine Thread-1693 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:02:43,656 INFO sqlalchemy.engine.base.Engine Thread-1693 : (1, 1)
2020-02-01 00:02:43,656 DEBUG sqlalchemy.engine.base.Engine Thread-1693 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:02:43,657 DEBUG sqlalchemy.engine.base.Engine Thread-1693 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:02:43,658 INFO sqlalchemy.engine.base.Engine Thread-1693 : ROLLBACK
2020-02-01 00:02:43,698 INFO sqlalchemy.engine.base.Engine Thread-1694 : BEGIN (implicit)
2020-02-01 00:02:43,699 INFO sqlalchemy.engine.base.Engine Thread-1694 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:02:43,699 INFO sqlalchemy.engine.base.Engine Thread-1694 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:02:43,700 DEBUG sqlalchemy.engine.base.Engine Thread-1694 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:02:43,700 DEBUG sqlalchemy.engine.base.Engine Thread-1694 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:02:43,701 INFO sqlalchemy.engine.base.Engine Thread-1694 : ROLLBACK
2020-02-01 00:03:21,851 INFO sqlalchemy.engine.base.Engine Thread-1696 : BEGIN (implicit)
2020-02-01 00:03:21,853 INFO sqlalchemy.engine.base.Engine Thread-1696 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:03:21,853 INFO sqlalchemy.engine.base.Engine Thread-1696 : ()
2020-02-01 00:03:21,855 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:03:21,855 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:03:21,855 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:03:21,857 INFO sqlalchemy.engine.base.Engine Thread-1696 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:21,857 INFO sqlalchemy.engine.base.Engine Thread-1696 : (1, 1)
2020-02-01 00:03:21,858 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:21,858 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:21,870 INFO sqlalchemy.engine.base.Engine Thread-1696 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:03:21,871 INFO sqlalchemy.engine.base.Engine Thread-1696 : ('philip', 1, 1)
2020-02-01 00:03:21,871 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:21,872 DEBUG sqlalchemy.engine.base.Engine Thread-1696 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:21,873 INFO sqlalchemy.engine.base.Engine Thread-1696 : ROLLBACK
2020-02-01 00:03:22,468 INFO sqlalchemy.engine.base.Engine Thread-1705 : BEGIN (implicit)
2020-02-01 00:03:22,470 INFO sqlalchemy.engine.base.Engine Thread-1704 : BEGIN (implicit)
2020-02-01 00:03:22,471 INFO sqlalchemy.engine.base.Engine Thread-1705 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:22,472 INFO sqlalchemy.engine.base.Engine Thread-1704 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:22,473 INFO sqlalchemy.engine.base.Engine Thread-1705 : (1, 1)
2020-02-01 00:03:22,473 INFO sqlalchemy.engine.base.Engine Thread-1704 : (1, 1)
2020-02-01 00:03:22,475 INFO sqlalchemy.engine.base.Engine Thread-1706 : BEGIN (implicit)
2020-02-01 00:03:22,477 INFO sqlalchemy.engine.base.Engine Thread-1706 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:22,480 INFO sqlalchemy.engine.base.Engine Thread-1706 : (1, 1)
2020-02-01 00:03:22,480 INFO sqlalchemy.engine.base.Engine Thread-1707 : BEGIN (implicit)
2020-02-01 00:03:22,478 DEBUG sqlalchemy.engine.base.Engine Thread-1705 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:22,481 DEBUG sqlalchemy.engine.base.Engine Thread-1704 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:22,483 DEBUG sqlalchemy.engine.base.Engine Thread-1704 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:22,482 DEBUG sqlalchemy.engine.base.Engine Thread-1706 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:22,484 DEBUG sqlalchemy.engine.base.Engine Thread-1706 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:22,482 INFO sqlalchemy.engine.base.Engine Thread-1707 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:22,485 INFO sqlalchemy.engine.base.Engine Thread-1707 : (1, 1)
2020-02-01 00:03:22,485 INFO sqlalchemy.engine.base.Engine Thread-1706 : ROLLBACK
2020-02-01 00:03:22,482 DEBUG sqlalchemy.engine.base.Engine Thread-1705 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:22,484 INFO sqlalchemy.engine.base.Engine Thread-1704 : ROLLBACK
2020-02-01 00:03:22,487 INFO sqlalchemy.engine.base.Engine Thread-1705 : ROLLBACK
2020-02-01 00:03:22,488 DEBUG sqlalchemy.engine.base.Engine Thread-1707 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:22,489 DEBUG sqlalchemy.engine.base.Engine Thread-1707 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:22,490 INFO sqlalchemy.engine.base.Engine Thread-1707 : ROLLBACK
2020-02-01 00:03:22,599 INFO sqlalchemy.engine.base.Engine Thread-1708 : BEGIN (implicit)
2020-02-01 00:03:22,600 INFO sqlalchemy.engine.base.Engine Thread-1708 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:22,600 INFO sqlalchemy.engine.base.Engine Thread-1708 : (1, 1)
2020-02-01 00:03:22,601 DEBUG sqlalchemy.engine.base.Engine Thread-1708 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:22,601 DEBUG sqlalchemy.engine.base.Engine Thread-1708 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:22,602 INFO sqlalchemy.engine.base.Engine Thread-1708 : ROLLBACK
2020-02-01 00:03:22,640 INFO sqlalchemy.engine.base.Engine Thread-1709 : BEGIN (implicit)
2020-02-01 00:03:22,641 INFO sqlalchemy.engine.base.Engine Thread-1709 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:03:22,641 INFO sqlalchemy.engine.base.Engine Thread-1709 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:03:22,642 DEBUG sqlalchemy.engine.base.Engine Thread-1709 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:03:22,642 DEBUG sqlalchemy.engine.base.Engine Thread-1709 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:03:22,643 INFO sqlalchemy.engine.base.Engine Thread-1709 : ROLLBACK
2020-02-01 00:03:48,078 INFO sqlalchemy.engine.base.Engine Thread-1711 : BEGIN (implicit)
2020-02-01 00:03:48,080 INFO sqlalchemy.engine.base.Engine Thread-1711 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:03:48,080 INFO sqlalchemy.engine.base.Engine Thread-1711 : ()
2020-02-01 00:03:48,081 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:03:48,081 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:03:48,081 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:03:48,083 INFO sqlalchemy.engine.base.Engine Thread-1711 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:48,084 INFO sqlalchemy.engine.base.Engine Thread-1711 : (1, 1)
2020-02-01 00:03:48,084 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,084 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,095 INFO sqlalchemy.engine.base.Engine Thread-1711 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:03:48,095 INFO sqlalchemy.engine.base.Engine Thread-1711 : ('philip', 1, 1)
2020-02-01 00:03:48,096 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,096 DEBUG sqlalchemy.engine.base.Engine Thread-1711 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,098 INFO sqlalchemy.engine.base.Engine Thread-1711 : ROLLBACK
2020-02-01 00:03:48,657 INFO sqlalchemy.engine.base.Engine Thread-1719 : BEGIN (implicit)
2020-02-01 00:03:48,658 INFO sqlalchemy.engine.base.Engine Thread-1719 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:48,658 INFO sqlalchemy.engine.base.Engine Thread-1719 : (1, 1)
2020-02-01 00:03:48,663 DEBUG sqlalchemy.engine.base.Engine Thread-1719 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,664 INFO sqlalchemy.engine.base.Engine Thread-1720 : BEGIN (implicit)
2020-02-01 00:03:48,666 DEBUG sqlalchemy.engine.base.Engine Thread-1719 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,667 INFO sqlalchemy.engine.base.Engine Thread-1722 : BEGIN (implicit)
2020-02-01 00:03:48,668 INFO sqlalchemy.engine.base.Engine Thread-1720 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:48,672 INFO sqlalchemy.engine.base.Engine Thread-1720 : (1, 1)
2020-02-01 00:03:48,672 DEBUG sqlalchemy.engine.base.Engine Thread-1720 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,671 INFO sqlalchemy.engine.base.Engine Thread-1722 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:48,672 DEBUG sqlalchemy.engine.base.Engine Thread-1720 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,674 INFO sqlalchemy.engine.base.Engine Thread-1720 : ROLLBACK
2020-02-01 00:03:48,670 INFO sqlalchemy.engine.base.Engine Thread-1721 : BEGIN (implicit)
2020-02-01 00:03:48,673 INFO sqlalchemy.engine.base.Engine Thread-1722 : (1, 1)
2020-02-01 00:03:48,669 INFO sqlalchemy.engine.base.Engine Thread-1719 : ROLLBACK
2020-02-01 00:03:48,675 INFO sqlalchemy.engine.base.Engine Thread-1721 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:48,677 INFO sqlalchemy.engine.base.Engine Thread-1721 : (1, 1)
2020-02-01 00:03:48,677 DEBUG sqlalchemy.engine.base.Engine Thread-1721 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,677 DEBUG sqlalchemy.engine.base.Engine Thread-1721 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,678 INFO sqlalchemy.engine.base.Engine Thread-1721 : ROLLBACK
2020-02-01 00:03:48,676 DEBUG sqlalchemy.engine.base.Engine Thread-1722 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,679 DEBUG sqlalchemy.engine.base.Engine Thread-1722 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,680 INFO sqlalchemy.engine.base.Engine Thread-1722 : ROLLBACK
2020-02-01 00:03:48,774 INFO sqlalchemy.engine.base.Engine Thread-1723 : BEGIN (implicit)
2020-02-01 00:03:48,775 INFO sqlalchemy.engine.base.Engine Thread-1723 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:03:48,775 INFO sqlalchemy.engine.base.Engine Thread-1723 : (1, 1)
2020-02-01 00:03:48,776 DEBUG sqlalchemy.engine.base.Engine Thread-1723 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:03:48,776 DEBUG sqlalchemy.engine.base.Engine Thread-1723 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:03:48,777 INFO sqlalchemy.engine.base.Engine Thread-1723 : ROLLBACK
2020-02-01 00:03:48,810 INFO sqlalchemy.engine.base.Engine Thread-1724 : BEGIN (implicit)
2020-02-01 00:03:48,811 INFO sqlalchemy.engine.base.Engine Thread-1724 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:03:48,811 INFO sqlalchemy.engine.base.Engine Thread-1724 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:03:48,811 DEBUG sqlalchemy.engine.base.Engine Thread-1724 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:03:48,812 DEBUG sqlalchemy.engine.base.Engine Thread-1724 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:03:48,812 INFO sqlalchemy.engine.base.Engine Thread-1724 : ROLLBACK
2020-02-01 00:04:14,157 INFO sqlalchemy.engine.base.Engine Thread-1726 : BEGIN (implicit)
2020-02-01 00:04:14,159 INFO sqlalchemy.engine.base.Engine Thread-1726 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:04:14,160 INFO sqlalchemy.engine.base.Engine Thread-1726 : ()
2020-02-01 00:04:14,161 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:04:14,161 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:04:14,161 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:04:14,163 INFO sqlalchemy.engine.base.Engine Thread-1726 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:14,163 INFO sqlalchemy.engine.base.Engine Thread-1726 : (1, 1)
2020-02-01 00:04:14,164 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,164 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,176 INFO sqlalchemy.engine.base.Engine Thread-1726 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:04:14,176 INFO sqlalchemy.engine.base.Engine Thread-1726 : ('philip', 1, 1)
2020-02-01 00:04:14,177 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,177 DEBUG sqlalchemy.engine.base.Engine Thread-1726 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,178 INFO sqlalchemy.engine.base.Engine Thread-1726 : ROLLBACK
2020-02-01 00:04:14,759 INFO sqlalchemy.engine.base.Engine Thread-1734 : BEGIN (implicit)
2020-02-01 00:04:14,761 INFO sqlalchemy.engine.base.Engine Thread-1736 : BEGIN (implicit)
2020-02-01 00:04:14,762 INFO sqlalchemy.engine.base.Engine Thread-1734 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:14,768 INFO sqlalchemy.engine.base.Engine Thread-1734 : (1, 1)
2020-02-01 00:04:14,764 INFO sqlalchemy.engine.base.Engine Thread-1735 : BEGIN (implicit)
2020-02-01 00:04:14,768 INFO sqlalchemy.engine.base.Engine Thread-1737 : BEGIN (implicit)
2020-02-01 00:04:14,769 INFO sqlalchemy.engine.base.Engine Thread-1735 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:14,771 INFO sqlalchemy.engine.base.Engine Thread-1735 : (1, 1)
2020-02-01 00:04:14,770 DEBUG sqlalchemy.engine.base.Engine Thread-1734 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,767 INFO sqlalchemy.engine.base.Engine Thread-1736 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:14,772 DEBUG sqlalchemy.engine.base.Engine Thread-1734 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,773 INFO sqlalchemy.engine.base.Engine Thread-1734 : ROLLBACK
2020-02-01 00:04:14,772 INFO sqlalchemy.engine.base.Engine Thread-1736 : (1, 1)
2020-02-01 00:04:14,772 DEBUG sqlalchemy.engine.base.Engine Thread-1735 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,771 INFO sqlalchemy.engine.base.Engine Thread-1737 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:14,776 INFO sqlalchemy.engine.base.Engine Thread-1737 : (1, 1)
2020-02-01 00:04:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-1735 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,774 DEBUG sqlalchemy.engine.base.Engine Thread-1736 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,778 DEBUG sqlalchemy.engine.base.Engine Thread-1736 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,778 DEBUG sqlalchemy.engine.base.Engine Thread-1737 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,777 INFO sqlalchemy.engine.base.Engine Thread-1735 : ROLLBACK
2020-02-01 00:04:14,778 DEBUG sqlalchemy.engine.base.Engine Thread-1737 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,785 INFO sqlalchemy.engine.base.Engine Thread-1737 : ROLLBACK
2020-02-01 00:04:14,779 INFO sqlalchemy.engine.base.Engine Thread-1736 : ROLLBACK
2020-02-01 00:04:14,856 INFO sqlalchemy.engine.base.Engine Thread-1738 : BEGIN (implicit)
2020-02-01 00:04:14,857 INFO sqlalchemy.engine.base.Engine Thread-1738 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:14,857 INFO sqlalchemy.engine.base.Engine Thread-1738 : (1, 1)
2020-02-01 00:04:14,857 DEBUG sqlalchemy.engine.base.Engine Thread-1738 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:14,858 DEBUG sqlalchemy.engine.base.Engine Thread-1738 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:14,859 INFO sqlalchemy.engine.base.Engine Thread-1738 : ROLLBACK
2020-02-01 00:04:14,891 INFO sqlalchemy.engine.base.Engine Thread-1739 : BEGIN (implicit)
2020-02-01 00:04:14,892 INFO sqlalchemy.engine.base.Engine Thread-1739 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:04:14,892 INFO sqlalchemy.engine.base.Engine Thread-1739 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:04:14,893 DEBUG sqlalchemy.engine.base.Engine Thread-1739 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:04:14,893 DEBUG sqlalchemy.engine.base.Engine Thread-1739 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:04:14,894 INFO sqlalchemy.engine.base.Engine Thread-1739 : ROLLBACK
2020-02-01 00:04:53,808 INFO sqlalchemy.engine.base.Engine Thread-1741 : BEGIN (implicit)
2020-02-01 00:04:53,811 INFO sqlalchemy.engine.base.Engine Thread-1741 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:04:53,811 INFO sqlalchemy.engine.base.Engine Thread-1741 : ()
2020-02-01 00:04:53,812 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:04:53,813 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:04:53,813 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:04:53,815 INFO sqlalchemy.engine.base.Engine Thread-1741 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:53,815 INFO sqlalchemy.engine.base.Engine Thread-1741 : (1, 1)
2020-02-01 00:04:53,816 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:53,816 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:53,828 INFO sqlalchemy.engine.base.Engine Thread-1741 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:04:53,828 INFO sqlalchemy.engine.base.Engine Thread-1741 : ('philip', 1, 1)
2020-02-01 00:04:53,829 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:53,829 DEBUG sqlalchemy.engine.base.Engine Thread-1741 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:53,831 INFO sqlalchemy.engine.base.Engine Thread-1741 : ROLLBACK
2020-02-01 00:04:54,426 INFO sqlalchemy.engine.base.Engine Thread-1749 : BEGIN (implicit)
2020-02-01 00:04:54,428 INFO sqlalchemy.engine.base.Engine Thread-1749 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:54,430 INFO sqlalchemy.engine.base.Engine Thread-1750 : BEGIN (implicit)
2020-02-01 00:04:54,430 INFO sqlalchemy.engine.base.Engine Thread-1749 : (1, 1)
2020-02-01 00:04:54,431 INFO sqlalchemy.engine.base.Engine Thread-1750 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:54,437 INFO sqlalchemy.engine.base.Engine Thread-1750 : (1, 1)
2020-02-01 00:04:54,434 INFO sqlalchemy.engine.base.Engine Thread-1751 : BEGIN (implicit)
2020-02-01 00:04:54,436 INFO sqlalchemy.engine.base.Engine Thread-1752 : BEGIN (implicit)
2020-02-01 00:04:54,438 INFO sqlalchemy.engine.base.Engine Thread-1751 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:54,439 DEBUG sqlalchemy.engine.base.Engine Thread-1749 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:54,440 DEBUG sqlalchemy.engine.base.Engine Thread-1749 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:54,441 INFO sqlalchemy.engine.base.Engine Thread-1749 : ROLLBACK
2020-02-01 00:04:54,440 INFO sqlalchemy.engine.base.Engine Thread-1751 : (1, 1)
2020-02-01 00:04:54,439 DEBUG sqlalchemy.engine.base.Engine Thread-1750 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:54,443 DEBUG sqlalchemy.engine.base.Engine Thread-1750 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:54,442 DEBUG sqlalchemy.engine.base.Engine Thread-1751 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:54,444 DEBUG sqlalchemy.engine.base.Engine Thread-1751 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:54,445 INFO sqlalchemy.engine.base.Engine Thread-1751 : ROLLBACK
2020-02-01 00:04:54,444 INFO sqlalchemy.engine.base.Engine Thread-1750 : ROLLBACK
2020-02-01 00:04:54,440 INFO sqlalchemy.engine.base.Engine Thread-1752 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:54,446 INFO sqlalchemy.engine.base.Engine Thread-1752 : (1, 1)
2020-02-01 00:04:54,447 DEBUG sqlalchemy.engine.base.Engine Thread-1752 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:54,447 DEBUG sqlalchemy.engine.base.Engine Thread-1752 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:54,448 INFO sqlalchemy.engine.base.Engine Thread-1752 : ROLLBACK
2020-02-01 00:04:54,555 INFO sqlalchemy.engine.base.Engine Thread-1753 : BEGIN (implicit)
2020-02-01 00:04:54,557 INFO sqlalchemy.engine.base.Engine Thread-1753 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:04:54,557 INFO sqlalchemy.engine.base.Engine Thread-1753 : (1, 1)
2020-02-01 00:04:54,558 DEBUG sqlalchemy.engine.base.Engine Thread-1753 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:04:54,558 DEBUG sqlalchemy.engine.base.Engine Thread-1753 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:04:54,559 INFO sqlalchemy.engine.base.Engine Thread-1753 : ROLLBACK
2020-02-01 00:04:54,601 INFO sqlalchemy.engine.base.Engine Thread-1754 : BEGIN (implicit)
2020-02-01 00:04:54,602 INFO sqlalchemy.engine.base.Engine Thread-1754 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:04:54,602 INFO sqlalchemy.engine.base.Engine Thread-1754 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:04:54,603 DEBUG sqlalchemy.engine.base.Engine Thread-1754 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:04:54,603 DEBUG sqlalchemy.engine.base.Engine Thread-1754 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:04:54,604 INFO sqlalchemy.engine.base.Engine Thread-1754 : ROLLBACK
2020-02-01 00:05:28,640 INFO sqlalchemy.engine.base.Engine Thread-1756 : BEGIN (implicit)
2020-02-01 00:05:28,642 INFO sqlalchemy.engine.base.Engine Thread-1756 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:05:28,642 INFO sqlalchemy.engine.base.Engine Thread-1756 : ()
2020-02-01 00:05:28,644 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:05:28,644 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:05:28,644 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:05:28,647 INFO sqlalchemy.engine.base.Engine Thread-1756 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:28,647 INFO sqlalchemy.engine.base.Engine Thread-1756 : (1, 1)
2020-02-01 00:05:28,647 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:28,647 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:28,659 INFO sqlalchemy.engine.base.Engine Thread-1756 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:05:28,659 INFO sqlalchemy.engine.base.Engine Thread-1756 : ('philip', 1, 1)
2020-02-01 00:05:28,660 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:28,660 DEBUG sqlalchemy.engine.base.Engine Thread-1756 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:28,661 INFO sqlalchemy.engine.base.Engine Thread-1756 : ROLLBACK
2020-02-01 00:05:29,230 INFO sqlalchemy.engine.base.Engine Thread-1764 : BEGIN (implicit)
2020-02-01 00:05:29,231 INFO sqlalchemy.engine.base.Engine Thread-1764 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:29,232 INFO sqlalchemy.engine.base.Engine Thread-1764 : (1, 1)
2020-02-01 00:05:29,234 DEBUG sqlalchemy.engine.base.Engine Thread-1764 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:29,236 INFO sqlalchemy.engine.base.Engine Thread-1765 : BEGIN (implicit)
2020-02-01 00:05:29,238 DEBUG sqlalchemy.engine.base.Engine Thread-1764 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:29,239 INFO sqlalchemy.engine.base.Engine Thread-1765 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:29,241 INFO sqlalchemy.engine.base.Engine Thread-1765 : (1, 1)
2020-02-01 00:05:29,242 INFO sqlalchemy.engine.base.Engine Thread-1764 : ROLLBACK
2020-02-01 00:05:29,244 INFO sqlalchemy.engine.base.Engine Thread-1767 : BEGIN (implicit)
2020-02-01 00:05:29,245 INFO sqlalchemy.engine.base.Engine Thread-1767 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:29,245 INFO sqlalchemy.engine.base.Engine Thread-1767 : (1, 1)
2020-02-01 00:05:29,246 DEBUG sqlalchemy.engine.base.Engine Thread-1765 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:29,246 DEBUG sqlalchemy.engine.base.Engine Thread-1767 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:29,247 DEBUG sqlalchemy.engine.base.Engine Thread-1765 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:29,249 INFO sqlalchemy.engine.base.Engine Thread-1765 : ROLLBACK
2020-02-01 00:05:29,248 DEBUG sqlalchemy.engine.base.Engine Thread-1767 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:29,248 INFO sqlalchemy.engine.base.Engine Thread-1766 : BEGIN (implicit)
2020-02-01 00:05:29,250 INFO sqlalchemy.engine.base.Engine Thread-1766 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:29,250 INFO sqlalchemy.engine.base.Engine Thread-1766 : (1, 1)
2020-02-01 00:05:29,252 INFO sqlalchemy.engine.base.Engine Thread-1767 : ROLLBACK
2020-02-01 00:05:29,252 DEBUG sqlalchemy.engine.base.Engine Thread-1766 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:29,252 DEBUG sqlalchemy.engine.base.Engine Thread-1766 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:29,253 INFO sqlalchemy.engine.base.Engine Thread-1766 : ROLLBACK
2020-02-01 00:05:29,339 INFO sqlalchemy.engine.base.Engine Thread-1768 : BEGIN (implicit)
2020-02-01 00:05:29,340 INFO sqlalchemy.engine.base.Engine Thread-1768 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:29,340 INFO sqlalchemy.engine.base.Engine Thread-1768 : (1, 1)
2020-02-01 00:05:29,341 DEBUG sqlalchemy.engine.base.Engine Thread-1768 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:29,341 DEBUG sqlalchemy.engine.base.Engine Thread-1768 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:29,342 INFO sqlalchemy.engine.base.Engine Thread-1768 : ROLLBACK
2020-02-01 00:05:29,371 INFO sqlalchemy.engine.base.Engine Thread-1769 : BEGIN (implicit)
2020-02-01 00:05:29,373 INFO sqlalchemy.engine.base.Engine Thread-1769 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:05:29,373 INFO sqlalchemy.engine.base.Engine Thread-1769 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:05:29,373 DEBUG sqlalchemy.engine.base.Engine Thread-1769 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:05:29,374 DEBUG sqlalchemy.engine.base.Engine Thread-1769 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:05:29,374 INFO sqlalchemy.engine.base.Engine Thread-1769 : ROLLBACK
2020-02-01 00:05:42,236 INFO sqlalchemy.engine.base.Engine Thread-1771 : BEGIN (implicit)
2020-02-01 00:05:42,237 INFO sqlalchemy.engine.base.Engine Thread-1771 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:05:42,237 INFO sqlalchemy.engine.base.Engine Thread-1771 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:05:42,238 DEBUG sqlalchemy.engine.base.Engine Thread-1771 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:05:42,238 DEBUG sqlalchemy.engine.base.Engine Thread-1771 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:05:42,239 INFO sqlalchemy.engine.base.Engine Thread-1771 : ROLLBACK
2020-02-01 00:05:43,872 INFO sqlalchemy.engine.base.Engine Thread-1772 : BEGIN (implicit)
2020-02-01 00:05:43,873 INFO sqlalchemy.engine.base.Engine Thread-1772 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:05:43,873 INFO sqlalchemy.engine.base.Engine Thread-1772 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:05:43,874 DEBUG sqlalchemy.engine.base.Engine Thread-1772 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:05:43,874 DEBUG sqlalchemy.engine.base.Engine Thread-1772 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:05:43,874 DEBUG sqlalchemy.engine.base.Engine Thread-1772 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:05:43,875 INFO sqlalchemy.engine.base.Engine Thread-1772 : ROLLBACK
2020-02-01 00:05:47,562 INFO sqlalchemy.engine.base.Engine Thread-1773 : BEGIN (implicit)
2020-02-01 00:05:47,563 INFO sqlalchemy.engine.base.Engine Thread-1773 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:05:47,564 INFO sqlalchemy.engine.base.Engine Thread-1773 : ('LightBlue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-02-01 00:05:47,564 DEBUG sqlalchemy.engine.base.Engine Thread-1773 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:05:47,565 DEBUG sqlalchemy.engine.base.Engine Thread-1773 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:05:47,565 DEBUG sqlalchemy.engine.base.Engine Thread-1773 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:05:47,565 INFO sqlalchemy.engine.base.Engine Thread-1773 : ROLLBACK
2020-02-01 00:05:47,767 INFO sqlalchemy.engine.base.Engine Thread-1774 : BEGIN (implicit)
2020-02-01 00:05:47,768 INFO sqlalchemy.engine.base.Engine Thread-1774 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:05:47,768 INFO sqlalchemy.engine.base.Engine Thread-1774 : ('LightBlue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-02-01 00:05:47,769 DEBUG sqlalchemy.engine.base.Engine Thread-1774 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:05:47,770 INFO sqlalchemy.engine.base.Engine Thread-1774 : ROLLBACK
2020-02-01 00:05:47,975 INFO sqlalchemy.engine.base.Engine Thread-1775 : BEGIN (implicit)
2020-02-01 00:05:47,976 INFO sqlalchemy.engine.base.Engine Thread-1775 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:05:47,976 INFO sqlalchemy.engine.base.Engine Thread-1775 : ('LightBlue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0))
2020-02-01 00:05:47,977 DEBUG sqlalchemy.engine.base.Engine Thread-1775 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:05:47,977 DEBUG sqlalchemy.engine.base.Engine Thread-1775 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-01 00:05:47,978 INFO sqlalchemy.engine.base.Engine Thread-1775 : ROLLBACK
2020-02-01 00:05:57,465 INFO sqlalchemy.engine.base.Engine Thread-1776 : BEGIN (implicit)
2020-02-01 00:05:57,466 INFO sqlalchemy.engine.base.Engine Thread-1776 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:57,466 INFO sqlalchemy.engine.base.Engine Thread-1776 : (1, 1)
2020-02-01 00:05:57,467 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:57,467 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:57,469 INFO sqlalchemy.engine.base.Engine Thread-1776 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:05:57,469 INFO sqlalchemy.engine.base.Engine Thread-1776 : ('philip', 1, 1)
2020-02-01 00:05:57,470 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:57,470 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:57,478 INFO sqlalchemy.engine.base.Engine Thread-1776 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 00:05:57,478 INFO sqlalchemy.engine.base.Engine Thread-1776 : ()
2020-02-01 00:05:57,479 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 00:05:57,479 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 00:05:57,479 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 00:05:57,479 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 00:05:57,480 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 00:05:57,480 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 00:05:57,480 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 00:05:57,480 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 00:05:57,480 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 00:05:57,484 INFO sqlalchemy.engine.base.Engine Thread-1776 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:05:57,484 INFO sqlalchemy.engine.base.Engine Thread-1776 : ('philip', 1, 1)
2020-02-01 00:05:57,484 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:57,485 DEBUG sqlalchemy.engine.base.Engine Thread-1776 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:57,486 INFO sqlalchemy.engine.base.Engine Thread-1776 : ROLLBACK
2020-02-01 00:05:58,007 INFO sqlalchemy.engine.base.Engine Thread-1784 : BEGIN (implicit)
2020-02-01 00:05:58,008 INFO sqlalchemy.engine.base.Engine Thread-1784 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:58,011 INFO sqlalchemy.engine.base.Engine Thread-1786 : BEGIN (implicit)
2020-02-01 00:05:58,011 INFO sqlalchemy.engine.base.Engine Thread-1784 : (1, 1)
2020-02-01 00:05:58,014 INFO sqlalchemy.engine.base.Engine Thread-1785 : BEGIN (implicit)
2020-02-01 00:05:58,015 INFO sqlalchemy.engine.base.Engine Thread-1786 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:58,020 INFO sqlalchemy.engine.base.Engine Thread-1786 : (1, 1)
2020-02-01 00:05:58,018 DEBUG sqlalchemy.engine.base.Engine Thread-1784 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:58,018 INFO sqlalchemy.engine.base.Engine Thread-1787 : BEGIN (implicit)
2020-02-01 00:05:58,020 DEBUG sqlalchemy.engine.base.Engine Thread-1784 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:58,019 INFO sqlalchemy.engine.base.Engine Thread-1785 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:58,023 INFO sqlalchemy.engine.base.Engine Thread-1785 : (1, 1)
2020-02-01 00:05:58,020 DEBUG sqlalchemy.engine.base.Engine Thread-1786 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:58,023 INFO sqlalchemy.engine.base.Engine Thread-1784 : ROLLBACK
2020-02-01 00:05:58,023 DEBUG sqlalchemy.engine.base.Engine Thread-1786 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:58,021 INFO sqlalchemy.engine.base.Engine Thread-1787 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:58,024 INFO sqlalchemy.engine.base.Engine Thread-1786 : ROLLBACK
2020-02-01 00:05:58,025 INFO sqlalchemy.engine.base.Engine Thread-1787 : (1, 1)
2020-02-01 00:05:58,026 DEBUG sqlalchemy.engine.base.Engine Thread-1787 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:58,027 DEBUG sqlalchemy.engine.base.Engine Thread-1787 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:58,025 DEBUG sqlalchemy.engine.base.Engine Thread-1785 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:58,028 DEBUG sqlalchemy.engine.base.Engine Thread-1785 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:58,029 INFO sqlalchemy.engine.base.Engine Thread-1785 : ROLLBACK
2020-02-01 00:05:58,028 INFO sqlalchemy.engine.base.Engine Thread-1787 : ROLLBACK
2020-02-01 00:05:58,104 INFO sqlalchemy.engine.base.Engine Thread-1788 : BEGIN (implicit)
2020-02-01 00:05:58,105 INFO sqlalchemy.engine.base.Engine Thread-1788 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:05:58,105 INFO sqlalchemy.engine.base.Engine Thread-1788 : (1, 1)
2020-02-01 00:05:58,106 DEBUG sqlalchemy.engine.base.Engine Thread-1788 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:05:58,106 DEBUG sqlalchemy.engine.base.Engine Thread-1788 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:05:58,107 INFO sqlalchemy.engine.base.Engine Thread-1788 : ROLLBACK
2020-02-01 00:06:08,548 INFO sqlalchemy.engine.base.Engine Thread-1789 : BEGIN (implicit)
2020-02-01 00:06:08,550 INFO sqlalchemy.engine.base.Engine Thread-1789 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:06:08,550 INFO sqlalchemy.engine.base.Engine Thread-1789 : ()
2020-02-01 00:06:08,551 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:06:08,552 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:06:08,552 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:06:08,554 INFO sqlalchemy.engine.base.Engine Thread-1789 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:08,554 INFO sqlalchemy.engine.base.Engine Thread-1789 : (1, 1)
2020-02-01 00:06:08,555 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:08,555 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:08,558 INFO sqlalchemy.engine.base.Engine Thread-1789 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:06:08,558 INFO sqlalchemy.engine.base.Engine Thread-1789 : ('philip', 1, 1)
2020-02-01 00:06:08,559 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:08,559 DEBUG sqlalchemy.engine.base.Engine Thread-1789 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:08,561 INFO sqlalchemy.engine.base.Engine Thread-1789 : ROLLBACK
2020-02-01 00:06:09,262 INFO sqlalchemy.engine.base.Engine Thread-1798 : BEGIN (implicit)
2020-02-01 00:06:09,264 INFO sqlalchemy.engine.base.Engine Thread-1798 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:09,269 INFO sqlalchemy.engine.base.Engine Thread-1798 : (1, 1)
2020-02-01 00:06:09,269 INFO sqlalchemy.engine.base.Engine Thread-1797 : BEGIN (implicit)
2020-02-01 00:06:09,267 INFO sqlalchemy.engine.base.Engine Thread-1799 : BEGIN (implicit)
2020-02-01 00:06:09,271 INFO sqlalchemy.engine.base.Engine Thread-1797 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:09,273 INFO sqlalchemy.engine.base.Engine Thread-1799 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:09,275 INFO sqlalchemy.engine.base.Engine Thread-1799 : (1, 1)
2020-02-01 00:06:09,273 INFO sqlalchemy.engine.base.Engine Thread-1797 : (1, 1)
2020-02-01 00:06:09,274 INFO sqlalchemy.engine.base.Engine Thread-1800 : BEGIN (implicit)
2020-02-01 00:06:09,273 DEBUG sqlalchemy.engine.base.Engine Thread-1798 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:09,277 DEBUG sqlalchemy.engine.base.Engine Thread-1798 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:09,276 DEBUG sqlalchemy.engine.base.Engine Thread-1797 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:09,277 DEBUG sqlalchemy.engine.base.Engine Thread-1797 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:09,275 DEBUG sqlalchemy.engine.base.Engine Thread-1799 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:09,278 DEBUG sqlalchemy.engine.base.Engine Thread-1799 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:09,277 INFO sqlalchemy.engine.base.Engine Thread-1800 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:09,279 INFO sqlalchemy.engine.base.Engine Thread-1799 : ROLLBACK
2020-02-01 00:06:09,279 INFO sqlalchemy.engine.base.Engine Thread-1798 : ROLLBACK
2020-02-01 00:06:09,280 INFO sqlalchemy.engine.base.Engine Thread-1800 : (1, 1)
2020-02-01 00:06:09,280 INFO sqlalchemy.engine.base.Engine Thread-1797 : ROLLBACK
2020-02-01 00:06:09,283 DEBUG sqlalchemy.engine.base.Engine Thread-1800 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:09,283 DEBUG sqlalchemy.engine.base.Engine Thread-1800 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:09,284 INFO sqlalchemy.engine.base.Engine Thread-1800 : ROLLBACK
2020-02-01 00:06:09,371 INFO sqlalchemy.engine.base.Engine Thread-1801 : BEGIN (implicit)
2020-02-01 00:06:09,372 INFO sqlalchemy.engine.base.Engine Thread-1801 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:09,372 INFO sqlalchemy.engine.base.Engine Thread-1801 : (1, 1)
2020-02-01 00:06:09,373 DEBUG sqlalchemy.engine.base.Engine Thread-1801 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:09,373 DEBUG sqlalchemy.engine.base.Engine Thread-1801 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:09,374 INFO sqlalchemy.engine.base.Engine Thread-1801 : ROLLBACK
2020-02-01 00:06:09,405 INFO sqlalchemy.engine.base.Engine Thread-1802 : BEGIN (implicit)
2020-02-01 00:06:09,406 INFO sqlalchemy.engine.base.Engine Thread-1802 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:06:09,406 INFO sqlalchemy.engine.base.Engine Thread-1802 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:06:09,407 DEBUG sqlalchemy.engine.base.Engine Thread-1802 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:06:09,407 DEBUG sqlalchemy.engine.base.Engine Thread-1802 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:06:09,408 INFO sqlalchemy.engine.base.Engine Thread-1802 : ROLLBACK
2020-02-01 00:06:11,064 INFO sqlalchemy.engine.base.Engine Thread-1803 : BEGIN (implicit)
2020-02-01 00:06:11,065 INFO sqlalchemy.engine.base.Engine Thread-1803 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:06:11,065 INFO sqlalchemy.engine.base.Engine Thread-1803 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:06:11,066 DEBUG sqlalchemy.engine.base.Engine Thread-1803 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:06:11,066 DEBUG sqlalchemy.engine.base.Engine Thread-1803 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:06:11,067 INFO sqlalchemy.engine.base.Engine Thread-1803 : ROLLBACK
2020-02-01 00:06:11,864 INFO sqlalchemy.engine.base.Engine Thread-1804 : BEGIN (implicit)
2020-02-01 00:06:11,865 INFO sqlalchemy.engine.base.Engine Thread-1804 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:06:11,865 INFO sqlalchemy.engine.base.Engine Thread-1804 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:06:11,866 DEBUG sqlalchemy.engine.base.Engine Thread-1804 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:06:11,866 DEBUG sqlalchemy.engine.base.Engine Thread-1804 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:06:11,866 DEBUG sqlalchemy.engine.base.Engine Thread-1804 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:06:11,867 INFO sqlalchemy.engine.base.Engine Thread-1804 : ROLLBACK
2020-02-01 00:06:19,270 INFO sqlalchemy.engine.base.Engine Thread-1805 : BEGIN (implicit)
2020-02-01 00:06:19,271 INFO sqlalchemy.engine.base.Engine Thread-1805 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:06:19,272 INFO sqlalchemy.engine.base.Engine Thread-1805 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:06:19,273 DEBUG sqlalchemy.engine.base.Engine Thread-1805 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:06:19,273 DEBUG sqlalchemy.engine.base.Engine Thread-1805 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:06:19,274 INFO sqlalchemy.engine.base.Engine Thread-1805 : ROLLBACK
2020-02-01 00:06:57,317 INFO sqlalchemy.engine.base.Engine Thread-1806 : BEGIN (implicit)
2020-02-01 00:06:57,319 INFO sqlalchemy.engine.base.Engine Thread-1806 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:06:57,319 INFO sqlalchemy.engine.base.Engine Thread-1806 : ()
2020-02-01 00:06:57,320 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:06:57,320 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:06:57,321 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:06:57,322 INFO sqlalchemy.engine.base.Engine Thread-1806 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:57,323 INFO sqlalchemy.engine.base.Engine Thread-1806 : (1, 1)
2020-02-01 00:06:57,323 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,323 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,334 INFO sqlalchemy.engine.base.Engine Thread-1806 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:06:57,334 INFO sqlalchemy.engine.base.Engine Thread-1806 : ('philip', 1, 1)
2020-02-01 00:06:57,335 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,335 DEBUG sqlalchemy.engine.base.Engine Thread-1806 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,336 INFO sqlalchemy.engine.base.Engine Thread-1806 : ROLLBACK
2020-02-01 00:06:57,838 INFO sqlalchemy.engine.base.Engine Thread-1815 : BEGIN (implicit)
2020-02-01 00:06:57,840 INFO sqlalchemy.engine.base.Engine Thread-1814 : BEGIN (implicit)
2020-02-01 00:06:57,842 INFO sqlalchemy.engine.base.Engine Thread-1815 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:57,844 INFO sqlalchemy.engine.base.Engine Thread-1814 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:57,846 INFO sqlalchemy.engine.base.Engine Thread-1816 : BEGIN (implicit)
2020-02-01 00:06:57,846 INFO sqlalchemy.engine.base.Engine Thread-1815 : (1, 1)
2020-02-01 00:06:57,849 INFO sqlalchemy.engine.base.Engine Thread-1817 : BEGIN (implicit)
2020-02-01 00:06:57,849 INFO sqlalchemy.engine.base.Engine Thread-1814 : (1, 1)
2020-02-01 00:06:57,850 INFO sqlalchemy.engine.base.Engine Thread-1816 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:57,851 INFO sqlalchemy.engine.base.Engine Thread-1817 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:57,852 INFO sqlalchemy.engine.base.Engine Thread-1817 : (1, 1)
2020-02-01 00:06:57,852 INFO sqlalchemy.engine.base.Engine Thread-1816 : (1, 1)
2020-02-01 00:06:57,852 DEBUG sqlalchemy.engine.base.Engine Thread-1814 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,851 DEBUG sqlalchemy.engine.base.Engine Thread-1815 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,853 DEBUG sqlalchemy.engine.base.Engine Thread-1814 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,853 DEBUG sqlalchemy.engine.base.Engine Thread-1815 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,853 DEBUG sqlalchemy.engine.base.Engine Thread-1817 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,856 DEBUG sqlalchemy.engine.base.Engine Thread-1817 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,857 INFO sqlalchemy.engine.base.Engine Thread-1817 : ROLLBACK
2020-02-01 00:06:57,856 INFO sqlalchemy.engine.base.Engine Thread-1815 : ROLLBACK
2020-02-01 00:06:57,855 DEBUG sqlalchemy.engine.base.Engine Thread-1816 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,857 DEBUG sqlalchemy.engine.base.Engine Thread-1816 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,855 INFO sqlalchemy.engine.base.Engine Thread-1814 : ROLLBACK
2020-02-01 00:06:57,858 INFO sqlalchemy.engine.base.Engine Thread-1816 : ROLLBACK
2020-02-01 00:06:57,933 INFO sqlalchemy.engine.base.Engine Thread-1818 : BEGIN (implicit)
2020-02-01 00:06:57,934 INFO sqlalchemy.engine.base.Engine Thread-1818 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:06:57,934 INFO sqlalchemy.engine.base.Engine Thread-1818 : (1, 1)
2020-02-01 00:06:57,935 DEBUG sqlalchemy.engine.base.Engine Thread-1818 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:06:57,935 DEBUG sqlalchemy.engine.base.Engine Thread-1818 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:06:57,936 INFO sqlalchemy.engine.base.Engine Thread-1818 : ROLLBACK
2020-02-01 00:06:57,968 INFO sqlalchemy.engine.base.Engine Thread-1819 : BEGIN (implicit)
2020-02-01 00:06:57,969 INFO sqlalchemy.engine.base.Engine Thread-1819 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:06:57,969 INFO sqlalchemy.engine.base.Engine Thread-1819 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:06:57,970 DEBUG sqlalchemy.engine.base.Engine Thread-1819 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:06:57,970 DEBUG sqlalchemy.engine.base.Engine Thread-1819 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:06:57,971 INFO sqlalchemy.engine.base.Engine Thread-1819 : ROLLBACK
2020-02-01 00:07:32,341 INFO sqlalchemy.engine.base.Engine Thread-1821 : BEGIN (implicit)
2020-02-01 00:07:32,343 INFO sqlalchemy.engine.base.Engine Thread-1821 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:07:32,343 INFO sqlalchemy.engine.base.Engine Thread-1821 : ()
2020-02-01 00:07:32,345 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:07:32,345 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:07:32,345 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:07:32,347 INFO sqlalchemy.engine.base.Engine Thread-1821 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:07:32,347 INFO sqlalchemy.engine.base.Engine Thread-1821 : (1, 1)
2020-02-01 00:07:32,348 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:32,348 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:32,359 INFO sqlalchemy.engine.base.Engine Thread-1821 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:07:32,359 INFO sqlalchemy.engine.base.Engine Thread-1821 : ('philip', 1, 1)
2020-02-01 00:07:32,360 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:32,360 DEBUG sqlalchemy.engine.base.Engine Thread-1821 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:32,362 INFO sqlalchemy.engine.base.Engine Thread-1821 : ROLLBACK
2020-02-01 00:07:32,928 INFO sqlalchemy.engine.base.Engine Thread-1829 : BEGIN (implicit)
2020-02-01 00:07:32,929 INFO sqlalchemy.engine.base.Engine Thread-1829 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:07:32,930 INFO sqlalchemy.engine.base.Engine Thread-1829 : (1, 1)
2020-02-01 00:07:32,934 DEBUG sqlalchemy.engine.base.Engine Thread-1829 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:32,936 INFO sqlalchemy.engine.base.Engine Thread-1832 : BEGIN (implicit)
2020-02-01 00:07:32,936 DEBUG sqlalchemy.engine.base.Engine Thread-1829 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:32,941 INFO sqlalchemy.engine.base.Engine Thread-1829 : ROLLBACK
2020-02-01 00:07:32,939 INFO sqlalchemy.engine.base.Engine Thread-1830 : BEGIN (implicit)
2020-02-01 00:07:32,940 INFO sqlalchemy.engine.base.Engine Thread-1831 : BEGIN (implicit)
2020-02-01 00:07:32,938 INFO sqlalchemy.engine.base.Engine Thread-1832 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:07:32,944 INFO sqlalchemy.engine.base.Engine Thread-1832 : (1, 1)
2020-02-01 00:07:32,943 INFO sqlalchemy.engine.base.Engine Thread-1831 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:07:32,944 INFO sqlalchemy.engine.base.Engine Thread-1831 : (1, 1)
2020-02-01 00:07:32,942 INFO sqlalchemy.engine.base.Engine Thread-1830 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:07:32,945 INFO sqlalchemy.engine.base.Engine Thread-1830 : (1, 1)
2020-02-01 00:07:32,945 DEBUG sqlalchemy.engine.base.Engine Thread-1831 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:32,945 DEBUG sqlalchemy.engine.base.Engine Thread-1831 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:32,946 DEBUG sqlalchemy.engine.base.Engine Thread-1830 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:32,946 DEBUG sqlalchemy.engine.base.Engine Thread-1830 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:32,947 INFO sqlalchemy.engine.base.Engine Thread-1830 : ROLLBACK
2020-02-01 00:07:32,948 INFO sqlalchemy.engine.base.Engine Thread-1831 : ROLLBACK
2020-02-01 00:07:32,949 DEBUG sqlalchemy.engine.base.Engine Thread-1832 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:32,950 DEBUG sqlalchemy.engine.base.Engine Thread-1832 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:32,950 INFO sqlalchemy.engine.base.Engine Thread-1832 : ROLLBACK
2020-02-01 00:07:33,028 INFO sqlalchemy.engine.base.Engine Thread-1833 : BEGIN (implicit)
2020-02-01 00:07:33,029 INFO sqlalchemy.engine.base.Engine Thread-1833 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:07:33,029 INFO sqlalchemy.engine.base.Engine Thread-1833 : (1, 1)
2020-02-01 00:07:33,030 DEBUG sqlalchemy.engine.base.Engine Thread-1833 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:07:33,030 DEBUG sqlalchemy.engine.base.Engine Thread-1833 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:07:33,031 INFO sqlalchemy.engine.base.Engine Thread-1833 : ROLLBACK
2020-02-01 00:07:33,055 INFO sqlalchemy.engine.base.Engine Thread-1834 : BEGIN (implicit)
2020-02-01 00:07:33,056 INFO sqlalchemy.engine.base.Engine Thread-1834 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:07:33,056 INFO sqlalchemy.engine.base.Engine Thread-1834 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:07:33,057 DEBUG sqlalchemy.engine.base.Engine Thread-1834 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:07:33,057 DEBUG sqlalchemy.engine.base.Engine Thread-1834 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:07:33,058 INFO sqlalchemy.engine.base.Engine Thread-1834 : ROLLBACK
2020-02-01 00:09:43,503 INFO sqlalchemy.engine.base.Engine Thread-1836 : BEGIN (implicit)
2020-02-01 00:09:43,506 INFO sqlalchemy.engine.base.Engine Thread-1836 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:09:43,506 INFO sqlalchemy.engine.base.Engine Thread-1836 : ()
2020-02-01 00:09:43,507 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:09:43,508 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:09:43,508 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:09:43,510 INFO sqlalchemy.engine.base.Engine Thread-1836 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:09:43,510 INFO sqlalchemy.engine.base.Engine Thread-1836 : (1, 1)
2020-02-01 00:09:43,511 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:43,511 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:43,524 INFO sqlalchemy.engine.base.Engine Thread-1836 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:09:43,524 INFO sqlalchemy.engine.base.Engine Thread-1836 : ('philip', 1, 1)
2020-02-01 00:09:43,525 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:43,525 DEBUG sqlalchemy.engine.base.Engine Thread-1836 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:43,526 INFO sqlalchemy.engine.base.Engine Thread-1836 : ROLLBACK
2020-02-01 00:09:44,087 INFO sqlalchemy.engine.base.Engine Thread-1844 : BEGIN (implicit)
2020-02-01 00:09:44,088 INFO sqlalchemy.engine.base.Engine Thread-1844 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:09:44,088 INFO sqlalchemy.engine.base.Engine Thread-1844 : (1, 1)
2020-02-01 00:09:44,091 DEBUG sqlalchemy.engine.base.Engine Thread-1844 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:44,091 DEBUG sqlalchemy.engine.base.Engine Thread-1844 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:44,093 INFO sqlalchemy.engine.base.Engine Thread-1845 : BEGIN (implicit)
2020-02-01 00:09:44,097 INFO sqlalchemy.engine.base.Engine Thread-1845 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:09:44,097 INFO sqlalchemy.engine.base.Engine Thread-1845 : (1, 1)
2020-02-01 00:09:44,096 INFO sqlalchemy.engine.base.Engine Thread-1844 : ROLLBACK
2020-02-01 00:09:44,099 INFO sqlalchemy.engine.base.Engine Thread-1846 : BEGIN (implicit)
2020-02-01 00:09:44,099 DEBUG sqlalchemy.engine.base.Engine Thread-1845 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:44,101 INFO sqlalchemy.engine.base.Engine Thread-1846 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:09:44,102 DEBUG sqlalchemy.engine.base.Engine Thread-1845 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:44,102 INFO sqlalchemy.engine.base.Engine Thread-1846 : (1, 1)
2020-02-01 00:09:44,106 DEBUG sqlalchemy.engine.base.Engine Thread-1846 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:44,106 INFO sqlalchemy.engine.base.Engine Thread-1845 : ROLLBACK
2020-02-01 00:09:44,107 DEBUG sqlalchemy.engine.base.Engine Thread-1846 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:44,105 INFO sqlalchemy.engine.base.Engine Thread-1847 : BEGIN (implicit)
2020-02-01 00:09:44,108 INFO sqlalchemy.engine.base.Engine Thread-1846 : ROLLBACK
2020-02-01 00:09:44,110 INFO sqlalchemy.engine.base.Engine Thread-1847 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:09:44,110 INFO sqlalchemy.engine.base.Engine Thread-1847 : (1, 1)
2020-02-01 00:09:44,111 DEBUG sqlalchemy.engine.base.Engine Thread-1847 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:44,111 DEBUG sqlalchemy.engine.base.Engine Thread-1847 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:44,113 INFO sqlalchemy.engine.base.Engine Thread-1847 : ROLLBACK
2020-02-01 00:09:44,203 INFO sqlalchemy.engine.base.Engine Thread-1848 : BEGIN (implicit)
2020-02-01 00:09:44,204 INFO sqlalchemy.engine.base.Engine Thread-1848 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:09:44,204 INFO sqlalchemy.engine.base.Engine Thread-1848 : (1, 1)
2020-02-01 00:09:44,205 DEBUG sqlalchemy.engine.base.Engine Thread-1848 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:09:44,205 DEBUG sqlalchemy.engine.base.Engine Thread-1848 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:09:44,206 INFO sqlalchemy.engine.base.Engine Thread-1848 : ROLLBACK
2020-02-01 00:09:44,237 INFO sqlalchemy.engine.base.Engine Thread-1849 : BEGIN (implicit)
2020-02-01 00:09:44,239 INFO sqlalchemy.engine.base.Engine Thread-1849 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:09:44,239 INFO sqlalchemy.engine.base.Engine Thread-1849 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:09:44,240 DEBUG sqlalchemy.engine.base.Engine Thread-1849 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:09:44,240 DEBUG sqlalchemy.engine.base.Engine Thread-1849 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:09:44,241 INFO sqlalchemy.engine.base.Engine Thread-1849 : ROLLBACK
2020-02-01 00:11:06,791 INFO sqlalchemy.engine.base.Engine Thread-1853 : BEGIN (implicit)
2020-02-01 00:11:06,793 INFO sqlalchemy.engine.base.Engine Thread-1853 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:11:06,793 INFO sqlalchemy.engine.base.Engine Thread-1853 : ()
2020-02-01 00:11:06,795 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:11:06,795 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:11:06,796 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:11:06,798 INFO sqlalchemy.engine.base.Engine Thread-1853 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:11:06,798 INFO sqlalchemy.engine.base.Engine Thread-1853 : (1, 1)
2020-02-01 00:11:06,799 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:06,799 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:06,810 INFO sqlalchemy.engine.base.Engine Thread-1853 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:11:06,810 INFO sqlalchemy.engine.base.Engine Thread-1853 : ('philip', 1, 1)
2020-02-01 00:11:06,811 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:06,811 DEBUG sqlalchemy.engine.base.Engine Thread-1853 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:06,813 INFO sqlalchemy.engine.base.Engine Thread-1853 : ROLLBACK
2020-02-01 00:11:07,294 INFO sqlalchemy.engine.base.Engine Thread-1861 : BEGIN (implicit)
2020-02-01 00:11:07,295 INFO sqlalchemy.engine.base.Engine Thread-1861 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:11:07,303 INFO sqlalchemy.engine.base.Engine Thread-1861 : (1, 1)
2020-02-01 00:11:07,300 INFO sqlalchemy.engine.base.Engine Thread-1862 : BEGIN (implicit)
2020-02-01 00:11:07,303 INFO sqlalchemy.engine.base.Engine Thread-1864 : BEGIN (implicit)
2020-02-01 00:11:07,298 INFO sqlalchemy.engine.base.Engine Thread-1863 : BEGIN (implicit)
2020-02-01 00:11:07,305 INFO sqlalchemy.engine.base.Engine Thread-1862 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:11:07,307 INFO sqlalchemy.engine.base.Engine Thread-1862 : (1, 1)
2020-02-01 00:11:07,306 INFO sqlalchemy.engine.base.Engine Thread-1864 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:11:07,305 DEBUG sqlalchemy.engine.base.Engine Thread-1861 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:07,308 INFO sqlalchemy.engine.base.Engine Thread-1864 : (1, 1)
2020-02-01 00:11:07,307 INFO sqlalchemy.engine.base.Engine Thread-1863 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:11:07,308 DEBUG sqlalchemy.engine.base.Engine Thread-1862 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:07,308 DEBUG sqlalchemy.engine.base.Engine Thread-1861 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:07,309 INFO sqlalchemy.engine.base.Engine Thread-1863 : (1, 1)
2020-02-01 00:11:07,309 DEBUG sqlalchemy.engine.base.Engine Thread-1862 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:07,310 DEBUG sqlalchemy.engine.base.Engine Thread-1864 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:07,312 INFO sqlalchemy.engine.base.Engine Thread-1862 : ROLLBACK
2020-02-01 00:11:07,312 INFO sqlalchemy.engine.base.Engine Thread-1861 : ROLLBACK
2020-02-01 00:11:07,313 DEBUG sqlalchemy.engine.base.Engine Thread-1863 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:07,313 DEBUG sqlalchemy.engine.base.Engine Thread-1863 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:07,315 INFO sqlalchemy.engine.base.Engine Thread-1863 : ROLLBACK
2020-02-01 00:11:07,313 DEBUG sqlalchemy.engine.base.Engine Thread-1864 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:07,318 INFO sqlalchemy.engine.base.Engine Thread-1864 : ROLLBACK
2020-02-01 00:11:07,399 INFO sqlalchemy.engine.base.Engine Thread-1865 : BEGIN (implicit)
2020-02-01 00:11:07,400 INFO sqlalchemy.engine.base.Engine Thread-1865 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:11:07,400 INFO sqlalchemy.engine.base.Engine Thread-1865 : (1, 1)
2020-02-01 00:11:07,401 DEBUG sqlalchemy.engine.base.Engine Thread-1865 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:11:07,401 DEBUG sqlalchemy.engine.base.Engine Thread-1865 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:11:07,402 INFO sqlalchemy.engine.base.Engine Thread-1865 : ROLLBACK
2020-02-01 00:11:07,430 INFO sqlalchemy.engine.base.Engine Thread-1866 : BEGIN (implicit)
2020-02-01 00:11:07,431 INFO sqlalchemy.engine.base.Engine Thread-1866 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:11:07,431 INFO sqlalchemy.engine.base.Engine Thread-1866 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:11:07,432 DEBUG sqlalchemy.engine.base.Engine Thread-1866 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:11:07,432 DEBUG sqlalchemy.engine.base.Engine Thread-1866 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:11:07,433 INFO sqlalchemy.engine.base.Engine Thread-1866 : ROLLBACK
2020-02-01 00:11:12,076 INFO sqlalchemy.engine.base.Engine Thread-1868 : BEGIN (implicit)
2020-02-01 00:11:12,078 INFO sqlalchemy.engine.base.Engine Thread-1868 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:11:12,078 INFO sqlalchemy.engine.base.Engine Thread-1868 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:11:12,079 DEBUG sqlalchemy.engine.base.Engine Thread-1868 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:11:12,079 DEBUG sqlalchemy.engine.base.Engine Thread-1868 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:11:12,080 INFO sqlalchemy.engine.base.Engine Thread-1868 : ROLLBACK
2020-02-01 00:11:13,990 INFO sqlalchemy.engine.base.Engine Thread-1869 : BEGIN (implicit)
2020-02-01 00:11:13,992 INFO sqlalchemy.engine.base.Engine Thread-1869 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:11:13,992 INFO sqlalchemy.engine.base.Engine Thread-1869 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:11:13,993 DEBUG sqlalchemy.engine.base.Engine Thread-1869 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:11:13,993 DEBUG sqlalchemy.engine.base.Engine Thread-1869 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:11:13,993 DEBUG sqlalchemy.engine.base.Engine Thread-1869 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:11:13,994 INFO sqlalchemy.engine.base.Engine Thread-1869 : ROLLBACK
2020-02-01 00:20:53,062 INFO sqlalchemy.engine.base.Engine Thread-1870 : BEGIN (implicit)
2020-02-01 00:20:53,064 INFO sqlalchemy.engine.base.Engine Thread-1870 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:20:53,064 INFO sqlalchemy.engine.base.Engine Thread-1870 : ()
2020-02-01 00:20:53,067 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:20:53,068 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:20:53,068 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:20:53,070 INFO sqlalchemy.engine.base.Engine Thread-1870 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:20:53,070 INFO sqlalchemy.engine.base.Engine Thread-1870 : (1, 1)
2020-02-01 00:20:53,071 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,071 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,075 INFO sqlalchemy.engine.base.Engine Thread-1870 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:20:53,075 INFO sqlalchemy.engine.base.Engine Thread-1870 : ('philip', 1, 1)
2020-02-01 00:20:53,076 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,076 DEBUG sqlalchemy.engine.base.Engine Thread-1870 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,078 INFO sqlalchemy.engine.base.Engine Thread-1870 : ROLLBACK
2020-02-01 00:20:53,660 INFO sqlalchemy.engine.base.Engine Thread-1879 : BEGIN (implicit)
2020-02-01 00:20:53,662 INFO sqlalchemy.engine.base.Engine Thread-1878 : BEGIN (implicit)
2020-02-01 00:20:53,663 INFO sqlalchemy.engine.base.Engine Thread-1879 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:20:53,667 INFO sqlalchemy.engine.base.Engine Thread-1879 : (1, 1)
2020-02-01 00:20:53,666 INFO sqlalchemy.engine.base.Engine Thread-1878 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:20:53,665 INFO sqlalchemy.engine.base.Engine Thread-1880 : BEGIN (implicit)
2020-02-01 00:20:53,667 DEBUG sqlalchemy.engine.base.Engine Thread-1879 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,668 INFO sqlalchemy.engine.base.Engine Thread-1878 : (1, 1)
2020-02-01 00:20:53,670 INFO sqlalchemy.engine.base.Engine Thread-1880 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:20:53,672 INFO sqlalchemy.engine.base.Engine Thread-1881 : BEGIN (implicit)
2020-02-01 00:20:53,674 INFO sqlalchemy.engine.base.Engine Thread-1881 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:20:53,672 INFO sqlalchemy.engine.base.Engine Thread-1880 : (1, 1)
2020-02-01 00:20:53,673 DEBUG sqlalchemy.engine.base.Engine Thread-1878 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,674 INFO sqlalchemy.engine.base.Engine Thread-1881 : (1, 1)
2020-02-01 00:20:53,672 DEBUG sqlalchemy.engine.base.Engine Thread-1879 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,675 DEBUG sqlalchemy.engine.base.Engine Thread-1878 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,677 DEBUG sqlalchemy.engine.base.Engine Thread-1881 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,677 DEBUG sqlalchemy.engine.base.Engine Thread-1880 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,678 INFO sqlalchemy.engine.base.Engine Thread-1879 : ROLLBACK
2020-02-01 00:20:53,679 INFO sqlalchemy.engine.base.Engine Thread-1878 : ROLLBACK
2020-02-01 00:20:53,680 DEBUG sqlalchemy.engine.base.Engine Thread-1881 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,682 DEBUG sqlalchemy.engine.base.Engine Thread-1880 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,686 INFO sqlalchemy.engine.base.Engine Thread-1881 : ROLLBACK
2020-02-01 00:20:53,687 INFO sqlalchemy.engine.base.Engine Thread-1880 : ROLLBACK
2020-02-01 00:20:53,753 INFO sqlalchemy.engine.base.Engine Thread-1882 : BEGIN (implicit)
2020-02-01 00:20:53,755 INFO sqlalchemy.engine.base.Engine Thread-1882 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:20:53,755 INFO sqlalchemy.engine.base.Engine Thread-1882 : (1, 1)
2020-02-01 00:20:53,755 DEBUG sqlalchemy.engine.base.Engine Thread-1882 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:20:53,756 DEBUG sqlalchemy.engine.base.Engine Thread-1882 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:20:53,757 INFO sqlalchemy.engine.base.Engine Thread-1882 : ROLLBACK
2020-02-01 00:20:53,787 INFO sqlalchemy.engine.base.Engine Thread-1883 : BEGIN (implicit)
2020-02-01 00:20:53,788 INFO sqlalchemy.engine.base.Engine Thread-1883 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:20:53,788 INFO sqlalchemy.engine.base.Engine Thread-1883 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:20:53,789 DEBUG sqlalchemy.engine.base.Engine Thread-1883 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:20:53,789 DEBUG sqlalchemy.engine.base.Engine Thread-1883 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:20:53,790 INFO sqlalchemy.engine.base.Engine Thread-1883 : ROLLBACK
2020-02-01 00:20:59,095 INFO sqlalchemy.engine.base.Engine Thread-1885 : BEGIN (implicit)
2020-02-01 00:20:59,096 INFO sqlalchemy.engine.base.Engine Thread-1885 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:20:59,096 INFO sqlalchemy.engine.base.Engine Thread-1885 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:20:59,097 DEBUG sqlalchemy.engine.base.Engine Thread-1885 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:20:59,097 DEBUG sqlalchemy.engine.base.Engine Thread-1885 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:20:59,098 INFO sqlalchemy.engine.base.Engine Thread-1885 : ROLLBACK
2020-02-01 00:21:07,122 INFO sqlalchemy.engine.base.Engine Thread-1886 : BEGIN (implicit)
2020-02-01 00:21:07,123 INFO sqlalchemy.engine.base.Engine Thread-1886 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:21:07,123 INFO sqlalchemy.engine.base.Engine Thread-1886 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:21:07,124 DEBUG sqlalchemy.engine.base.Engine Thread-1886 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:21:07,124 DEBUG sqlalchemy.engine.base.Engine Thread-1886 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:21:07,124 DEBUG sqlalchemy.engine.base.Engine Thread-1886 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:21:07,125 INFO sqlalchemy.engine.base.Engine Thread-1886 : ROLLBACK
2020-02-01 00:23:34,983 INFO sqlalchemy.engine.base.Engine Thread-1887 : BEGIN (implicit)
2020-02-01 00:23:34,986 INFO sqlalchemy.engine.base.Engine Thread-1887 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:23:34,987 INFO sqlalchemy.engine.base.Engine Thread-1887 : ()
2020-02-01 00:23:34,988 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:23:34,989 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:23:34,989 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:23:34,991 INFO sqlalchemy.engine.base.Engine Thread-1887 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:23:34,991 INFO sqlalchemy.engine.base.Engine Thread-1887 : (1, 1)
2020-02-01 00:23:34,992 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:34,992 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:34,997 INFO sqlalchemy.engine.base.Engine Thread-1887 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:23:34,997 INFO sqlalchemy.engine.base.Engine Thread-1887 : ('philip', 1, 1)
2020-02-01 00:23:34,998 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:34,998 DEBUG sqlalchemy.engine.base.Engine Thread-1887 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:35,000 INFO sqlalchemy.engine.base.Engine Thread-1887 : ROLLBACK
2020-02-01 00:23:35,517 INFO sqlalchemy.engine.base.Engine Thread-1895 : BEGIN (implicit)
2020-02-01 00:23:35,521 INFO sqlalchemy.engine.base.Engine Thread-1895 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:23:35,523 INFO sqlalchemy.engine.base.Engine Thread-1895 : (1, 1)
2020-02-01 00:23:35,520 INFO sqlalchemy.engine.base.Engine Thread-1896 : BEGIN (implicit)
2020-02-01 00:23:35,525 INFO sqlalchemy.engine.base.Engine Thread-1897 : BEGIN (implicit)
2020-02-01 00:23:35,525 DEBUG sqlalchemy.engine.base.Engine Thread-1895 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:35,528 DEBUG sqlalchemy.engine.base.Engine Thread-1895 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:35,528 INFO sqlalchemy.engine.base.Engine Thread-1897 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:23:35,529 INFO sqlalchemy.engine.base.Engine Thread-1897 : (1, 1)
2020-02-01 00:23:35,527 INFO sqlalchemy.engine.base.Engine Thread-1896 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:23:35,530 INFO sqlalchemy.engine.base.Engine Thread-1895 : ROLLBACK
2020-02-01 00:23:35,532 INFO sqlalchemy.engine.base.Engine Thread-1896 : (1, 1)
2020-02-01 00:23:35,532 DEBUG sqlalchemy.engine.base.Engine Thread-1897 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:35,534 INFO sqlalchemy.engine.base.Engine Thread-1898 : BEGIN (implicit)
2020-02-01 00:23:35,535 DEBUG sqlalchemy.engine.base.Engine Thread-1897 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:35,536 DEBUG sqlalchemy.engine.base.Engine Thread-1896 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:35,538 DEBUG sqlalchemy.engine.base.Engine Thread-1896 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:35,539 INFO sqlalchemy.engine.base.Engine Thread-1896 : ROLLBACK
2020-02-01 00:23:35,537 INFO sqlalchemy.engine.base.Engine Thread-1898 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:23:35,540 INFO sqlalchemy.engine.base.Engine Thread-1897 : ROLLBACK
2020-02-01 00:23:35,541 INFO sqlalchemy.engine.base.Engine Thread-1898 : (1, 1)
2020-02-01 00:23:35,542 DEBUG sqlalchemy.engine.base.Engine Thread-1898 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:35,542 DEBUG sqlalchemy.engine.base.Engine Thread-1898 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:35,543 INFO sqlalchemy.engine.base.Engine Thread-1898 : ROLLBACK
2020-02-01 00:23:35,607 INFO sqlalchemy.engine.base.Engine Thread-1899 : BEGIN (implicit)
2020-02-01 00:23:35,608 INFO sqlalchemy.engine.base.Engine Thread-1899 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:23:35,608 INFO sqlalchemy.engine.base.Engine Thread-1899 : (1, 1)
2020-02-01 00:23:35,609 DEBUG sqlalchemy.engine.base.Engine Thread-1899 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:23:35,609 DEBUG sqlalchemy.engine.base.Engine Thread-1899 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:23:35,610 INFO sqlalchemy.engine.base.Engine Thread-1899 : ROLLBACK
2020-02-01 00:23:35,643 INFO sqlalchemy.engine.base.Engine Thread-1900 : BEGIN (implicit)
2020-02-01 00:23:35,644 INFO sqlalchemy.engine.base.Engine Thread-1900 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:23:35,644 INFO sqlalchemy.engine.base.Engine Thread-1900 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:23:35,645 DEBUG sqlalchemy.engine.base.Engine Thread-1900 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:23:35,646 DEBUG sqlalchemy.engine.base.Engine Thread-1900 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:23:35,646 INFO sqlalchemy.engine.base.Engine Thread-1900 : ROLLBACK
2020-02-01 00:23:42,601 INFO sqlalchemy.engine.base.Engine Thread-1902 : BEGIN (implicit)
2020-02-01 00:23:42,602 INFO sqlalchemy.engine.base.Engine Thread-1902 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:23:42,602 INFO sqlalchemy.engine.base.Engine Thread-1902 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:23:42,603 DEBUG sqlalchemy.engine.base.Engine Thread-1902 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:23:42,603 DEBUG sqlalchemy.engine.base.Engine Thread-1902 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:23:42,604 INFO sqlalchemy.engine.base.Engine Thread-1902 : ROLLBACK
2020-02-01 00:23:43,956 INFO sqlalchemy.engine.base.Engine Thread-1903 : BEGIN (implicit)
2020-02-01 00:23:43,958 INFO sqlalchemy.engine.base.Engine Thread-1903 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:23:43,958 INFO sqlalchemy.engine.base.Engine Thread-1903 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:23:43,959 DEBUG sqlalchemy.engine.base.Engine Thread-1903 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:23:43,959 DEBUG sqlalchemy.engine.base.Engine Thread-1903 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:23:43,959 DEBUG sqlalchemy.engine.base.Engine Thread-1903 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:23:43,960 INFO sqlalchemy.engine.base.Engine Thread-1903 : ROLLBACK
2020-02-01 00:24:42,877 INFO sqlalchemy.engine.base.Engine Thread-1904 : BEGIN (implicit)
2020-02-01 00:24:42,879 INFO sqlalchemy.engine.base.Engine Thread-1904 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:24:42,879 INFO sqlalchemy.engine.base.Engine Thread-1904 : ()
2020-02-01 00:24:42,880 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:24:42,881 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:24:42,881 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:24:42,883 INFO sqlalchemy.engine.base.Engine Thread-1904 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:24:42,883 INFO sqlalchemy.engine.base.Engine Thread-1904 : (1, 1)
2020-02-01 00:24:42,884 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:42,884 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:42,890 INFO sqlalchemy.engine.base.Engine Thread-1904 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:24:42,890 INFO sqlalchemy.engine.base.Engine Thread-1904 : ('philip', 1, 1)
2020-02-01 00:24:42,891 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:42,891 DEBUG sqlalchemy.engine.base.Engine Thread-1904 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:42,892 INFO sqlalchemy.engine.base.Engine Thread-1904 : ROLLBACK
2020-02-01 00:24:43,399 INFO sqlalchemy.engine.base.Engine Thread-1912 : BEGIN (implicit)
2020-02-01 00:24:43,401 INFO sqlalchemy.engine.base.Engine Thread-1912 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:24:43,401 INFO sqlalchemy.engine.base.Engine Thread-1912 : (1, 1)
2020-02-01 00:24:43,403 INFO sqlalchemy.engine.base.Engine Thread-1913 : BEGIN (implicit)
2020-02-01 00:24:43,404 INFO sqlalchemy.engine.base.Engine Thread-1913 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:24:43,404 INFO sqlalchemy.engine.base.Engine Thread-1913 : (1, 1)
2020-02-01 00:24:43,405 DEBUG sqlalchemy.engine.base.Engine Thread-1912 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:43,405 DEBUG sqlalchemy.engine.base.Engine Thread-1913 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:43,406 DEBUG sqlalchemy.engine.base.Engine Thread-1912 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:43,406 DEBUG sqlalchemy.engine.base.Engine Thread-1913 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:43,409 INFO sqlalchemy.engine.base.Engine Thread-1913 : ROLLBACK
2020-02-01 00:24:43,410 INFO sqlalchemy.engine.base.Engine Thread-1912 : ROLLBACK
2020-02-01 00:24:43,413 INFO sqlalchemy.engine.base.Engine Thread-1915 : BEGIN (implicit)
2020-02-01 00:24:43,416 INFO sqlalchemy.engine.base.Engine Thread-1915 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:24:43,416 INFO sqlalchemy.engine.base.Engine Thread-1915 : (1, 1)
2020-02-01 00:24:43,414 INFO sqlalchemy.engine.base.Engine Thread-1914 : BEGIN (implicit)
2020-02-01 00:24:43,418 INFO sqlalchemy.engine.base.Engine Thread-1914 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:24:43,418 INFO sqlalchemy.engine.base.Engine Thread-1914 : (1, 1)
2020-02-01 00:24:43,418 DEBUG sqlalchemy.engine.base.Engine Thread-1915 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:43,418 DEBUG sqlalchemy.engine.base.Engine Thread-1915 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:43,420 INFO sqlalchemy.engine.base.Engine Thread-1915 : ROLLBACK
2020-02-01 00:24:43,420 DEBUG sqlalchemy.engine.base.Engine Thread-1914 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:43,420 DEBUG sqlalchemy.engine.base.Engine Thread-1914 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:43,422 INFO sqlalchemy.engine.base.Engine Thread-1914 : ROLLBACK
2020-02-01 00:24:43,533 INFO sqlalchemy.engine.base.Engine Thread-1916 : BEGIN (implicit)
2020-02-01 00:24:43,534 INFO sqlalchemy.engine.base.Engine Thread-1916 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:24:43,534 INFO sqlalchemy.engine.base.Engine Thread-1916 : (1, 1)
2020-02-01 00:24:43,535 DEBUG sqlalchemy.engine.base.Engine Thread-1916 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:24:43,535 DEBUG sqlalchemy.engine.base.Engine Thread-1916 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:24:43,536 INFO sqlalchemy.engine.base.Engine Thread-1916 : ROLLBACK
2020-02-01 00:24:43,567 INFO sqlalchemy.engine.base.Engine Thread-1917 : BEGIN (implicit)
2020-02-01 00:24:43,568 INFO sqlalchemy.engine.base.Engine Thread-1917 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:24:43,568 INFO sqlalchemy.engine.base.Engine Thread-1917 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:24:43,569 DEBUG sqlalchemy.engine.base.Engine Thread-1917 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:24:43,569 DEBUG sqlalchemy.engine.base.Engine Thread-1917 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:24:43,570 INFO sqlalchemy.engine.base.Engine Thread-1917 : ROLLBACK
2020-02-01 00:25:53,883 INFO sqlalchemy.engine.base.Engine Thread-1919 : BEGIN (implicit)
2020-02-01 00:25:53,885 INFO sqlalchemy.engine.base.Engine Thread-1919 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:25:53,885 INFO sqlalchemy.engine.base.Engine Thread-1919 : ()
2020-02-01 00:25:53,886 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:25:53,887 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:25:53,887 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:25:53,889 INFO sqlalchemy.engine.base.Engine Thread-1919 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:25:53,889 INFO sqlalchemy.engine.base.Engine Thread-1919 : (1, 1)
2020-02-01 00:25:53,890 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:53,890 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:53,894 INFO sqlalchemy.engine.base.Engine Thread-1919 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:25:53,894 INFO sqlalchemy.engine.base.Engine Thread-1919 : ('philip', 1, 1)
2020-02-01 00:25:53,894 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:53,895 DEBUG sqlalchemy.engine.base.Engine Thread-1919 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:53,896 INFO sqlalchemy.engine.base.Engine Thread-1919 : ROLLBACK
2020-02-01 00:25:54,446 INFO sqlalchemy.engine.base.Engine Thread-1929 : BEGIN (implicit)
2020-02-01 00:25:54,447 INFO sqlalchemy.engine.base.Engine Thread-1929 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:25:54,447 INFO sqlalchemy.engine.base.Engine Thread-1929 : (1, 1)
2020-02-01 00:25:54,448 DEBUG sqlalchemy.engine.base.Engine Thread-1929 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:54,448 DEBUG sqlalchemy.engine.base.Engine Thread-1929 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:54,450 INFO sqlalchemy.engine.base.Engine Thread-1929 : ROLLBACK
2020-02-01 00:25:54,463 INFO sqlalchemy.engine.base.Engine Thread-1928 : BEGIN (implicit)
2020-02-01 00:25:54,464 INFO sqlalchemy.engine.base.Engine Thread-1928 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:25:54,464 INFO sqlalchemy.engine.base.Engine Thread-1928 : (1, 1)
2020-02-01 00:25:54,466 INFO sqlalchemy.engine.base.Engine Thread-1927 : BEGIN (implicit)
2020-02-01 00:25:54,468 INFO sqlalchemy.engine.base.Engine Thread-1927 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:25:54,468 INFO sqlalchemy.engine.base.Engine Thread-1927 : (1, 1)
2020-02-01 00:25:54,467 INFO sqlalchemy.engine.base.Engine Thread-1930 : BEGIN (implicit)
2020-02-01 00:25:54,469 DEBUG sqlalchemy.engine.base.Engine Thread-1928 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:54,470 INFO sqlalchemy.engine.base.Engine Thread-1930 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:25:54,470 DEBUG sqlalchemy.engine.base.Engine Thread-1927 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:54,471 DEBUG sqlalchemy.engine.base.Engine Thread-1927 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:54,471 INFO sqlalchemy.engine.base.Engine Thread-1930 : (1, 1)
2020-02-01 00:25:54,472 INFO sqlalchemy.engine.base.Engine Thread-1927 : ROLLBACK
2020-02-01 00:25:54,471 DEBUG sqlalchemy.engine.base.Engine Thread-1928 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:54,473 DEBUG sqlalchemy.engine.base.Engine Thread-1930 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:54,474 INFO sqlalchemy.engine.base.Engine Thread-1928 : ROLLBACK
2020-02-01 00:25:54,475 DEBUG sqlalchemy.engine.base.Engine Thread-1930 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:54,477 INFO sqlalchemy.engine.base.Engine Thread-1930 : ROLLBACK
2020-02-01 00:25:54,545 INFO sqlalchemy.engine.base.Engine Thread-1931 : BEGIN (implicit)
2020-02-01 00:25:54,546 INFO sqlalchemy.engine.base.Engine Thread-1931 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:25:54,546 INFO sqlalchemy.engine.base.Engine Thread-1931 : (1, 1)
2020-02-01 00:25:54,547 DEBUG sqlalchemy.engine.base.Engine Thread-1931 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:25:54,548 DEBUG sqlalchemy.engine.base.Engine Thread-1931 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:25:54,549 INFO sqlalchemy.engine.base.Engine Thread-1931 : ROLLBACK
2020-02-01 00:25:54,582 INFO sqlalchemy.engine.base.Engine Thread-1932 : BEGIN (implicit)
2020-02-01 00:25:54,584 INFO sqlalchemy.engine.base.Engine Thread-1932 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:25:54,584 INFO sqlalchemy.engine.base.Engine Thread-1932 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:25:54,585 DEBUG sqlalchemy.engine.base.Engine Thread-1932 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:25:54,585 DEBUG sqlalchemy.engine.base.Engine Thread-1932 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:25:54,586 INFO sqlalchemy.engine.base.Engine Thread-1932 : ROLLBACK
2020-02-01 00:26:50,890 INFO sqlalchemy.engine.base.Engine Thread-1934 : BEGIN (implicit)
2020-02-01 00:26:50,892 INFO sqlalchemy.engine.base.Engine Thread-1934 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:26:50,892 INFO sqlalchemy.engine.base.Engine Thread-1934 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 00:26:50,893 DEBUG sqlalchemy.engine.base.Engine Thread-1934 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:26:50,893 INFO sqlalchemy.engine.base.Engine Thread-1934 : ROLLBACK
2020-02-01 00:38:28,382 INFO sqlalchemy.engine.base.Engine Thread-1935 : BEGIN (implicit)
2020-02-01 00:38:28,386 INFO sqlalchemy.engine.base.Engine Thread-1935 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:38:28,386 INFO sqlalchemy.engine.base.Engine Thread-1935 : ()
2020-02-01 00:38:28,389 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:38:28,390 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:38:28,390 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:38:28,393 INFO sqlalchemy.engine.base.Engine Thread-1935 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:38:28,393 INFO sqlalchemy.engine.base.Engine Thread-1935 : (1, 1)
2020-02-01 00:38:28,393 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:28,394 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:28,398 INFO sqlalchemy.engine.base.Engine Thread-1935 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:38:28,398 INFO sqlalchemy.engine.base.Engine Thread-1935 : ('philip', 1, 1)
2020-02-01 00:38:28,399 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:28,399 DEBUG sqlalchemy.engine.base.Engine Thread-1935 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:28,401 INFO sqlalchemy.engine.base.Engine Thread-1935 : ROLLBACK
2020-02-01 00:38:28,996 INFO sqlalchemy.engine.base.Engine Thread-1943 : BEGIN (implicit)
2020-02-01 00:38:28,997 INFO sqlalchemy.engine.base.Engine Thread-1943 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:38:28,998 INFO sqlalchemy.engine.base.Engine Thread-1944 : BEGIN (implicit)
2020-02-01 00:38:29,003 INFO sqlalchemy.engine.base.Engine Thread-1944 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:38:29,002 INFO sqlalchemy.engine.base.Engine Thread-1945 : BEGIN (implicit)
2020-02-01 00:38:29,005 INFO sqlalchemy.engine.base.Engine Thread-1945 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:38:29,003 INFO sqlalchemy.engine.base.Engine Thread-1944 : (1, 1)
2020-02-01 00:38:28,998 INFO sqlalchemy.engine.base.Engine Thread-1943 : (1, 1)
2020-02-01 00:38:29,005 INFO sqlalchemy.engine.base.Engine Thread-1945 : (1, 1)
2020-02-01 00:38:29,008 INFO sqlalchemy.engine.base.Engine Thread-1946 : BEGIN (implicit)
2020-02-01 00:38:29,009 INFO sqlalchemy.engine.base.Engine Thread-1946 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:38:29,009 INFO sqlalchemy.engine.base.Engine Thread-1946 : (1, 1)
2020-02-01 00:38:29,010 DEBUG sqlalchemy.engine.base.Engine Thread-1943 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:29,010 DEBUG sqlalchemy.engine.base.Engine Thread-1946 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:29,011 DEBUG sqlalchemy.engine.base.Engine Thread-1945 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:29,012 DEBUG sqlalchemy.engine.base.Engine Thread-1945 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:29,011 DEBUG sqlalchemy.engine.base.Engine Thread-1944 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:29,012 DEBUG sqlalchemy.engine.base.Engine Thread-1944 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:29,011 DEBUG sqlalchemy.engine.base.Engine Thread-1943 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:29,015 INFO sqlalchemy.engine.base.Engine Thread-1943 : ROLLBACK
2020-02-01 00:38:29,014 INFO sqlalchemy.engine.base.Engine Thread-1944 : ROLLBACK
2020-02-01 00:38:29,012 DEBUG sqlalchemy.engine.base.Engine Thread-1946 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:29,014 INFO sqlalchemy.engine.base.Engine Thread-1945 : ROLLBACK
2020-02-01 00:38:29,018 INFO sqlalchemy.engine.base.Engine Thread-1946 : ROLLBACK
2020-02-01 00:38:29,199 INFO sqlalchemy.engine.base.Engine Thread-1947 : BEGIN (implicit)
2020-02-01 00:38:29,200 INFO sqlalchemy.engine.base.Engine Thread-1947 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:38:29,200 INFO sqlalchemy.engine.base.Engine Thread-1947 : (1, 1)
2020-02-01 00:38:29,201 DEBUG sqlalchemy.engine.base.Engine Thread-1947 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:38:29,201 DEBUG sqlalchemy.engine.base.Engine Thread-1947 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:38:29,202 INFO sqlalchemy.engine.base.Engine Thread-1947 : ROLLBACK
2020-02-01 00:38:29,239 INFO sqlalchemy.engine.base.Engine Thread-1948 : BEGIN (implicit)
2020-02-01 00:38:29,241 INFO sqlalchemy.engine.base.Engine Thread-1948 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:38:29,241 INFO sqlalchemy.engine.base.Engine Thread-1948 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:38:29,242 DEBUG sqlalchemy.engine.base.Engine Thread-1948 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:38:29,242 DEBUG sqlalchemy.engine.base.Engine Thread-1948 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:38:29,243 INFO sqlalchemy.engine.base.Engine Thread-1948 : ROLLBACK
2020-02-01 00:38:31,432 INFO sqlalchemy.engine.base.Engine Thread-1950 : BEGIN (implicit)
2020-02-01 00:38:31,434 INFO sqlalchemy.engine.base.Engine Thread-1950 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:38:31,434 INFO sqlalchemy.engine.base.Engine Thread-1950 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 00:38:31,435 DEBUG sqlalchemy.engine.base.Engine Thread-1950 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:38:31,435 INFO sqlalchemy.engine.base.Engine Thread-1950 : ROLLBACK
2020-02-01 00:44:06,601 INFO sqlalchemy.engine.base.Engine Thread-1951 : BEGIN (implicit)
2020-02-01 00:44:06,604 INFO sqlalchemy.engine.base.Engine Thread-1951 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:44:06,604 INFO sqlalchemy.engine.base.Engine Thread-1951 : ()
2020-02-01 00:44:06,606 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:44:06,607 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:44:06,607 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:44:06,610 INFO sqlalchemy.engine.base.Engine Thread-1951 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:06,610 INFO sqlalchemy.engine.base.Engine Thread-1951 : (1, 1)
2020-02-01 00:44:06,610 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:06,610 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:06,615 INFO sqlalchemy.engine.base.Engine Thread-1951 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:44:06,615 INFO sqlalchemy.engine.base.Engine Thread-1951 : ('philip', 1, 1)
2020-02-01 00:44:06,616 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:06,616 DEBUG sqlalchemy.engine.base.Engine Thread-1951 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:06,617 INFO sqlalchemy.engine.base.Engine Thread-1951 : ROLLBACK
2020-02-01 00:44:07,194 INFO sqlalchemy.engine.base.Engine Thread-1959 : BEGIN (implicit)
2020-02-01 00:44:07,196 INFO sqlalchemy.engine.base.Engine Thread-1959 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:07,196 INFO sqlalchemy.engine.base.Engine Thread-1959 : (1, 1)
2020-02-01 00:44:07,198 INFO sqlalchemy.engine.base.Engine Thread-1960 : BEGIN (implicit)
2020-02-01 00:44:07,198 DEBUG sqlalchemy.engine.base.Engine Thread-1959 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:07,199 INFO sqlalchemy.engine.base.Engine Thread-1960 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:07,204 INFO sqlalchemy.engine.base.Engine Thread-1960 : (1, 1)
2020-02-01 00:44:07,203 DEBUG sqlalchemy.engine.base.Engine Thread-1959 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:07,207 INFO sqlalchemy.engine.base.Engine Thread-1959 : ROLLBACK
2020-02-01 00:44:07,205 INFO sqlalchemy.engine.base.Engine Thread-1962 : BEGIN (implicit)
2020-02-01 00:44:07,202 INFO sqlalchemy.engine.base.Engine Thread-1961 : BEGIN (implicit)
2020-02-01 00:44:07,208 INFO sqlalchemy.engine.base.Engine Thread-1962 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:07,208 DEBUG sqlalchemy.engine.base.Engine Thread-1960 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:07,210 DEBUG sqlalchemy.engine.base.Engine Thread-1960 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:07,210 INFO sqlalchemy.engine.base.Engine Thread-1962 : (1, 1)
2020-02-01 00:44:07,211 INFO sqlalchemy.engine.base.Engine Thread-1960 : ROLLBACK
2020-02-01 00:44:07,210 INFO sqlalchemy.engine.base.Engine Thread-1961 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:07,211 INFO sqlalchemy.engine.base.Engine Thread-1961 : (1, 1)
2020-02-01 00:44:07,212 DEBUG sqlalchemy.engine.base.Engine Thread-1962 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:07,213 DEBUG sqlalchemy.engine.base.Engine Thread-1962 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:07,214 INFO sqlalchemy.engine.base.Engine Thread-1962 : ROLLBACK
2020-02-01 00:44:07,212 DEBUG sqlalchemy.engine.base.Engine Thread-1961 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:07,214 DEBUG sqlalchemy.engine.base.Engine Thread-1961 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:07,215 INFO sqlalchemy.engine.base.Engine Thread-1961 : ROLLBACK
2020-02-01 00:44:07,324 INFO sqlalchemy.engine.base.Engine Thread-1963 : BEGIN (implicit)
2020-02-01 00:44:07,325 INFO sqlalchemy.engine.base.Engine Thread-1963 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:07,325 INFO sqlalchemy.engine.base.Engine Thread-1963 : (1, 1)
2020-02-01 00:44:07,325 DEBUG sqlalchemy.engine.base.Engine Thread-1963 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:07,326 DEBUG sqlalchemy.engine.base.Engine Thread-1963 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:07,327 INFO sqlalchemy.engine.base.Engine Thread-1963 : ROLLBACK
2020-02-01 00:44:07,357 INFO sqlalchemy.engine.base.Engine Thread-1964 : BEGIN (implicit)
2020-02-01 00:44:07,359 INFO sqlalchemy.engine.base.Engine Thread-1964 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:44:07,359 INFO sqlalchemy.engine.base.Engine Thread-1964 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:44:07,360 DEBUG sqlalchemy.engine.base.Engine Thread-1964 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:44:07,360 DEBUG sqlalchemy.engine.base.Engine Thread-1964 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:44:07,361 INFO sqlalchemy.engine.base.Engine Thread-1964 : ROLLBACK
2020-02-01 00:44:48,704 INFO sqlalchemy.engine.base.Engine Thread-1966 : BEGIN (implicit)
2020-02-01 00:44:48,707 INFO sqlalchemy.engine.base.Engine Thread-1966 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:44:48,707 INFO sqlalchemy.engine.base.Engine Thread-1966 : ()
2020-02-01 00:44:48,708 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:44:48,708 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:44:48,708 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:44:48,710 INFO sqlalchemy.engine.base.Engine Thread-1966 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:48,710 INFO sqlalchemy.engine.base.Engine Thread-1966 : (1, 1)
2020-02-01 00:44:48,711 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:48,711 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:48,716 INFO sqlalchemy.engine.base.Engine Thread-1966 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:44:48,716 INFO sqlalchemy.engine.base.Engine Thread-1966 : ('philip', 1, 1)
2020-02-01 00:44:48,716 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:48,717 DEBUG sqlalchemy.engine.base.Engine Thread-1966 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:48,718 INFO sqlalchemy.engine.base.Engine Thread-1966 : ROLLBACK
2020-02-01 00:44:49,393 INFO sqlalchemy.engine.base.Engine Thread-1974 : BEGIN (implicit)
2020-02-01 00:44:49,394 INFO sqlalchemy.engine.base.Engine Thread-1974 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:49,394 INFO sqlalchemy.engine.base.Engine Thread-1974 : (1, 1)
2020-02-01 00:44:49,395 DEBUG sqlalchemy.engine.base.Engine Thread-1974 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:49,395 DEBUG sqlalchemy.engine.base.Engine Thread-1974 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:49,396 INFO sqlalchemy.engine.base.Engine Thread-1974 : ROLLBACK
2020-02-01 00:44:49,402 INFO sqlalchemy.engine.base.Engine Thread-1975 : BEGIN (implicit)
2020-02-01 00:44:49,403 INFO sqlalchemy.engine.base.Engine Thread-1975 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:49,403 INFO sqlalchemy.engine.base.Engine Thread-1975 : (1, 1)
2020-02-01 00:44:49,404 DEBUG sqlalchemy.engine.base.Engine Thread-1975 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:49,404 DEBUG sqlalchemy.engine.base.Engine Thread-1975 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:49,405 INFO sqlalchemy.engine.base.Engine Thread-1975 : ROLLBACK
2020-02-01 00:44:49,408 INFO sqlalchemy.engine.base.Engine Thread-1976 : BEGIN (implicit)
2020-02-01 00:44:49,411 INFO sqlalchemy.engine.base.Engine Thread-1976 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:49,412 INFO sqlalchemy.engine.base.Engine Thread-1976 : (1, 1)
2020-02-01 00:44:49,411 INFO sqlalchemy.engine.base.Engine Thread-1977 : BEGIN (implicit)
2020-02-01 00:44:49,414 INFO sqlalchemy.engine.base.Engine Thread-1977 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:49,414 INFO sqlalchemy.engine.base.Engine Thread-1977 : (1, 1)
2020-02-01 00:44:49,413 DEBUG sqlalchemy.engine.base.Engine Thread-1976 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:49,414 DEBUG sqlalchemy.engine.base.Engine Thread-1976 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:49,415 DEBUG sqlalchemy.engine.base.Engine Thread-1977 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:49,416 INFO sqlalchemy.engine.base.Engine Thread-1976 : ROLLBACK
2020-02-01 00:44:49,416 DEBUG sqlalchemy.engine.base.Engine Thread-1977 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:49,417 INFO sqlalchemy.engine.base.Engine Thread-1977 : ROLLBACK
2020-02-01 00:44:49,532 INFO sqlalchemy.engine.base.Engine Thread-1978 : BEGIN (implicit)
2020-02-01 00:44:49,533 INFO sqlalchemy.engine.base.Engine Thread-1978 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:44:49,533 INFO sqlalchemy.engine.base.Engine Thread-1978 : (1, 1)
2020-02-01 00:44:49,534 DEBUG sqlalchemy.engine.base.Engine Thread-1978 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:44:49,537 DEBUG sqlalchemy.engine.base.Engine Thread-1978 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:44:49,538 INFO sqlalchemy.engine.base.Engine Thread-1978 : ROLLBACK
2020-02-01 00:44:49,582 INFO sqlalchemy.engine.base.Engine Thread-1979 : BEGIN (implicit)
2020-02-01 00:44:49,583 INFO sqlalchemy.engine.base.Engine Thread-1979 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:44:49,584 INFO sqlalchemy.engine.base.Engine Thread-1979 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:44:49,584 DEBUG sqlalchemy.engine.base.Engine Thread-1979 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:44:49,585 DEBUG sqlalchemy.engine.base.Engine Thread-1979 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:44:49,585 INFO sqlalchemy.engine.base.Engine Thread-1979 : ROLLBACK
2020-02-01 00:45:01,100 INFO sqlalchemy.engine.base.Engine Thread-1981 : BEGIN (implicit)
2020-02-01 00:45:01,101 INFO sqlalchemy.engine.base.Engine Thread-1981 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:45:01,101 INFO sqlalchemy.engine.base.Engine Thread-1981 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 00:45:01,102 DEBUG sqlalchemy.engine.base.Engine Thread-1981 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:45:01,103 INFO sqlalchemy.engine.base.Engine Thread-1981 : ROLLBACK
2020-02-01 00:45:26,839 INFO sqlalchemy.engine.base.Engine Thread-1982 : BEGIN (implicit)
2020-02-01 00:45:26,841 INFO sqlalchemy.engine.base.Engine Thread-1982 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:45:26,841 INFO sqlalchemy.engine.base.Engine Thread-1982 : ()
2020-02-01 00:45:26,844 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:45:26,844 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:45:26,844 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:45:26,846 INFO sqlalchemy.engine.base.Engine Thread-1982 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:45:26,847 INFO sqlalchemy.engine.base.Engine Thread-1982 : (1, 1)
2020-02-01 00:45:26,847 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:26,847 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:26,852 INFO sqlalchemy.engine.base.Engine Thread-1982 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:45:26,852 INFO sqlalchemy.engine.base.Engine Thread-1982 : ('philip', 1, 1)
2020-02-01 00:45:26,853 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:26,853 DEBUG sqlalchemy.engine.base.Engine Thread-1982 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:26,854 INFO sqlalchemy.engine.base.Engine Thread-1982 : ROLLBACK
2020-02-01 00:45:27,427 INFO sqlalchemy.engine.base.Engine Thread-1991 : BEGIN (implicit)
2020-02-01 00:45:27,429 INFO sqlalchemy.engine.base.Engine Thread-1991 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:45:27,429 INFO sqlalchemy.engine.base.Engine Thread-1991 : (1, 1)
2020-02-01 00:45:27,430 INFO sqlalchemy.engine.base.Engine Thread-1992 : BEGIN (implicit)
2020-02-01 00:45:27,431 INFO sqlalchemy.engine.base.Engine Thread-1992 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:45:27,432 INFO sqlalchemy.engine.base.Engine Thread-1992 : (1, 1)
2020-02-01 00:45:27,432 DEBUG sqlalchemy.engine.base.Engine Thread-1992 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:27,433 DEBUG sqlalchemy.engine.base.Engine Thread-1992 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:27,434 INFO sqlalchemy.engine.base.Engine Thread-1992 : ROLLBACK
2020-02-01 00:45:27,435 DEBUG sqlalchemy.engine.base.Engine Thread-1991 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:27,435 DEBUG sqlalchemy.engine.base.Engine Thread-1991 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:27,436 INFO sqlalchemy.engine.base.Engine Thread-1991 : ROLLBACK
2020-02-01 00:45:27,438 INFO sqlalchemy.engine.base.Engine Thread-1990 : BEGIN (implicit)
2020-02-01 00:45:27,439 INFO sqlalchemy.engine.base.Engine Thread-1990 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:45:27,439 INFO sqlalchemy.engine.base.Engine Thread-1990 : (1, 1)
2020-02-01 00:45:27,441 INFO sqlalchemy.engine.base.Engine Thread-1993 : BEGIN (implicit)
2020-02-01 00:45:27,442 INFO sqlalchemy.engine.base.Engine Thread-1993 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:45:27,442 INFO sqlalchemy.engine.base.Engine Thread-1993 : (1, 1)
2020-02-01 00:45:27,443 DEBUG sqlalchemy.engine.base.Engine Thread-1990 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:27,443 DEBUG sqlalchemy.engine.base.Engine Thread-1993 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:27,444 DEBUG sqlalchemy.engine.base.Engine Thread-1990 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:27,444 DEBUG sqlalchemy.engine.base.Engine Thread-1993 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:27,445 INFO sqlalchemy.engine.base.Engine Thread-1990 : ROLLBACK
2020-02-01 00:45:27,446 INFO sqlalchemy.engine.base.Engine Thread-1993 : ROLLBACK
2020-02-01 00:45:27,539 INFO sqlalchemy.engine.base.Engine Thread-1994 : BEGIN (implicit)
2020-02-01 00:45:27,540 INFO sqlalchemy.engine.base.Engine Thread-1994 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:45:27,540 INFO sqlalchemy.engine.base.Engine Thread-1994 : (1, 1)
2020-02-01 00:45:27,540 DEBUG sqlalchemy.engine.base.Engine Thread-1994 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:45:27,541 DEBUG sqlalchemy.engine.base.Engine Thread-1994 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:45:27,542 INFO sqlalchemy.engine.base.Engine Thread-1994 : ROLLBACK
2020-02-01 00:45:27,575 INFO sqlalchemy.engine.base.Engine Thread-1995 : BEGIN (implicit)
2020-02-01 00:45:27,577 INFO sqlalchemy.engine.base.Engine Thread-1995 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:45:27,577 INFO sqlalchemy.engine.base.Engine Thread-1995 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:45:27,578 DEBUG sqlalchemy.engine.base.Engine Thread-1995 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:45:27,578 DEBUG sqlalchemy.engine.base.Engine Thread-1995 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:45:27,579 INFO sqlalchemy.engine.base.Engine Thread-1995 : ROLLBACK
2020-02-01 00:45:33,549 INFO sqlalchemy.engine.base.Engine Thread-1997 : BEGIN (implicit)
2020-02-01 00:45:33,550 INFO sqlalchemy.engine.base.Engine Thread-1997 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:45:33,550 INFO sqlalchemy.engine.base.Engine Thread-1997 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 00:45:33,551 DEBUG sqlalchemy.engine.base.Engine Thread-1997 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:45:33,552 INFO sqlalchemy.engine.base.Engine Thread-1997 : ROLLBACK
2020-02-01 00:47:26,093 INFO sqlalchemy.engine.base.Engine Thread-1998 : BEGIN (implicit)
2020-02-01 00:47:26,095 INFO sqlalchemy.engine.base.Engine Thread-1998 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:47:26,095 INFO sqlalchemy.engine.base.Engine Thread-1998 : ()
2020-02-01 00:47:26,097 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:47:26,097 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:47:26,098 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:47:26,100 INFO sqlalchemy.engine.base.Engine Thread-1998 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:26,100 INFO sqlalchemy.engine.base.Engine Thread-1998 : (1, 1)
2020-02-01 00:47:26,101 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,101 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,105 INFO sqlalchemy.engine.base.Engine Thread-1998 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:47:26,105 INFO sqlalchemy.engine.base.Engine Thread-1998 : ('philip', 1, 1)
2020-02-01 00:47:26,106 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,106 DEBUG sqlalchemy.engine.base.Engine Thread-1998 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,108 INFO sqlalchemy.engine.base.Engine Thread-1998 : ROLLBACK
2020-02-01 00:47:26,751 INFO sqlalchemy.engine.base.Engine Thread-2006 : BEGIN (implicit)
2020-02-01 00:47:26,752 INFO sqlalchemy.engine.base.Engine Thread-2006 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:26,752 INFO sqlalchemy.engine.base.Engine Thread-2006 : (1, 1)
2020-02-01 00:47:26,753 DEBUG sqlalchemy.engine.base.Engine Thread-2006 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,754 DEBUG sqlalchemy.engine.base.Engine Thread-2006 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,755 INFO sqlalchemy.engine.base.Engine Thread-2006 : ROLLBACK
2020-02-01 00:47:26,762 INFO sqlalchemy.engine.base.Engine Thread-2009 : BEGIN (implicit)
2020-02-01 00:47:26,763 INFO sqlalchemy.engine.base.Engine Thread-2007 : BEGIN (implicit)
2020-02-01 00:47:26,767 INFO sqlalchemy.engine.base.Engine Thread-2007 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:26,766 INFO sqlalchemy.engine.base.Engine Thread-2008 : BEGIN (implicit)
2020-02-01 00:47:26,767 INFO sqlalchemy.engine.base.Engine Thread-2007 : (1, 1)
2020-02-01 00:47:26,764 INFO sqlalchemy.engine.base.Engine Thread-2009 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:26,768 INFO sqlalchemy.engine.base.Engine Thread-2008 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:26,768 INFO sqlalchemy.engine.base.Engine Thread-2009 : (1, 1)
2020-02-01 00:47:26,768 INFO sqlalchemy.engine.base.Engine Thread-2008 : (1, 1)
2020-02-01 00:47:26,769 DEBUG sqlalchemy.engine.base.Engine Thread-2007 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,769 DEBUG sqlalchemy.engine.base.Engine Thread-2007 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,770 DEBUG sqlalchemy.engine.base.Engine Thread-2009 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,771 INFO sqlalchemy.engine.base.Engine Thread-2007 : ROLLBACK
2020-02-01 00:47:26,771 DEBUG sqlalchemy.engine.base.Engine Thread-2009 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,772 INFO sqlalchemy.engine.base.Engine Thread-2009 : ROLLBACK
2020-02-01 00:47:26,771 DEBUG sqlalchemy.engine.base.Engine Thread-2008 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,774 DEBUG sqlalchemy.engine.base.Engine Thread-2008 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,774 INFO sqlalchemy.engine.base.Engine Thread-2008 : ROLLBACK
2020-02-01 00:47:26,912 INFO sqlalchemy.engine.base.Engine Thread-2010 : BEGIN (implicit)
2020-02-01 00:47:26,913 INFO sqlalchemy.engine.base.Engine Thread-2010 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:26,913 INFO sqlalchemy.engine.base.Engine Thread-2010 : (1, 1)
2020-02-01 00:47:26,914 DEBUG sqlalchemy.engine.base.Engine Thread-2010 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:26,914 DEBUG sqlalchemy.engine.base.Engine Thread-2010 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:26,915 INFO sqlalchemy.engine.base.Engine Thread-2010 : ROLLBACK
2020-02-01 00:47:26,949 INFO sqlalchemy.engine.base.Engine Thread-2011 : BEGIN (implicit)
2020-02-01 00:47:26,950 INFO sqlalchemy.engine.base.Engine Thread-2011 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:47:26,950 INFO sqlalchemy.engine.base.Engine Thread-2011 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:47:26,951 DEBUG sqlalchemy.engine.base.Engine Thread-2011 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:47:26,951 DEBUG sqlalchemy.engine.base.Engine Thread-2011 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:47:26,952 INFO sqlalchemy.engine.base.Engine Thread-2011 : ROLLBACK
2020-02-01 00:47:28,616 INFO sqlalchemy.engine.base.Engine Thread-2013 : BEGIN (implicit)
2020-02-01 00:47:28,619 INFO sqlalchemy.engine.base.Engine Thread-2013 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 00:47:28,619 INFO sqlalchemy.engine.base.Engine Thread-2013 : ()
2020-02-01 00:47:28,620 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 00:47:28,620 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 00:47:28,620 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 00:47:28,622 INFO sqlalchemy.engine.base.Engine Thread-2013 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:28,622 INFO sqlalchemy.engine.base.Engine Thread-2013 : (1, 1)
2020-02-01 00:47:28,623 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:28,623 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:28,627 INFO sqlalchemy.engine.base.Engine Thread-2013 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 00:47:28,627 INFO sqlalchemy.engine.base.Engine Thread-2013 : ('philip', 1, 1)
2020-02-01 00:47:28,627 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:28,628 DEBUG sqlalchemy.engine.base.Engine Thread-2013 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:28,629 INFO sqlalchemy.engine.base.Engine Thread-2013 : ROLLBACK
2020-02-01 00:47:29,102 INFO sqlalchemy.engine.base.Engine Thread-2021 : BEGIN (implicit)
2020-02-01 00:47:29,103 INFO sqlalchemy.engine.base.Engine Thread-2021 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:29,103 INFO sqlalchemy.engine.base.Engine Thread-2021 : (1, 1)
2020-02-01 00:47:29,104 DEBUG sqlalchemy.engine.base.Engine Thread-2021 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:29,104 DEBUG sqlalchemy.engine.base.Engine Thread-2021 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:29,105 INFO sqlalchemy.engine.base.Engine Thread-2021 : ROLLBACK
2020-02-01 00:47:29,114 INFO sqlalchemy.engine.base.Engine Thread-2022 : BEGIN (implicit)
2020-02-01 00:47:29,116 INFO sqlalchemy.engine.base.Engine Thread-2022 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:29,118 INFO sqlalchemy.engine.base.Engine Thread-2023 : BEGIN (implicit)
2020-02-01 00:47:29,118 INFO sqlalchemy.engine.base.Engine Thread-2022 : (1, 1)
2020-02-01 00:47:29,121 DEBUG sqlalchemy.engine.base.Engine Thread-2022 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:29,120 INFO sqlalchemy.engine.base.Engine Thread-2023 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:29,121 INFO sqlalchemy.engine.base.Engine Thread-2023 : (1, 1)
2020-02-01 00:47:29,121 DEBUG sqlalchemy.engine.base.Engine Thread-2022 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:29,119 INFO sqlalchemy.engine.base.Engine Thread-2024 : BEGIN (implicit)
2020-02-01 00:47:29,124 INFO sqlalchemy.engine.base.Engine Thread-2024 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:29,124 INFO sqlalchemy.engine.base.Engine Thread-2024 : (1, 1)
2020-02-01 00:47:29,122 INFO sqlalchemy.engine.base.Engine Thread-2022 : ROLLBACK
2020-02-01 00:47:29,125 DEBUG sqlalchemy.engine.base.Engine Thread-2023 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:29,125 DEBUG sqlalchemy.engine.base.Engine Thread-2023 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:29,126 INFO sqlalchemy.engine.base.Engine Thread-2023 : ROLLBACK
2020-02-01 00:47:29,127 DEBUG sqlalchemy.engine.base.Engine Thread-2024 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:29,127 DEBUG sqlalchemy.engine.base.Engine Thread-2024 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:29,128 INFO sqlalchemy.engine.base.Engine Thread-2024 : ROLLBACK
2020-02-01 00:47:29,204 INFO sqlalchemy.engine.base.Engine Thread-2025 : BEGIN (implicit)
2020-02-01 00:47:29,205 INFO sqlalchemy.engine.base.Engine Thread-2025 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 00:47:29,205 INFO sqlalchemy.engine.base.Engine Thread-2025 : (1, 1)
2020-02-01 00:47:29,205 DEBUG sqlalchemy.engine.base.Engine Thread-2025 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 00:47:29,206 DEBUG sqlalchemy.engine.base.Engine Thread-2025 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 00:47:29,206 INFO sqlalchemy.engine.base.Engine Thread-2025 : ROLLBACK
2020-02-01 00:47:29,245 INFO sqlalchemy.engine.base.Engine Thread-2026 : BEGIN (implicit)
2020-02-01 00:47:29,246 INFO sqlalchemy.engine.base.Engine Thread-2026 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:47:29,246 INFO sqlalchemy.engine.base.Engine Thread-2026 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:47:29,246 DEBUG sqlalchemy.engine.base.Engine Thread-2026 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:47:29,247 DEBUG sqlalchemy.engine.base.Engine Thread-2026 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:47:29,248 INFO sqlalchemy.engine.base.Engine Thread-2026 : ROLLBACK
2020-02-01 00:47:36,482 INFO sqlalchemy.engine.base.Engine Thread-2028 : BEGIN (implicit)
2020-02-01 00:47:36,483 INFO sqlalchemy.engine.base.Engine Thread-2028 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:47:36,483 INFO sqlalchemy.engine.base.Engine Thread-2028 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:47:36,484 DEBUG sqlalchemy.engine.base.Engine Thread-2028 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:47:36,484 DEBUG sqlalchemy.engine.base.Engine Thread-2028 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:47:36,485 INFO sqlalchemy.engine.base.Engine Thread-2028 : ROLLBACK
2020-02-01 00:47:42,378 INFO sqlalchemy.engine.base.Engine Thread-2029 : BEGIN (implicit)
2020-02-01 00:47:42,379 INFO sqlalchemy.engine.base.Engine Thread-2029 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:47:42,379 INFO sqlalchemy.engine.base.Engine Thread-2029 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 00:47:42,380 DEBUG sqlalchemy.engine.base.Engine Thread-2029 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:47:42,380 DEBUG sqlalchemy.engine.base.Engine Thread-2029 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 00:47:42,381 DEBUG sqlalchemy.engine.base.Engine Thread-2029 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 00:47:42,381 INFO sqlalchemy.engine.base.Engine Thread-2029 : ROLLBACK
2020-02-01 00:49:10,930 INFO sqlalchemy.engine.base.Engine Thread-2030 : BEGIN (implicit)
2020-02-01 00:49:10,931 INFO sqlalchemy.engine.base.Engine Thread-2030 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:49:10,931 INFO sqlalchemy.engine.base.Engine Thread-2030 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 00:49:10,932 DEBUG sqlalchemy.engine.base.Engine Thread-2030 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:49:10,933 DEBUG sqlalchemy.engine.base.Engine Thread-2030 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:49:10,933 INFO sqlalchemy.engine.base.Engine Thread-2030 : ROLLBACK
2020-02-01 00:49:17,325 INFO sqlalchemy.engine.base.Engine Thread-2031 : BEGIN (implicit)
2020-02-01 00:49:17,326 INFO sqlalchemy.engine.base.Engine Thread-2031 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:49:17,326 INFO sqlalchemy.engine.base.Engine Thread-2031 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 00:49:17,327 DEBUG sqlalchemy.engine.base.Engine Thread-2031 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:49:17,328 DEBUG sqlalchemy.engine.base.Engine Thread-2031 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 00:49:17,328 INFO sqlalchemy.engine.base.Engine Thread-2031 : ROLLBACK
2020-02-01 00:49:17,552 INFO sqlalchemy.engine.base.Engine Thread-2032 : BEGIN (implicit)
2020-02-01 00:49:17,553 INFO sqlalchemy.engine.base.Engine Thread-2032 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 00:49:17,553 INFO sqlalchemy.engine.base.Engine Thread-2032 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 00:49:17,554 DEBUG sqlalchemy.engine.base.Engine Thread-2032 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 00:49:17,555 INFO sqlalchemy.engine.base.Engine Thread-2032 : ROLLBACK
2020-02-01 01:01:21,024 INFO sqlalchemy.engine.base.Engine Thread-2033 : BEGIN (implicit)
2020-02-01 01:01:21,027 INFO sqlalchemy.engine.base.Engine Thread-2033 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:01:21,027 INFO sqlalchemy.engine.base.Engine Thread-2033 : ()
2020-02-01 01:01:21,030 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:01:21,031 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:01:21,031 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:01:21,033 INFO sqlalchemy.engine.base.Engine Thread-2033 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:01:21,033 INFO sqlalchemy.engine.base.Engine Thread-2033 : (1, 1)
2020-02-01 01:01:21,034 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,034 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,040 INFO sqlalchemy.engine.base.Engine Thread-2033 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:01:21,040 INFO sqlalchemy.engine.base.Engine Thread-2033 : ('philip', 1, 1)
2020-02-01 01:01:21,040 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,041 DEBUG sqlalchemy.engine.base.Engine Thread-2033 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,042 INFO sqlalchemy.engine.base.Engine Thread-2033 : ROLLBACK
2020-02-01 01:01:21,793 INFO sqlalchemy.engine.base.Engine Thread-2042 : BEGIN (implicit)
2020-02-01 01:01:21,794 INFO sqlalchemy.engine.base.Engine Thread-2042 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:01:21,794 INFO sqlalchemy.engine.base.Engine Thread-2042 : (1, 1)
2020-02-01 01:01:21,795 INFO sqlalchemy.engine.base.Engine Thread-2041 : BEGIN (implicit)
2020-02-01 01:01:21,796 INFO sqlalchemy.engine.base.Engine Thread-2041 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:01:21,798 INFO sqlalchemy.engine.base.Engine Thread-2041 : (1, 1)
2020-02-01 01:01:21,797 DEBUG sqlalchemy.engine.base.Engine Thread-2042 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,800 INFO sqlalchemy.engine.base.Engine Thread-2044 : BEGIN (implicit)
2020-02-01 01:01:21,804 INFO sqlalchemy.engine.base.Engine Thread-2044 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:01:21,803 DEBUG sqlalchemy.engine.base.Engine Thread-2042 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,805 INFO sqlalchemy.engine.base.Engine Thread-2042 : ROLLBACK
2020-02-01 01:01:21,802 INFO sqlalchemy.engine.base.Engine Thread-2043 : BEGIN (implicit)
2020-02-01 01:01:21,804 INFO sqlalchemy.engine.base.Engine Thread-2044 : (1, 1)
2020-02-01 01:01:21,806 INFO sqlalchemy.engine.base.Engine Thread-2043 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:01:21,807 INFO sqlalchemy.engine.base.Engine Thread-2043 : (1, 1)
2020-02-01 01:01:21,803 DEBUG sqlalchemy.engine.base.Engine Thread-2041 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,808 DEBUG sqlalchemy.engine.base.Engine Thread-2044 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,808 DEBUG sqlalchemy.engine.base.Engine Thread-2043 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,809 DEBUG sqlalchemy.engine.base.Engine Thread-2043 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,809 DEBUG sqlalchemy.engine.base.Engine Thread-2044 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,808 DEBUG sqlalchemy.engine.base.Engine Thread-2041 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,812 INFO sqlalchemy.engine.base.Engine Thread-2041 : ROLLBACK
2020-02-01 01:01:21,811 INFO sqlalchemy.engine.base.Engine Thread-2044 : ROLLBACK
2020-02-01 01:01:21,810 INFO sqlalchemy.engine.base.Engine Thread-2043 : ROLLBACK
2020-02-01 01:01:21,974 INFO sqlalchemy.engine.base.Engine Thread-2045 : BEGIN (implicit)
2020-02-01 01:01:21,975 INFO sqlalchemy.engine.base.Engine Thread-2045 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:01:21,975 INFO sqlalchemy.engine.base.Engine Thread-2045 : (1, 1)
2020-02-01 01:01:21,976 DEBUG sqlalchemy.engine.base.Engine Thread-2045 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:01:21,976 DEBUG sqlalchemy.engine.base.Engine Thread-2045 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:01:21,977 INFO sqlalchemy.engine.base.Engine Thread-2045 : ROLLBACK
2020-02-01 01:01:22,033 INFO sqlalchemy.engine.base.Engine Thread-2046 : BEGIN (implicit)
2020-02-01 01:01:22,035 INFO sqlalchemy.engine.base.Engine Thread-2046 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:01:22,035 INFO sqlalchemy.engine.base.Engine Thread-2046 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:01:22,036 DEBUG sqlalchemy.engine.base.Engine Thread-2046 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:01:22,036 DEBUG sqlalchemy.engine.base.Engine Thread-2046 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:01:22,037 INFO sqlalchemy.engine.base.Engine Thread-2046 : ROLLBACK
2020-02-01 01:01:22,974 INFO sqlalchemy.engine.base.Engine Thread-2048 : BEGIN (implicit)
2020-02-01 01:01:22,976 INFO sqlalchemy.engine.base.Engine Thread-2048 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:01:22,976 INFO sqlalchemy.engine.base.Engine Thread-2048 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 01:01:22,977 DEBUG sqlalchemy.engine.base.Engine Thread-2048 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:01:22,977 INFO sqlalchemy.engine.base.Engine Thread-2048 : ROLLBACK
2020-02-01 01:03:44,040 INFO sqlalchemy.engine.base.Engine Thread-2049 : BEGIN (implicit)
2020-02-01 01:03:44,043 INFO sqlalchemy.engine.base.Engine Thread-2049 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:03:44,043 INFO sqlalchemy.engine.base.Engine Thread-2049 : ()
2020-02-01 01:03:44,045 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:03:44,045 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:03:44,046 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:03:44,048 INFO sqlalchemy.engine.base.Engine Thread-2049 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:03:44,048 INFO sqlalchemy.engine.base.Engine Thread-2049 : (1, 1)
2020-02-01 01:03:44,048 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,048 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,053 INFO sqlalchemy.engine.base.Engine Thread-2049 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:03:44,053 INFO sqlalchemy.engine.base.Engine Thread-2049 : ('philip', 1, 1)
2020-02-01 01:03:44,053 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,053 DEBUG sqlalchemy.engine.base.Engine Thread-2049 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,055 INFO sqlalchemy.engine.base.Engine Thread-2049 : ROLLBACK
2020-02-01 01:03:44,698 INFO sqlalchemy.engine.base.Engine Thread-2058 : BEGIN (implicit)
2020-02-01 01:03:44,700 INFO sqlalchemy.engine.base.Engine Thread-2057 : BEGIN (implicit)
2020-02-01 01:03:44,701 INFO sqlalchemy.engine.base.Engine Thread-2058 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:03:44,720 INFO sqlalchemy.engine.base.Engine Thread-2058 : (1, 1)
2020-02-01 01:03:44,707 INFO sqlalchemy.engine.base.Engine Thread-2059 : BEGIN (implicit)
2020-02-01 01:03:44,720 INFO sqlalchemy.engine.base.Engine Thread-2057 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:03:44,722 INFO sqlalchemy.engine.base.Engine Thread-2057 : (1, 1)
2020-02-01 01:03:44,721 INFO sqlalchemy.engine.base.Engine Thread-2059 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:03:44,721 DEBUG sqlalchemy.engine.base.Engine Thread-2058 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,705 INFO sqlalchemy.engine.base.Engine Thread-2060 : BEGIN (implicit)
2020-02-01 01:03:44,723 INFO sqlalchemy.engine.base.Engine Thread-2060 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:03:44,722 DEBUG sqlalchemy.engine.base.Engine Thread-2058 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,723 DEBUG sqlalchemy.engine.base.Engine Thread-2057 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,722 INFO sqlalchemy.engine.base.Engine Thread-2059 : (1, 1)
2020-02-01 01:03:44,724 INFO sqlalchemy.engine.base.Engine Thread-2060 : (1, 1)
2020-02-01 01:03:44,725 INFO sqlalchemy.engine.base.Engine Thread-2058 : ROLLBACK
2020-02-01 01:03:44,725 DEBUG sqlalchemy.engine.base.Engine Thread-2057 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,727 DEBUG sqlalchemy.engine.base.Engine Thread-2060 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,728 INFO sqlalchemy.engine.base.Engine Thread-2057 : ROLLBACK
2020-02-01 01:03:44,728 DEBUG sqlalchemy.engine.base.Engine Thread-2060 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,729 INFO sqlalchemy.engine.base.Engine Thread-2060 : ROLLBACK
2020-02-01 01:03:44,730 DEBUG sqlalchemy.engine.base.Engine Thread-2059 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,731 DEBUG sqlalchemy.engine.base.Engine Thread-2059 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,732 INFO sqlalchemy.engine.base.Engine Thread-2059 : ROLLBACK
2020-02-01 01:03:44,793 INFO sqlalchemy.engine.base.Engine Thread-2061 : BEGIN (implicit)
2020-02-01 01:03:44,793 INFO sqlalchemy.engine.base.Engine Thread-2061 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:03:44,794 INFO sqlalchemy.engine.base.Engine Thread-2061 : (1, 1)
2020-02-01 01:03:44,794 DEBUG sqlalchemy.engine.base.Engine Thread-2061 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:03:44,795 DEBUG sqlalchemy.engine.base.Engine Thread-2061 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:03:44,795 INFO sqlalchemy.engine.base.Engine Thread-2061 : ROLLBACK
2020-02-01 01:03:44,835 INFO sqlalchemy.engine.base.Engine Thread-2062 : BEGIN (implicit)
2020-02-01 01:03:44,836 INFO sqlalchemy.engine.base.Engine Thread-2062 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:03:44,836 INFO sqlalchemy.engine.base.Engine Thread-2062 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:03:44,837 DEBUG sqlalchemy.engine.base.Engine Thread-2062 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:03:44,837 DEBUG sqlalchemy.engine.base.Engine Thread-2062 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:03:44,838 INFO sqlalchemy.engine.base.Engine Thread-2062 : ROLLBACK
2020-02-01 01:05:43,778 INFO sqlalchemy.engine.base.Engine Thread-2064 : BEGIN (implicit)
2020-02-01 01:05:43,780 INFO sqlalchemy.engine.base.Engine Thread-2064 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:05:43,781 INFO sqlalchemy.engine.base.Engine Thread-2064 : ()
2020-02-01 01:05:43,783 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:05:43,783 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:05:43,783 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:05:43,786 INFO sqlalchemy.engine.base.Engine Thread-2064 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:05:43,786 INFO sqlalchemy.engine.base.Engine Thread-2064 : (1, 1)
2020-02-01 01:05:43,786 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:43,787 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:43,791 INFO sqlalchemy.engine.base.Engine Thread-2064 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:05:43,791 INFO sqlalchemy.engine.base.Engine Thread-2064 : ('philip', 1, 1)
2020-02-01 01:05:43,792 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:43,792 DEBUG sqlalchemy.engine.base.Engine Thread-2064 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:43,794 INFO sqlalchemy.engine.base.Engine Thread-2064 : ROLLBACK
2020-02-01 01:05:44,507 INFO sqlalchemy.engine.base.Engine Thread-2072 : BEGIN (implicit)
2020-02-01 01:05:44,509 INFO sqlalchemy.engine.base.Engine Thread-2073 : BEGIN (implicit)
2020-02-01 01:05:44,510 INFO sqlalchemy.engine.base.Engine Thread-2072 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:05:44,516 INFO sqlalchemy.engine.base.Engine Thread-2072 : (1, 1)
2020-02-01 01:05:44,514 INFO sqlalchemy.engine.base.Engine Thread-2073 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:05:44,516 INFO sqlalchemy.engine.base.Engine Thread-2073 : (1, 1)
2020-02-01 01:05:44,513 INFO sqlalchemy.engine.base.Engine Thread-2074 : BEGIN (implicit)
2020-02-01 01:05:44,518 INFO sqlalchemy.engine.base.Engine Thread-2075 : BEGIN (implicit)
2020-02-01 01:05:44,518 DEBUG sqlalchemy.engine.base.Engine Thread-2073 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:44,518 DEBUG sqlalchemy.engine.base.Engine Thread-2072 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:44,519 INFO sqlalchemy.engine.base.Engine Thread-2074 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:05:44,520 INFO sqlalchemy.engine.base.Engine Thread-2075 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:05:44,521 DEBUG sqlalchemy.engine.base.Engine Thread-2073 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:44,521 DEBUG sqlalchemy.engine.base.Engine Thread-2072 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:44,521 INFO sqlalchemy.engine.base.Engine Thread-2074 : (1, 1)
2020-02-01 01:05:44,521 INFO sqlalchemy.engine.base.Engine Thread-2075 : (1, 1)
2020-02-01 01:05:44,523 INFO sqlalchemy.engine.base.Engine Thread-2073 : ROLLBACK
2020-02-01 01:05:44,524 INFO sqlalchemy.engine.base.Engine Thread-2072 : ROLLBACK
2020-02-01 01:05:44,524 DEBUG sqlalchemy.engine.base.Engine Thread-2075 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:44,525 DEBUG sqlalchemy.engine.base.Engine Thread-2075 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:44,524 DEBUG sqlalchemy.engine.base.Engine Thread-2074 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:44,526 INFO sqlalchemy.engine.base.Engine Thread-2075 : ROLLBACK
2020-02-01 01:05:44,527 DEBUG sqlalchemy.engine.base.Engine Thread-2074 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:44,529 INFO sqlalchemy.engine.base.Engine Thread-2074 : ROLLBACK
2020-02-01 01:05:44,613 INFO sqlalchemy.engine.base.Engine Thread-2076 : BEGIN (implicit)
2020-02-01 01:05:44,614 INFO sqlalchemy.engine.base.Engine Thread-2076 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:05:44,614 INFO sqlalchemy.engine.base.Engine Thread-2076 : (1, 1)
2020-02-01 01:05:44,615 DEBUG sqlalchemy.engine.base.Engine Thread-2076 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:05:44,615 DEBUG sqlalchemy.engine.base.Engine Thread-2076 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:05:44,616 INFO sqlalchemy.engine.base.Engine Thread-2076 : ROLLBACK
2020-02-01 01:05:44,653 INFO sqlalchemy.engine.base.Engine Thread-2077 : BEGIN (implicit)
2020-02-01 01:05:44,654 INFO sqlalchemy.engine.base.Engine Thread-2077 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:05:44,654 INFO sqlalchemy.engine.base.Engine Thread-2077 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:05:44,655 DEBUG sqlalchemy.engine.base.Engine Thread-2077 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:05:44,655 DEBUG sqlalchemy.engine.base.Engine Thread-2077 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:05:44,656 INFO sqlalchemy.engine.base.Engine Thread-2077 : ROLLBACK
2020-02-01 01:06:29,763 INFO sqlalchemy.engine.base.Engine Thread-2079 : BEGIN (implicit)
2020-02-01 01:06:29,766 INFO sqlalchemy.engine.base.Engine Thread-2079 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:06:29,766 INFO sqlalchemy.engine.base.Engine Thread-2079 : ()
2020-02-01 01:06:29,767 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:06:29,768 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:06:29,768 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:06:29,770 INFO sqlalchemy.engine.base.Engine Thread-2079 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:06:29,770 INFO sqlalchemy.engine.base.Engine Thread-2079 : (1, 1)
2020-02-01 01:06:29,771 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:29,771 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:29,776 INFO sqlalchemy.engine.base.Engine Thread-2079 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:06:29,776 INFO sqlalchemy.engine.base.Engine Thread-2079 : ('philip', 1, 1)
2020-02-01 01:06:29,776 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:29,777 DEBUG sqlalchemy.engine.base.Engine Thread-2079 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:29,778 INFO sqlalchemy.engine.base.Engine Thread-2079 : ROLLBACK
2020-02-01 01:06:30,499 INFO sqlalchemy.engine.base.Engine Thread-2088 : BEGIN (implicit)
2020-02-01 01:06:30,506 INFO sqlalchemy.engine.base.Engine Thread-2088 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:06:30,507 INFO sqlalchemy.engine.base.Engine Thread-2088 : (1, 1)
2020-02-01 01:06:30,503 INFO sqlalchemy.engine.base.Engine Thread-2087 : BEGIN (implicit)
2020-02-01 01:06:30,507 INFO sqlalchemy.engine.base.Engine Thread-2089 : BEGIN (implicit)
2020-02-01 01:06:30,505 INFO sqlalchemy.engine.base.Engine Thread-2090 : BEGIN (implicit)
2020-02-01 01:06:30,511 INFO sqlalchemy.engine.base.Engine Thread-2090 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:06:30,510 INFO sqlalchemy.engine.base.Engine Thread-2089 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:06:30,511 INFO sqlalchemy.engine.base.Engine Thread-2089 : (1, 1)
2020-02-01 01:06:30,511 INFO sqlalchemy.engine.base.Engine Thread-2090 : (1, 1)
2020-02-01 01:06:30,509 INFO sqlalchemy.engine.base.Engine Thread-2087 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:06:30,512 INFO sqlalchemy.engine.base.Engine Thread-2087 : (1, 1)
2020-02-01 01:06:30,512 DEBUG sqlalchemy.engine.base.Engine Thread-2089 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:30,512 DEBUG sqlalchemy.engine.base.Engine Thread-2089 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:30,513 DEBUG sqlalchemy.engine.base.Engine Thread-2087 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:30,513 DEBUG sqlalchemy.engine.base.Engine Thread-2087 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:30,514 INFO sqlalchemy.engine.base.Engine Thread-2089 : ROLLBACK
2020-02-01 01:06:30,515 DEBUG sqlalchemy.engine.base.Engine Thread-2090 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:30,517 DEBUG sqlalchemy.engine.base.Engine Thread-2090 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:30,515 DEBUG sqlalchemy.engine.base.Engine Thread-2088 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:30,518 DEBUG sqlalchemy.engine.base.Engine Thread-2088 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:30,519 INFO sqlalchemy.engine.base.Engine Thread-2088 : ROLLBACK
2020-02-01 01:06:30,516 INFO sqlalchemy.engine.base.Engine Thread-2087 : ROLLBACK
2020-02-01 01:06:30,521 INFO sqlalchemy.engine.base.Engine Thread-2090 : ROLLBACK
2020-02-01 01:06:30,623 INFO sqlalchemy.engine.base.Engine Thread-2091 : BEGIN (implicit)
2020-02-01 01:06:30,624 INFO sqlalchemy.engine.base.Engine Thread-2091 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:06:30,624 INFO sqlalchemy.engine.base.Engine Thread-2091 : (1, 1)
2020-02-01 01:06:30,625 DEBUG sqlalchemy.engine.base.Engine Thread-2091 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:06:30,625 DEBUG sqlalchemy.engine.base.Engine Thread-2091 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:06:30,626 INFO sqlalchemy.engine.base.Engine Thread-2091 : ROLLBACK
2020-02-01 01:06:30,679 INFO sqlalchemy.engine.base.Engine Thread-2092 : BEGIN (implicit)
2020-02-01 01:06:30,681 INFO sqlalchemy.engine.base.Engine Thread-2092 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:06:30,681 INFO sqlalchemy.engine.base.Engine Thread-2092 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:06:30,682 DEBUG sqlalchemy.engine.base.Engine Thread-2092 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:06:30,682 DEBUG sqlalchemy.engine.base.Engine Thread-2092 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:06:30,683 INFO sqlalchemy.engine.base.Engine Thread-2092 : ROLLBACK
2020-02-01 01:07:03,523 INFO sqlalchemy.engine.base.Engine Thread-2094 : BEGIN (implicit)
2020-02-01 01:07:03,525 INFO sqlalchemy.engine.base.Engine Thread-2094 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:07:03,525 INFO sqlalchemy.engine.base.Engine Thread-2094 : ()
2020-02-01 01:07:03,527 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:07:03,527 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:07:03,527 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:07:03,529 INFO sqlalchemy.engine.base.Engine Thread-2094 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:03,529 INFO sqlalchemy.engine.base.Engine Thread-2094 : (1, 1)
2020-02-01 01:07:03,530 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:03,530 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:03,534 INFO sqlalchemy.engine.base.Engine Thread-2094 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:07:03,534 INFO sqlalchemy.engine.base.Engine Thread-2094 : ('philip', 1, 1)
2020-02-01 01:07:03,535 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:03,535 DEBUG sqlalchemy.engine.base.Engine Thread-2094 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:03,537 INFO sqlalchemy.engine.base.Engine Thread-2094 : ROLLBACK
2020-02-01 01:07:04,266 INFO sqlalchemy.engine.base.Engine Thread-2103 : BEGIN (implicit)
2020-02-01 01:07:04,268 INFO sqlalchemy.engine.base.Engine Thread-2104 : BEGIN (implicit)
2020-02-01 01:07:04,270 INFO sqlalchemy.engine.base.Engine Thread-2103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:04,274 INFO sqlalchemy.engine.base.Engine Thread-2103 : (1, 1)
2020-02-01 01:07:04,272 INFO sqlalchemy.engine.base.Engine Thread-2104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:04,274 INFO sqlalchemy.engine.base.Engine Thread-2104 : (1, 1)
2020-02-01 01:07:04,271 INFO sqlalchemy.engine.base.Engine Thread-2102 : BEGIN (implicit)
2020-02-01 01:07:04,275 INFO sqlalchemy.engine.base.Engine Thread-2102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:04,275 INFO sqlalchemy.engine.base.Engine Thread-2102 : (1, 1)
2020-02-01 01:07:04,273 INFO sqlalchemy.engine.base.Engine Thread-2105 : BEGIN (implicit)
2020-02-01 01:07:04,276 DEBUG sqlalchemy.engine.base.Engine Thread-2103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:04,278 DEBUG sqlalchemy.engine.base.Engine Thread-2103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:04,277 INFO sqlalchemy.engine.base.Engine Thread-2105 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:04,279 INFO sqlalchemy.engine.base.Engine Thread-2105 : (1, 1)
2020-02-01 01:07:04,276 DEBUG sqlalchemy.engine.base.Engine Thread-2104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:04,278 DEBUG sqlalchemy.engine.base.Engine Thread-2102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:04,280 DEBUG sqlalchemy.engine.base.Engine Thread-2104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:04,281 INFO sqlalchemy.engine.base.Engine Thread-2104 : ROLLBACK
2020-02-01 01:07:04,280 DEBUG sqlalchemy.engine.base.Engine Thread-2102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:04,280 DEBUG sqlalchemy.engine.base.Engine Thread-2105 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:04,279 INFO sqlalchemy.engine.base.Engine Thread-2103 : ROLLBACK
2020-02-01 01:07:04,283 INFO sqlalchemy.engine.base.Engine Thread-2102 : ROLLBACK
2020-02-01 01:07:04,283 DEBUG sqlalchemy.engine.base.Engine Thread-2105 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:04,286 INFO sqlalchemy.engine.base.Engine Thread-2105 : ROLLBACK
2020-02-01 01:07:04,368 INFO sqlalchemy.engine.base.Engine Thread-2106 : BEGIN (implicit)
2020-02-01 01:07:04,369 INFO sqlalchemy.engine.base.Engine Thread-2106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:04,369 INFO sqlalchemy.engine.base.Engine Thread-2106 : (1, 1)
2020-02-01 01:07:04,370 DEBUG sqlalchemy.engine.base.Engine Thread-2106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:04,370 DEBUG sqlalchemy.engine.base.Engine Thread-2106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:04,371 INFO sqlalchemy.engine.base.Engine Thread-2106 : ROLLBACK
2020-02-01 01:07:04,432 INFO sqlalchemy.engine.base.Engine Thread-2107 : BEGIN (implicit)
2020-02-01 01:07:04,433 INFO sqlalchemy.engine.base.Engine Thread-2107 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:07:04,434 INFO sqlalchemy.engine.base.Engine Thread-2107 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:07:04,434 DEBUG sqlalchemy.engine.base.Engine Thread-2107 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:07:04,435 DEBUG sqlalchemy.engine.base.Engine Thread-2107 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:07:04,435 INFO sqlalchemy.engine.base.Engine Thread-2107 : ROLLBACK
2020-02-01 01:07:28,009 INFO sqlalchemy.engine.base.Engine Thread-2109 : BEGIN (implicit)
2020-02-01 01:07:28,011 INFO sqlalchemy.engine.base.Engine Thread-2109 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:07:28,011 INFO sqlalchemy.engine.base.Engine Thread-2109 : ()
2020-02-01 01:07:28,013 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:07:28,013 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:07:28,014 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:07:28,016 INFO sqlalchemy.engine.base.Engine Thread-2109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:28,016 INFO sqlalchemy.engine.base.Engine Thread-2109 : (1, 1)
2020-02-01 01:07:28,017 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,017 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,021 INFO sqlalchemy.engine.base.Engine Thread-2109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:07:28,022 INFO sqlalchemy.engine.base.Engine Thread-2109 : ('philip', 1, 1)
2020-02-01 01:07:28,022 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,022 DEBUG sqlalchemy.engine.base.Engine Thread-2109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,024 INFO sqlalchemy.engine.base.Engine Thread-2109 : ROLLBACK
2020-02-01 01:07:28,688 INFO sqlalchemy.engine.base.Engine Thread-2117 : BEGIN (implicit)
2020-02-01 01:07:28,691 INFO sqlalchemy.engine.base.Engine Thread-2118 : BEGIN (implicit)
2020-02-01 01:07:28,692 INFO sqlalchemy.engine.base.Engine Thread-2117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:28,695 INFO sqlalchemy.engine.base.Engine Thread-2119 : BEGIN (implicit)
2020-02-01 01:07:28,697 INFO sqlalchemy.engine.base.Engine Thread-2118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:28,700 INFO sqlalchemy.engine.base.Engine Thread-2120 : BEGIN (implicit)
2020-02-01 01:07:28,700 INFO sqlalchemy.engine.base.Engine Thread-2117 : (1, 1)
2020-02-01 01:07:28,701 INFO sqlalchemy.engine.base.Engine Thread-2119 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:28,701 INFO sqlalchemy.engine.base.Engine Thread-2118 : (1, 1)
2020-02-01 01:07:28,702 INFO sqlalchemy.engine.base.Engine Thread-2120 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:28,703 INFO sqlalchemy.engine.base.Engine Thread-2119 : (1, 1)
2020-02-01 01:07:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-2119 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,704 DEBUG sqlalchemy.engine.base.Engine Thread-2118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-2118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,706 INFO sqlalchemy.engine.base.Engine Thread-2118 : ROLLBACK
2020-02-01 01:07:28,705 DEBUG sqlalchemy.engine.base.Engine Thread-2119 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,704 INFO sqlalchemy.engine.base.Engine Thread-2120 : (1, 1)
2020-02-01 01:07:28,703 DEBUG sqlalchemy.engine.base.Engine Thread-2117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,707 INFO sqlalchemy.engine.base.Engine Thread-2119 : ROLLBACK
2020-02-01 01:07:28,708 DEBUG sqlalchemy.engine.base.Engine Thread-2117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,710 INFO sqlalchemy.engine.base.Engine Thread-2117 : ROLLBACK
2020-02-01 01:07:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-2120 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,711 DEBUG sqlalchemy.engine.base.Engine Thread-2120 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,713 INFO sqlalchemy.engine.base.Engine Thread-2120 : ROLLBACK
2020-02-01 01:07:28,826 INFO sqlalchemy.engine.base.Engine Thread-2121 : BEGIN (implicit)
2020-02-01 01:07:28,827 INFO sqlalchemy.engine.base.Engine Thread-2121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:28,827 INFO sqlalchemy.engine.base.Engine Thread-2121 : (1, 1)
2020-02-01 01:07:28,828 DEBUG sqlalchemy.engine.base.Engine Thread-2121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:28,829 DEBUG sqlalchemy.engine.base.Engine Thread-2121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:28,830 INFO sqlalchemy.engine.base.Engine Thread-2121 : ROLLBACK
2020-02-01 01:07:28,881 INFO sqlalchemy.engine.base.Engine Thread-2122 : BEGIN (implicit)
2020-02-01 01:07:28,882 INFO sqlalchemy.engine.base.Engine Thread-2122 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:07:28,882 INFO sqlalchemy.engine.base.Engine Thread-2122 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:07:28,883 DEBUG sqlalchemy.engine.base.Engine Thread-2122 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:07:28,883 DEBUG sqlalchemy.engine.base.Engine Thread-2122 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:07:28,884 INFO sqlalchemy.engine.base.Engine Thread-2122 : ROLLBACK
2020-02-01 01:07:43,319 INFO sqlalchemy.engine.base.Engine Thread-2124 : BEGIN (implicit)
2020-02-01 01:07:43,322 INFO sqlalchemy.engine.base.Engine Thread-2124 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:07:43,322 INFO sqlalchemy.engine.base.Engine Thread-2124 : ()
2020-02-01 01:07:43,323 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:07:43,323 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:07:43,323 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:07:43,325 INFO sqlalchemy.engine.base.Engine Thread-2124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:43,325 INFO sqlalchemy.engine.base.Engine Thread-2124 : (1, 1)
2020-02-01 01:07:43,326 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:43,326 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:43,330 INFO sqlalchemy.engine.base.Engine Thread-2124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:07:43,330 INFO sqlalchemy.engine.base.Engine Thread-2124 : ('philip', 1, 1)
2020-02-01 01:07:43,331 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:43,331 DEBUG sqlalchemy.engine.base.Engine Thread-2124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:43,333 INFO sqlalchemy.engine.base.Engine Thread-2124 : ROLLBACK
2020-02-01 01:07:44,014 INFO sqlalchemy.engine.base.Engine Thread-2132 : BEGIN (implicit)
2020-02-01 01:07:44,015 INFO sqlalchemy.engine.base.Engine Thread-2132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:44,015 INFO sqlalchemy.engine.base.Engine Thread-2132 : (1, 1)
2020-02-01 01:07:44,017 DEBUG sqlalchemy.engine.base.Engine Thread-2132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:44,020 INFO sqlalchemy.engine.base.Engine Thread-2133 : BEGIN (implicit)
2020-02-01 01:07:44,023 INFO sqlalchemy.engine.base.Engine Thread-2134 : BEGIN (implicit)
2020-02-01 01:07:44,028 INFO sqlalchemy.engine.base.Engine Thread-2134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:44,026 INFO sqlalchemy.engine.base.Engine Thread-2135 : BEGIN (implicit)
2020-02-01 01:07:44,027 INFO sqlalchemy.engine.base.Engine Thread-2133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:44,030 INFO sqlalchemy.engine.base.Engine Thread-2133 : (1, 1)
2020-02-01 01:07:44,023 DEBUG sqlalchemy.engine.base.Engine Thread-2132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:44,029 INFO sqlalchemy.engine.base.Engine Thread-2135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:44,028 INFO sqlalchemy.engine.base.Engine Thread-2134 : (1, 1)
2020-02-01 01:07:44,030 INFO sqlalchemy.engine.base.Engine Thread-2135 : (1, 1)
2020-02-01 01:07:44,031 DEBUG sqlalchemy.engine.base.Engine Thread-2133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:44,032 DEBUG sqlalchemy.engine.base.Engine Thread-2133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:44,033 INFO sqlalchemy.engine.base.Engine Thread-2133 : ROLLBACK
2020-02-01 01:07:44,032 INFO sqlalchemy.engine.base.Engine Thread-2132 : ROLLBACK
2020-02-01 01:07:44,034 DEBUG sqlalchemy.engine.base.Engine Thread-2135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:44,035 DEBUG sqlalchemy.engine.base.Engine Thread-2135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:44,036 DEBUG sqlalchemy.engine.base.Engine Thread-2134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:44,036 DEBUG sqlalchemy.engine.base.Engine Thread-2134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:44,038 INFO sqlalchemy.engine.base.Engine Thread-2134 : ROLLBACK
2020-02-01 01:07:44,039 INFO sqlalchemy.engine.base.Engine Thread-2135 : ROLLBACK
2020-02-01 01:07:44,173 INFO sqlalchemy.engine.base.Engine Thread-2136 : BEGIN (implicit)
2020-02-01 01:07:44,174 INFO sqlalchemy.engine.base.Engine Thread-2136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:07:44,174 INFO sqlalchemy.engine.base.Engine Thread-2136 : (1, 1)
2020-02-01 01:07:44,175 DEBUG sqlalchemy.engine.base.Engine Thread-2136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:07:44,175 DEBUG sqlalchemy.engine.base.Engine Thread-2136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:07:44,176 INFO sqlalchemy.engine.base.Engine Thread-2136 : ROLLBACK
2020-02-01 01:07:44,227 INFO sqlalchemy.engine.base.Engine Thread-2137 : BEGIN (implicit)
2020-02-01 01:07:44,228 INFO sqlalchemy.engine.base.Engine Thread-2137 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:07:44,228 INFO sqlalchemy.engine.base.Engine Thread-2137 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:07:44,229 DEBUG sqlalchemy.engine.base.Engine Thread-2137 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:07:44,229 DEBUG sqlalchemy.engine.base.Engine Thread-2137 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:07:44,230 INFO sqlalchemy.engine.base.Engine Thread-2137 : ROLLBACK
2020-02-01 01:07:55,051 INFO sqlalchemy.engine.base.Engine Thread-2139 : BEGIN (implicit)
2020-02-01 01:07:55,052 INFO sqlalchemy.engine.base.Engine Thread-2139 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:07:55,052 INFO sqlalchemy.engine.base.Engine Thread-2139 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-02-01 01:07:55,053 DEBUG sqlalchemy.engine.base.Engine Thread-2139 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:07:55,054 INFO sqlalchemy.engine.base.Engine Thread-2139 : ROLLBACK
2020-02-01 01:08:02,854 INFO sqlalchemy.engine.base.Engine Thread-2140 : BEGIN (implicit)
2020-02-01 01:08:02,855 INFO sqlalchemy.engine.base.Engine Thread-2140 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:08:02,855 INFO sqlalchemy.engine.base.Engine Thread-2140 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:08:02,856 DEBUG sqlalchemy.engine.base.Engine Thread-2140 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:08:02,856 DEBUG sqlalchemy.engine.base.Engine Thread-2140 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:08:02,857 INFO sqlalchemy.engine.base.Engine Thread-2140 : ROLLBACK
2020-02-01 01:08:09,591 INFO sqlalchemy.engine.base.Engine Thread-2141 : BEGIN (implicit)
2020-02-01 01:08:09,592 INFO sqlalchemy.engine.base.Engine Thread-2141 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:08:09,592 INFO sqlalchemy.engine.base.Engine Thread-2141 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 01:08:09,593 DEBUG sqlalchemy.engine.base.Engine Thread-2141 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:08:09,594 DEBUG sqlalchemy.engine.base.Engine Thread-2141 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:08:09,594 INFO sqlalchemy.engine.base.Engine Thread-2141 : ROLLBACK
2020-02-01 01:08:13,595 INFO sqlalchemy.engine.base.Engine Thread-2142 : BEGIN (implicit)
2020-02-01 01:08:13,596 INFO sqlalchemy.engine.base.Engine Thread-2142 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:08:13,596 INFO sqlalchemy.engine.base.Engine Thread-2142 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 01:08:13,597 DEBUG sqlalchemy.engine.base.Engine Thread-2142 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:08:13,597 DEBUG sqlalchemy.engine.base.Engine Thread-2142 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 01:08:13,597 DEBUG sqlalchemy.engine.base.Engine Thread-2142 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:08:13,598 INFO sqlalchemy.engine.base.Engine Thread-2142 : ROLLBACK
2020-02-01 01:08:22,381 INFO sqlalchemy.engine.base.Engine Thread-2143 : BEGIN (implicit)
2020-02-01 01:08:22,383 INFO sqlalchemy.engine.base.Engine Thread-2143 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:08:22,383 INFO sqlalchemy.engine.base.Engine Thread-2143 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:08:22,384 DEBUG sqlalchemy.engine.base.Engine Thread-2143 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:08:22,384 DEBUG sqlalchemy.engine.base.Engine Thread-2143 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:08:22,385 INFO sqlalchemy.engine.base.Engine Thread-2143 : ROLLBACK
2020-02-01 01:13:02,454 INFO sqlalchemy.engine.base.Engine Thread-2144 : BEGIN (implicit)
2020-02-01 01:13:02,456 INFO sqlalchemy.engine.base.Engine Thread-2144 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:13:02,457 INFO sqlalchemy.engine.base.Engine Thread-2144 : ()
2020-02-01 01:13:02,459 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:13:02,459 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:13:02,459 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:13:02,461 INFO sqlalchemy.engine.base.Engine Thread-2144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:02,462 INFO sqlalchemy.engine.base.Engine Thread-2144 : (1, 1)
2020-02-01 01:13:02,462 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:02,462 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:02,467 INFO sqlalchemy.engine.base.Engine Thread-2144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:13:02,467 INFO sqlalchemy.engine.base.Engine Thread-2144 : ('philip', 1, 1)
2020-02-01 01:13:02,467 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:02,468 DEBUG sqlalchemy.engine.base.Engine Thread-2144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:02,470 INFO sqlalchemy.engine.base.Engine Thread-2144 : ROLLBACK
2020-02-01 01:13:03,257 INFO sqlalchemy.engine.base.Engine Thread-2153 : BEGIN (implicit)
2020-02-01 01:13:03,258 INFO sqlalchemy.engine.base.Engine Thread-2154 : BEGIN (implicit)
2020-02-01 01:13:03,259 INFO sqlalchemy.engine.base.Engine Thread-2153 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:03,260 INFO sqlalchemy.engine.base.Engine Thread-2154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:03,260 INFO sqlalchemy.engine.base.Engine Thread-2153 : (1, 1)
2020-02-01 01:13:03,260 INFO sqlalchemy.engine.base.Engine Thread-2154 : (1, 1)
2020-02-01 01:13:03,262 INFO sqlalchemy.engine.base.Engine Thread-2152 : BEGIN (implicit)
2020-02-01 01:13:03,264 INFO sqlalchemy.engine.base.Engine Thread-2152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:03,264 INFO sqlalchemy.engine.base.Engine Thread-2152 : (1, 1)
2020-02-01 01:13:03,265 DEBUG sqlalchemy.engine.base.Engine Thread-2154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:03,265 DEBUG sqlalchemy.engine.base.Engine Thread-2154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:03,266 INFO sqlalchemy.engine.base.Engine Thread-2154 : ROLLBACK
2020-02-01 01:13:03,268 INFO sqlalchemy.engine.base.Engine Thread-2155 : BEGIN (implicit)
2020-02-01 01:13:03,269 INFO sqlalchemy.engine.base.Engine Thread-2155 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:03,269 INFO sqlalchemy.engine.base.Engine Thread-2155 : (1, 1)
2020-02-01 01:13:03,270 DEBUG sqlalchemy.engine.base.Engine Thread-2153 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:03,270 DEBUG sqlalchemy.engine.base.Engine Thread-2153 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:03,271 INFO sqlalchemy.engine.base.Engine Thread-2153 : ROLLBACK
2020-02-01 01:13:03,271 DEBUG sqlalchemy.engine.base.Engine Thread-2152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:03,272 DEBUG sqlalchemy.engine.base.Engine Thread-2152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:03,273 INFO sqlalchemy.engine.base.Engine Thread-2152 : ROLLBACK
2020-02-01 01:13:03,273 DEBUG sqlalchemy.engine.base.Engine Thread-2155 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:03,273 DEBUG sqlalchemy.engine.base.Engine Thread-2155 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:03,274 INFO sqlalchemy.engine.base.Engine Thread-2155 : ROLLBACK
2020-02-01 01:13:03,356 INFO sqlalchemy.engine.base.Engine Thread-2156 : BEGIN (implicit)
2020-02-01 01:13:03,357 INFO sqlalchemy.engine.base.Engine Thread-2156 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:03,357 INFO sqlalchemy.engine.base.Engine Thread-2156 : (1, 1)
2020-02-01 01:13:03,358 DEBUG sqlalchemy.engine.base.Engine Thread-2156 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:03,358 DEBUG sqlalchemy.engine.base.Engine Thread-2156 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:03,359 INFO sqlalchemy.engine.base.Engine Thread-2156 : ROLLBACK
2020-02-01 01:13:03,388 INFO sqlalchemy.engine.base.Engine Thread-2157 : BEGIN (implicit)
2020-02-01 01:13:03,389 INFO sqlalchemy.engine.base.Engine Thread-2157 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:13:03,389 INFO sqlalchemy.engine.base.Engine Thread-2157 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:13:03,390 DEBUG sqlalchemy.engine.base.Engine Thread-2157 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:13:03,390 DEBUG sqlalchemy.engine.base.Engine Thread-2157 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:13:03,391 INFO sqlalchemy.engine.base.Engine Thread-2157 : ROLLBACK
2020-02-01 01:13:09,239 INFO sqlalchemy.engine.base.Engine Thread-2159 : BEGIN (implicit)
2020-02-01 01:13:09,240 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-02-01 01:13:09,240 INFO sqlalchemy.engine.base.Engine Thread-2159 : ('0', 1)
2020-02-01 01:13:09,241 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-02-01 01:13:09,246 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:13:09,246 INFO sqlalchemy.engine.base.Engine Thread-2159 : ()
2020-02-01 01:13:09,247 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:13:09,247 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:13:09,247 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:13:09,248 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:13:09,249 INFO sqlalchemy.engine.base.Engine Thread-2159 : (97,)
2020-02-01 01:13:09,249 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:13:09,249 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-02-01 01:13:09,249 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-02-01 01:13:09,251 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:13:09,251 INFO sqlalchemy.engine.base.Engine Thread-2159 : (105,)
2020-02-01 01:13:09,252 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:13:09,252 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:13:09,252 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:13:09,255 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-02-01 01:13:09,256 INFO sqlalchemy.engine.base.Engine Thread-2159 : (1, 1)
2020-02-01 01:13:09,256 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:13:09,257 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:13:09,259 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:09,259 INFO sqlalchemy.engine.base.Engine Thread-2159 : (1, 1)
2020-02-01 01:13:09,259 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:09,260 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:09,264 INFO sqlalchemy.engine.base.Engine Thread-2159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:13:09,264 INFO sqlalchemy.engine.base.Engine Thread-2159 : ('philip', 1, 1)
2020-02-01 01:13:09,265 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:09,265 DEBUG sqlalchemy.engine.base.Engine Thread-2159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:09,268 INFO sqlalchemy.engine.base.Engine Thread-2159 : ROLLBACK
2020-02-01 01:13:09,907 INFO sqlalchemy.engine.base.Engine Thread-2167 : BEGIN (implicit)
2020-02-01 01:13:09,908 INFO sqlalchemy.engine.base.Engine Thread-2167 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:09,908 INFO sqlalchemy.engine.base.Engine Thread-2167 : (1, 1)
2020-02-01 01:13:09,911 INFO sqlalchemy.engine.base.Engine Thread-2168 : BEGIN (implicit)
2020-02-01 01:13:09,912 INFO sqlalchemy.engine.base.Engine Thread-2168 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:09,913 INFO sqlalchemy.engine.base.Engine Thread-2168 : (1, 1)
2020-02-01 01:13:09,911 DEBUG sqlalchemy.engine.base.Engine Thread-2167 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:09,913 DEBUG sqlalchemy.engine.base.Engine Thread-2167 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:09,914 INFO sqlalchemy.engine.base.Engine Thread-2167 : ROLLBACK
2020-02-01 01:13:09,914 DEBUG sqlalchemy.engine.base.Engine Thread-2168 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:09,915 DEBUG sqlalchemy.engine.base.Engine Thread-2168 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:09,917 INFO sqlalchemy.engine.base.Engine Thread-2169 : BEGIN (implicit)
2020-02-01 01:13:09,918 INFO sqlalchemy.engine.base.Engine Thread-2168 : ROLLBACK
2020-02-01 01:13:09,919 INFO sqlalchemy.engine.base.Engine Thread-2169 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:09,923 INFO sqlalchemy.engine.base.Engine Thread-2170 : BEGIN (implicit)
2020-02-01 01:13:09,924 INFO sqlalchemy.engine.base.Engine Thread-2169 : (1, 1)
2020-02-01 01:13:09,925 INFO sqlalchemy.engine.base.Engine Thread-2170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:09,925 INFO sqlalchemy.engine.base.Engine Thread-2170 : (1, 1)
2020-02-01 01:13:09,926 DEBUG sqlalchemy.engine.base.Engine Thread-2170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:09,928 DEBUG sqlalchemy.engine.base.Engine Thread-2169 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:09,928 DEBUG sqlalchemy.engine.base.Engine Thread-2170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:09,929 DEBUG sqlalchemy.engine.base.Engine Thread-2169 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:09,930 INFO sqlalchemy.engine.base.Engine Thread-2169 : ROLLBACK
2020-02-01 01:13:09,931 INFO sqlalchemy.engine.base.Engine Thread-2170 : ROLLBACK
2020-02-01 01:13:10,027 INFO sqlalchemy.engine.base.Engine Thread-2171 : BEGIN (implicit)
2020-02-01 01:13:10,028 INFO sqlalchemy.engine.base.Engine Thread-2171 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:10,029 INFO sqlalchemy.engine.base.Engine Thread-2171 : (1, 1)
2020-02-01 01:13:10,029 DEBUG sqlalchemy.engine.base.Engine Thread-2171 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:10,029 DEBUG sqlalchemy.engine.base.Engine Thread-2171 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:10,030 INFO sqlalchemy.engine.base.Engine Thread-2171 : ROLLBACK
2020-02-01 01:13:15,056 INFO sqlalchemy.engine.base.Engine Thread-2172 : BEGIN (implicit)
2020-02-01 01:13:15,057 INFO sqlalchemy.engine.base.Engine Thread-2172 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-02-01 01:13:15,057 INFO sqlalchemy.engine.base.Engine Thread-2172 : ('0', 1)
2020-02-01 01:13:15,058 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-02-01 01:13:15,063 INFO sqlalchemy.engine.base.Engine Thread-2172 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:13:15,063 INFO sqlalchemy.engine.base.Engine Thread-2172 : ()
2020-02-01 01:13:15,064 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:13:15,064 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:13:15,064 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:13:15,066 INFO sqlalchemy.engine.base.Engine Thread-2172 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:13:15,066 INFO sqlalchemy.engine.base.Engine Thread-2172 : (97,)
2020-02-01 01:13:15,066 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:13:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-02-01 01:13:15,067 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-02-01 01:13:15,068 INFO sqlalchemy.engine.base.Engine Thread-2172 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:13:15,068 INFO sqlalchemy.engine.base.Engine Thread-2172 : (105,)
2020-02-01 01:13:15,068 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:13:15,069 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:13:15,069 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:13:15,072 INFO sqlalchemy.engine.base.Engine Thread-2172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:15,072 INFO sqlalchemy.engine.base.Engine Thread-2172 : (1, 1)
2020-02-01 01:13:15,072 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,072 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,076 INFO sqlalchemy.engine.base.Engine Thread-2172 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:13:15,076 INFO sqlalchemy.engine.base.Engine Thread-2172 : ('philip', 1, 1)
2020-02-01 01:13:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,077 DEBUG sqlalchemy.engine.base.Engine Thread-2172 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,081 INFO sqlalchemy.engine.base.Engine Thread-2172 : ROLLBACK
2020-02-01 01:13:15,701 INFO sqlalchemy.engine.base.Engine Thread-2180 : BEGIN (implicit)
2020-02-01 01:13:15,702 INFO sqlalchemy.engine.base.Engine Thread-2180 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:15,702 INFO sqlalchemy.engine.base.Engine Thread-2180 : (1, 1)
2020-02-01 01:13:15,705 INFO sqlalchemy.engine.base.Engine Thread-2181 : BEGIN (implicit)
2020-02-01 01:13:15,706 DEBUG sqlalchemy.engine.base.Engine Thread-2180 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,707 INFO sqlalchemy.engine.base.Engine Thread-2181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:15,711 INFO sqlalchemy.engine.base.Engine Thread-2181 : (1, 1)
2020-02-01 01:13:15,710 DEBUG sqlalchemy.engine.base.Engine Thread-2180 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,710 INFO sqlalchemy.engine.base.Engine Thread-2182 : BEGIN (implicit)
2020-02-01 01:13:15,712 INFO sqlalchemy.engine.base.Engine Thread-2180 : ROLLBACK
2020-02-01 01:13:15,713 INFO sqlalchemy.engine.base.Engine Thread-2182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:15,718 INFO sqlalchemy.engine.base.Engine Thread-2182 : (1, 1)
2020-02-01 01:13:15,718 DEBUG sqlalchemy.engine.base.Engine Thread-2182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,714 DEBUG sqlalchemy.engine.base.Engine Thread-2181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,719 DEBUG sqlalchemy.engine.base.Engine Thread-2181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,719 DEBUG sqlalchemy.engine.base.Engine Thread-2182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,720 INFO sqlalchemy.engine.base.Engine Thread-2181 : ROLLBACK
2020-02-01 01:13:15,717 INFO sqlalchemy.engine.base.Engine Thread-2183 : BEGIN (implicit)
2020-02-01 01:13:15,721 INFO sqlalchemy.engine.base.Engine Thread-2183 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:15,721 INFO sqlalchemy.engine.base.Engine Thread-2183 : (1, 1)
2020-02-01 01:13:15,722 INFO sqlalchemy.engine.base.Engine Thread-2182 : ROLLBACK
2020-02-01 01:13:15,724 DEBUG sqlalchemy.engine.base.Engine Thread-2183 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,724 DEBUG sqlalchemy.engine.base.Engine Thread-2183 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,725 INFO sqlalchemy.engine.base.Engine Thread-2183 : ROLLBACK
2020-02-01 01:13:15,821 INFO sqlalchemy.engine.base.Engine Thread-2184 : BEGIN (implicit)
2020-02-01 01:13:15,822 INFO sqlalchemy.engine.base.Engine Thread-2184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:15,822 INFO sqlalchemy.engine.base.Engine Thread-2184 : (1, 1)
2020-02-01 01:13:15,823 DEBUG sqlalchemy.engine.base.Engine Thread-2184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:15,823 DEBUG sqlalchemy.engine.base.Engine Thread-2184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:15,824 INFO sqlalchemy.engine.base.Engine Thread-2184 : ROLLBACK
2020-02-01 01:13:20,939 INFO sqlalchemy.engine.base.Engine Thread-2185 : BEGIN (implicit)
2020-02-01 01:13:20,941 INFO sqlalchemy.engine.base.Engine Thread-2185 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:13:20,941 INFO sqlalchemy.engine.base.Engine Thread-2185 : ()
2020-02-01 01:13:20,942 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:13:20,943 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:13:20,943 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:13:20,945 INFO sqlalchemy.engine.base.Engine Thread-2185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:20,945 INFO sqlalchemy.engine.base.Engine Thread-2185 : (1, 1)
2020-02-01 01:13:20,946 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:20,946 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:20,950 INFO sqlalchemy.engine.base.Engine Thread-2185 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:13:20,950 INFO sqlalchemy.engine.base.Engine Thread-2185 : ('philip', 1, 1)
2020-02-01 01:13:20,951 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:20,951 DEBUG sqlalchemy.engine.base.Engine Thread-2185 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:20,952 INFO sqlalchemy.engine.base.Engine Thread-2185 : ROLLBACK
2020-02-01 01:13:21,640 INFO sqlalchemy.engine.base.Engine Thread-2193 : BEGIN (implicit)
2020-02-01 01:13:21,642 INFO sqlalchemy.engine.base.Engine Thread-2194 : BEGIN (implicit)
2020-02-01 01:13:21,645 INFO sqlalchemy.engine.base.Engine Thread-2195 : BEGIN (implicit)
2020-02-01 01:13:21,646 INFO sqlalchemy.engine.base.Engine Thread-2193 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:21,649 INFO sqlalchemy.engine.base.Engine Thread-2196 : BEGIN (implicit)
2020-02-01 01:13:21,650 INFO sqlalchemy.engine.base.Engine Thread-2194 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:21,651 INFO sqlalchemy.engine.base.Engine Thread-2195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:21,651 INFO sqlalchemy.engine.base.Engine Thread-2193 : (1, 1)
2020-02-01 01:13:21,652 INFO sqlalchemy.engine.base.Engine Thread-2196 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:21,653 INFO sqlalchemy.engine.base.Engine Thread-2196 : (1, 1)
2020-02-01 01:13:21,653 INFO sqlalchemy.engine.base.Engine Thread-2195 : (1, 1)
2020-02-01 01:13:21,652 INFO sqlalchemy.engine.base.Engine Thread-2194 : (1, 1)
2020-02-01 01:13:21,653 DEBUG sqlalchemy.engine.base.Engine Thread-2193 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:21,654 DEBUG sqlalchemy.engine.base.Engine Thread-2195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:21,655 DEBUG sqlalchemy.engine.base.Engine Thread-2195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:21,655 DEBUG sqlalchemy.engine.base.Engine Thread-2193 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:21,655 DEBUG sqlalchemy.engine.base.Engine Thread-2194 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:21,658 DEBUG sqlalchemy.engine.base.Engine Thread-2194 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:21,658 INFO sqlalchemy.engine.base.Engine Thread-2194 : ROLLBACK
2020-02-01 01:13:21,657 INFO sqlalchemy.engine.base.Engine Thread-2193 : ROLLBACK
2020-02-01 01:13:21,656 INFO sqlalchemy.engine.base.Engine Thread-2195 : ROLLBACK
2020-02-01 01:13:21,654 DEBUG sqlalchemy.engine.base.Engine Thread-2196 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:21,661 DEBUG sqlalchemy.engine.base.Engine Thread-2196 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:21,662 INFO sqlalchemy.engine.base.Engine Thread-2196 : ROLLBACK
2020-02-01 01:13:21,755 INFO sqlalchemy.engine.base.Engine Thread-2197 : BEGIN (implicit)
2020-02-01 01:13:21,755 INFO sqlalchemy.engine.base.Engine Thread-2197 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:13:21,756 INFO sqlalchemy.engine.base.Engine Thread-2197 : (1, 1)
2020-02-01 01:13:21,756 DEBUG sqlalchemy.engine.base.Engine Thread-2197 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:13:21,756 DEBUG sqlalchemy.engine.base.Engine Thread-2197 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:13:21,757 INFO sqlalchemy.engine.base.Engine Thread-2197 : ROLLBACK
2020-02-01 01:13:21,790 INFO sqlalchemy.engine.base.Engine Thread-2198 : BEGIN (implicit)
2020-02-01 01:13:21,791 INFO sqlalchemy.engine.base.Engine Thread-2198 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:13:21,791 INFO sqlalchemy.engine.base.Engine Thread-2198 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:13:21,792 DEBUG sqlalchemy.engine.base.Engine Thread-2198 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:13:21,793 DEBUG sqlalchemy.engine.base.Engine Thread-2198 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:13:21,793 INFO sqlalchemy.engine.base.Engine Thread-2198 : ROLLBACK
2020-02-01 01:16:54,061 INFO sqlalchemy.engine.base.Engine Thread-2199 : BEGIN (implicit)
2020-02-01 01:16:54,064 INFO sqlalchemy.engine.base.Engine Thread-2199 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:16:54,064 INFO sqlalchemy.engine.base.Engine Thread-2199 : ()
2020-02-01 01:16:54,072 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:16:54,073 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:16:54,073 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:16:54,075 INFO sqlalchemy.engine.base.Engine Thread-2199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:16:54,075 INFO sqlalchemy.engine.base.Engine Thread-2199 : (1, 1)
2020-02-01 01:16:54,076 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,076 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,081 INFO sqlalchemy.engine.base.Engine Thread-2199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:16:54,081 INFO sqlalchemy.engine.base.Engine Thread-2199 : ('philip', 1, 1)
2020-02-01 01:16:54,082 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,082 DEBUG sqlalchemy.engine.base.Engine Thread-2199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,084 INFO sqlalchemy.engine.base.Engine Thread-2199 : ROLLBACK
2020-02-01 01:16:54,829 INFO sqlalchemy.engine.base.Engine Thread-2207 : BEGIN (implicit)
2020-02-01 01:16:54,831 INFO sqlalchemy.engine.base.Engine Thread-2207 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:16:54,831 INFO sqlalchemy.engine.base.Engine Thread-2207 : (1, 1)
2020-02-01 01:16:54,832 DEBUG sqlalchemy.engine.base.Engine Thread-2207 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,832 DEBUG sqlalchemy.engine.base.Engine Thread-2207 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,833 INFO sqlalchemy.engine.base.Engine Thread-2207 : ROLLBACK
2020-02-01 01:16:54,841 INFO sqlalchemy.engine.base.Engine Thread-2208 : BEGIN (implicit)
2020-02-01 01:16:54,845 INFO sqlalchemy.engine.base.Engine Thread-2208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:16:54,846 INFO sqlalchemy.engine.base.Engine Thread-2208 : (1, 1)
2020-02-01 01:16:54,847 INFO sqlalchemy.engine.base.Engine Thread-2209 : BEGIN (implicit)
2020-02-01 01:16:54,848 INFO sqlalchemy.engine.base.Engine Thread-2209 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:16:54,848 INFO sqlalchemy.engine.base.Engine Thread-2209 : (1, 1)
2020-02-01 01:16:54,850 INFO sqlalchemy.engine.base.Engine Thread-2210 : BEGIN (implicit)
2020-02-01 01:16:54,851 DEBUG sqlalchemy.engine.base.Engine Thread-2209 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,852 INFO sqlalchemy.engine.base.Engine Thread-2210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:16:54,852 DEBUG sqlalchemy.engine.base.Engine Thread-2208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,853 DEBUG sqlalchemy.engine.base.Engine Thread-2208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,853 INFO sqlalchemy.engine.base.Engine Thread-2210 : (1, 1)
2020-02-01 01:16:54,853 DEBUG sqlalchemy.engine.base.Engine Thread-2209 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,855 INFO sqlalchemy.engine.base.Engine Thread-2209 : ROLLBACK
2020-02-01 01:16:54,855 DEBUG sqlalchemy.engine.base.Engine Thread-2210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,857 DEBUG sqlalchemy.engine.base.Engine Thread-2210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,858 INFO sqlalchemy.engine.base.Engine Thread-2210 : ROLLBACK
2020-02-01 01:16:54,856 INFO sqlalchemy.engine.base.Engine Thread-2208 : ROLLBACK
2020-02-01 01:16:54,983 INFO sqlalchemy.engine.base.Engine Thread-2211 : BEGIN (implicit)
2020-02-01 01:16:54,985 INFO sqlalchemy.engine.base.Engine Thread-2211 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:16:54,985 INFO sqlalchemy.engine.base.Engine Thread-2211 : (1, 1)
2020-02-01 01:16:54,985 DEBUG sqlalchemy.engine.base.Engine Thread-2211 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:16:54,986 DEBUG sqlalchemy.engine.base.Engine Thread-2211 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:16:54,987 INFO sqlalchemy.engine.base.Engine Thread-2211 : ROLLBACK
2020-02-01 01:16:55,041 INFO sqlalchemy.engine.base.Engine Thread-2212 : BEGIN (implicit)
2020-02-01 01:16:55,042 INFO sqlalchemy.engine.base.Engine Thread-2212 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:16:55,042 INFO sqlalchemy.engine.base.Engine Thread-2212 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:16:55,043 DEBUG sqlalchemy.engine.base.Engine Thread-2212 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:16:55,043 DEBUG sqlalchemy.engine.base.Engine Thread-2212 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:16:55,044 INFO sqlalchemy.engine.base.Engine Thread-2212 : ROLLBACK
2020-02-01 01:17:00,221 INFO sqlalchemy.engine.base.Engine Thread-2214 : BEGIN (implicit)
2020-02-01 01:17:00,222 INFO sqlalchemy.engine.base.Engine Thread-2214 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:17:00,223 INFO sqlalchemy.engine.base.Engine Thread-2214 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 01:17:00,224 DEBUG sqlalchemy.engine.base.Engine Thread-2214 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:17:00,224 DEBUG sqlalchemy.engine.base.Engine Thread-2214 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:17:00,225 INFO sqlalchemy.engine.base.Engine Thread-2214 : ROLLBACK
2020-02-01 01:17:02,014 INFO sqlalchemy.engine.base.Engine Thread-2215 : BEGIN (implicit)
2020-02-01 01:17:02,015 INFO sqlalchemy.engine.base.Engine Thread-2215 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:17:02,016 INFO sqlalchemy.engine.base.Engine Thread-2215 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 01:17:02,017 DEBUG sqlalchemy.engine.base.Engine Thread-2215 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:17:02,017 DEBUG sqlalchemy.engine.base.Engine Thread-2215 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 01:17:02,017 DEBUG sqlalchemy.engine.base.Engine Thread-2215 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:17:02,018 INFO sqlalchemy.engine.base.Engine Thread-2215 : ROLLBACK
2020-02-01 01:17:08,520 INFO sqlalchemy.engine.base.Engine Thread-2216 : BEGIN (implicit)
2020-02-01 01:17:08,521 INFO sqlalchemy.engine.base.Engine Thread-2216 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:17:08,521 INFO sqlalchemy.engine.base.Engine Thread-2216 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-02-01 01:17:08,522 DEBUG sqlalchemy.engine.base.Engine Thread-2216 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:17:08,523 DEBUG sqlalchemy.engine.base.Engine Thread-2216 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:17:08,523 INFO sqlalchemy.engine.base.Engine Thread-2216 : ROLLBACK
2020-02-01 01:18:46,709 INFO sqlalchemy.engine.base.Engine Thread-2217 : BEGIN (implicit)
2020-02-01 01:18:46,710 INFO sqlalchemy.engine.base.Engine Thread-2217 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:46,711 INFO sqlalchemy.engine.base.Engine Thread-2217 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-02-01 01:18:46,713 DEBUG sqlalchemy.engine.base.Engine Thread-2217 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:46,713 DEBUG sqlalchemy.engine.base.Engine Thread-2217 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 01:18:46,713 DEBUG sqlalchemy.engine.base.Engine Thread-2217 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:18:46,714 INFO sqlalchemy.engine.base.Engine Thread-2217 : ROLLBACK
2020-02-01 01:18:46,872 INFO sqlalchemy.engine.base.Engine Thread-2218 : BEGIN (implicit)
2020-02-01 01:18:46,873 INFO sqlalchemy.engine.base.Engine Thread-2218 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:46,874 INFO sqlalchemy.engine.base.Engine Thread-2218 : ('LightBlue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-02-01 01:18:46,875 DEBUG sqlalchemy.engine.base.Engine Thread-2218 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:46,875 DEBUG sqlalchemy.engine.base.Engine Thread-2218 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:18:46,875 DEBUG sqlalchemy.engine.base.Engine Thread-2218 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:18:46,876 INFO sqlalchemy.engine.base.Engine Thread-2218 : ROLLBACK
2020-02-01 01:18:47,027 INFO sqlalchemy.engine.base.Engine Thread-2219 : BEGIN (implicit)
2020-02-01 01:18:47,029 INFO sqlalchemy.engine.base.Engine Thread-2219 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:47,029 INFO sqlalchemy.engine.base.Engine Thread-2219 : ('LightBlue', 'black', datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-02-01 01:18:47,030 DEBUG sqlalchemy.engine.base.Engine Thread-2219 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:47,031 INFO sqlalchemy.engine.base.Engine Thread-2219 : ROLLBACK
2020-02-01 01:18:47,186 INFO sqlalchemy.engine.base.Engine Thread-2220 : BEGIN (implicit)
2020-02-01 01:18:47,188 INFO sqlalchemy.engine.base.Engine Thread-2220 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:47,188 INFO sqlalchemy.engine.base.Engine Thread-2220 : ('LightBlue', 'black', datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0), datetime.datetime(2020, 6, 29, 0, 0), datetime.datetime(2020, 8, 10, 0, 0))
2020-02-01 01:18:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2220 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:47,189 DEBUG sqlalchemy.engine.base.Engine Thread-2220 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-01 01:18:47,190 INFO sqlalchemy.engine.base.Engine Thread-2220 : ROLLBACK
2020-02-01 01:18:47,339 INFO sqlalchemy.engine.base.Engine Thread-2221 : BEGIN (implicit)
2020-02-01 01:18:47,340 INFO sqlalchemy.engine.base.Engine Thread-2221 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:47,340 INFO sqlalchemy.engine.base.Engine Thread-2221 : ('LightBlue', 'black', datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0), datetime.datetime(2020, 7, 27, 0, 0), datetime.datetime(2020, 9, 7, 0, 0))
2020-02-01 01:18:47,341 DEBUG sqlalchemy.engine.base.Engine Thread-2221 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:47,342 INFO sqlalchemy.engine.base.Engine Thread-2221 : ROLLBACK
2020-02-01 01:18:47,785 INFO sqlalchemy.engine.base.Engine Thread-2222 : BEGIN (implicit)
2020-02-01 01:18:47,786 INFO sqlalchemy.engine.base.Engine Thread-2222 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:47,786 INFO sqlalchemy.engine.base.Engine Thread-2222 : ('LightBlue', 'black', datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0), datetime.datetime(2020, 8, 31, 0, 0), datetime.datetime(2020, 10, 12, 0, 0))
2020-02-01 01:18:47,787 DEBUG sqlalchemy.engine.base.Engine Thread-2222 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:47,788 INFO sqlalchemy.engine.base.Engine Thread-2222 : ROLLBACK
2020-02-01 01:18:48,246 INFO sqlalchemy.engine.base.Engine Thread-2223 : BEGIN (implicit)
2020-02-01 01:18:48,247 INFO sqlalchemy.engine.base.Engine Thread-2223 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:48,247 INFO sqlalchemy.engine.base.Engine Thread-2223 : ('LightBlue', 'black', datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0), datetime.datetime(2020, 9, 28, 0, 0), datetime.datetime(2020, 11, 9, 0, 0))
2020-02-01 01:18:48,248 DEBUG sqlalchemy.engine.base.Engine Thread-2223 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:48,249 INFO sqlalchemy.engine.base.Engine Thread-2223 : ROLLBACK
2020-02-01 01:18:48,817 INFO sqlalchemy.engine.base.Engine Thread-2224 : BEGIN (implicit)
2020-02-01 01:18:48,818 INFO sqlalchemy.engine.base.Engine Thread-2224 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:48,818 INFO sqlalchemy.engine.base.Engine Thread-2224 : ('LightBlue', 'black', datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0), datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0))
2020-02-01 01:18:48,819 DEBUG sqlalchemy.engine.base.Engine Thread-2224 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:48,819 INFO sqlalchemy.engine.base.Engine Thread-2224 : ROLLBACK
2020-02-01 01:18:49,297 INFO sqlalchemy.engine.base.Engine Thread-2225 : BEGIN (implicit)
2020-02-01 01:18:49,299 INFO sqlalchemy.engine.base.Engine Thread-2225 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:18:49,299 INFO sqlalchemy.engine.base.Engine Thread-2225 : ('LightBlue', 'black', datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0))
2020-02-01 01:18:49,300 DEBUG sqlalchemy.engine.base.Engine Thread-2225 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:18:49,300 DEBUG sqlalchemy.engine.base.Engine Thread-2225 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-02-01 01:18:49,300 DEBUG sqlalchemy.engine.base.Engine Thread-2225 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-02-01 01:18:49,300 DEBUG sqlalchemy.engine.base.Engine Thread-2225 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:18:49,301 INFO sqlalchemy.engine.base.Engine Thread-2225 : ROLLBACK
2020-02-01 01:19:41,959 INFO sqlalchemy.engine.base.Engine Thread-2226 : BEGIN (implicit)
2020-02-01 01:19:41,961 INFO sqlalchemy.engine.base.Engine Thread-2226 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:19:41,961 INFO sqlalchemy.engine.base.Engine Thread-2226 : ('LightBlue', 'black', datetime.datetime(2021, 11, 29, 0, 0), datetime.datetime(2022, 1, 10, 0, 0), datetime.datetime(2021, 11, 29, 0, 0), datetime.datetime(2022, 1, 10, 0, 0), datetime.datetime(2021, 11, 29, 0, 0), datetime.datetime(2022, 1, 10, 0, 0))
2020-02-01 01:19:41,962 DEBUG sqlalchemy.engine.base.Engine Thread-2226 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:19:41,962 INFO sqlalchemy.engine.base.Engine Thread-2226 : ROLLBACK
2020-02-01 01:19:42,752 INFO sqlalchemy.engine.base.Engine Thread-2227 : BEGIN (implicit)
2020-02-01 01:19:42,753 INFO sqlalchemy.engine.base.Engine Thread-2227 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:19:42,753 INFO sqlalchemy.engine.base.Engine Thread-2227 : ('LightBlue', 'black', datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0), datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0))
2020-02-01 01:19:42,755 DEBUG sqlalchemy.engine.base.Engine Thread-2227 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:19:42,755 DEBUG sqlalchemy.engine.base.Engine Thread-2227 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-02-01 01:19:42,755 DEBUG sqlalchemy.engine.base.Engine Thread-2227 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-02-01 01:19:42,755 DEBUG sqlalchemy.engine.base.Engine Thread-2227 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 01:19:42,756 INFO sqlalchemy.engine.base.Engine Thread-2227 : ROLLBACK
2020-02-01 01:20:34,481 INFO sqlalchemy.engine.base.Engine Thread-2228 : BEGIN (implicit)
2020-02-01 01:20:34,482 INFO sqlalchemy.engine.base.Engine Thread-2228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:34,482 INFO sqlalchemy.engine.base.Engine Thread-2228 : (1, 1)
2020-02-01 01:20:34,483 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:34,484 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:34,486 INFO sqlalchemy.engine.base.Engine Thread-2228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:20:34,486 INFO sqlalchemy.engine.base.Engine Thread-2228 : ('philip', 1, 1)
2020-02-01 01:20:34,487 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:34,487 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:34,496 INFO sqlalchemy.engine.base.Engine Thread-2228 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 01:20:34,497 INFO sqlalchemy.engine.base.Engine Thread-2228 : ()
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:34,498 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:20:34,499 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:20:34,499 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:34,503 INFO sqlalchemy.engine.base.Engine Thread-2228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:20:34,504 INFO sqlalchemy.engine.base.Engine Thread-2228 : ('philip', 1, 1)
2020-02-01 01:20:34,504 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:34,504 DEBUG sqlalchemy.engine.base.Engine Thread-2228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:34,506 INFO sqlalchemy.engine.base.Engine Thread-2228 : ROLLBACK
2020-02-01 01:20:35,185 INFO sqlalchemy.engine.base.Engine Thread-2236 : BEGIN (implicit)
2020-02-01 01:20:35,187 INFO sqlalchemy.engine.base.Engine Thread-2236 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:35,191 INFO sqlalchemy.engine.base.Engine Thread-2236 : (1, 1)
2020-02-01 01:20:35,193 INFO sqlalchemy.engine.base.Engine Thread-2237 : BEGIN (implicit)
2020-02-01 01:20:35,194 INFO sqlalchemy.engine.base.Engine Thread-2237 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:35,195 DEBUG sqlalchemy.engine.base.Engine Thread-2236 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:35,195 INFO sqlalchemy.engine.base.Engine Thread-2237 : (1, 1)
2020-02-01 01:20:35,197 INFO sqlalchemy.engine.base.Engine Thread-2238 : BEGIN (implicit)
2020-02-01 01:20:35,198 INFO sqlalchemy.engine.base.Engine Thread-2238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:35,198 INFO sqlalchemy.engine.base.Engine Thread-2238 : (1, 1)
2020-02-01 01:20:35,197 DEBUG sqlalchemy.engine.base.Engine Thread-2236 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:35,199 DEBUG sqlalchemy.engine.base.Engine Thread-2237 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:35,200 INFO sqlalchemy.engine.base.Engine Thread-2236 : ROLLBACK
2020-02-01 01:20:35,200 DEBUG sqlalchemy.engine.base.Engine Thread-2238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:35,201 DEBUG sqlalchemy.engine.base.Engine Thread-2237 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:35,205 INFO sqlalchemy.engine.base.Engine Thread-2237 : ROLLBACK
2020-02-01 01:20:35,203 DEBUG sqlalchemy.engine.base.Engine Thread-2238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:35,202 INFO sqlalchemy.engine.base.Engine Thread-2239 : BEGIN (implicit)
2020-02-01 01:20:35,206 INFO sqlalchemy.engine.base.Engine Thread-2238 : ROLLBACK
2020-02-01 01:20:35,208 INFO sqlalchemy.engine.base.Engine Thread-2239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:35,208 INFO sqlalchemy.engine.base.Engine Thread-2239 : (1, 1)
2020-02-01 01:20:35,209 DEBUG sqlalchemy.engine.base.Engine Thread-2239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:35,209 DEBUG sqlalchemy.engine.base.Engine Thread-2239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:35,210 INFO sqlalchemy.engine.base.Engine Thread-2239 : ROLLBACK
2020-02-01 01:20:35,295 INFO sqlalchemy.engine.base.Engine Thread-2240 : BEGIN (implicit)
2020-02-01 01:20:35,296 INFO sqlalchemy.engine.base.Engine Thread-2240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:35,296 INFO sqlalchemy.engine.base.Engine Thread-2240 : (1, 1)
2020-02-01 01:20:35,297 DEBUG sqlalchemy.engine.base.Engine Thread-2240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:35,298 DEBUG sqlalchemy.engine.base.Engine Thread-2240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:35,299 INFO sqlalchemy.engine.base.Engine Thread-2240 : ROLLBACK
2020-02-01 01:20:46,461 INFO sqlalchemy.engine.base.Engine Thread-2241 : BEGIN (implicit)
2020-02-01 01:20:46,462 INFO sqlalchemy.engine.base.Engine Thread-2241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:20:46,462 INFO sqlalchemy.engine.base.Engine Thread-2241 : (1, 1)
2020-02-01 01:20:46,463 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:46,463 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:46,466 INFO sqlalchemy.engine.base.Engine Thread-2241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:20:46,466 INFO sqlalchemy.engine.base.Engine Thread-2241 : ('philip', 1, 1)
2020-02-01 01:20:46,466 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:46,467 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:46,475 INFO sqlalchemy.engine.base.Engine Thread-2241 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 01:20:46,475 INFO sqlalchemy.engine.base.Engine Thread-2241 : ()
2020-02-01 01:20:46,476 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 01:20:46,476 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:46,476 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:20:46,477 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:46,477 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:46,477 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:46,477 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:20:46,477 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:20:46,477 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:20:46,481 INFO sqlalchemy.engine.base.Engine Thread-2241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:20:46,481 INFO sqlalchemy.engine.base.Engine Thread-2241 : ('philip', 1, 1)
2020-02-01 01:20:46,481 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:20:46,482 DEBUG sqlalchemy.engine.base.Engine Thread-2241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:20:46,484 INFO sqlalchemy.engine.base.Engine Thread-2241 : ROLLBACK
2020-02-01 01:21:08,386 INFO sqlalchemy.engine.base.Engine Thread-2249 : BEGIN (implicit)
2020-02-01 01:21:08,387 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:21:08,387 INFO sqlalchemy.engine.base.Engine Thread-2249 : (1, 1)
2020-02-01 01:21:08,388 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:08,388 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:08,391 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:21:08,391 INFO sqlalchemy.engine.base.Engine Thread-2249 : ('philip', 1, 1)
2020-02-01 01:21:08,392 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:08,393 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:08,394 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 01:21:08,394 INFO sqlalchemy.engine.base.Engine Thread-2249 : ('0', 1)
2020-02-01 01:21:08,395 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 01:21:08,397 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:21:08,397 INFO sqlalchemy.engine.base.Engine Thread-2249 : (82,)
2020-02-01 01:21:08,398 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:08,398 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 01:21:08,398 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 01:21:08,398 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 01:21:08,400 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 01:21:08,400 INFO sqlalchemy.engine.base.Engine Thread-2249 : (1,)
2020-02-01 01:21:08,400 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:08,401 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 01:21:08,401 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 01:21:08,402 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:21:08,402 INFO sqlalchemy.engine.base.Engine Thread-2249 : (105,)
2020-02-01 01:21:08,403 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:08,403 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:21:08,403 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:21:08,405 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:21:08,405 INFO sqlalchemy.engine.base.Engine Thread-2249 : (105,)
2020-02-01 01:21:08,405 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:08,406 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:21:08,406 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:21:08,410 INFO sqlalchemy.engine.base.Engine Thread-2249 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:21:08,410 INFO sqlalchemy.engine.base.Engine Thread-2249 : ('philip', 1, 1)
2020-02-01 01:21:08,410 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:08,411 DEBUG sqlalchemy.engine.base.Engine Thread-2249 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:08,413 INFO sqlalchemy.engine.base.Engine Thread-2249 : ROLLBACK
2020-02-01 01:21:51,161 INFO sqlalchemy.engine.base.Engine Thread-2258 : BEGIN (implicit)
2020-02-01 01:21:51,162 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:21:51,162 INFO sqlalchemy.engine.base.Engine Thread-2258 : (1, 1)
2020-02-01 01:21:51,163 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:51,163 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:51,166 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:21:51,166 INFO sqlalchemy.engine.base.Engine Thread-2258 : ('philip', 1, 1)
2020-02-01 01:21:51,166 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:51,167 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:51,168 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 01:21:51,168 INFO sqlalchemy.engine.base.Engine Thread-2258 : ('0', 1)
2020-02-01 01:21:51,169 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 01:21:51,172 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:21:51,172 INFO sqlalchemy.engine.base.Engine Thread-2258 : (82,)
2020-02-01 01:21:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 01:21:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 01:21:51,173 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 01:21:51,175 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 01:21:51,175 INFO sqlalchemy.engine.base.Engine Thread-2258 : (1,)
2020-02-01 01:21:51,175 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:51,175 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 01:21:51,176 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 01:21:51,177 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:21:51,177 INFO sqlalchemy.engine.base.Engine Thread-2258 : (105,)
2020-02-01 01:21:51,177 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:51,178 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:21:51,178 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:21:51,179 INFO sqlalchemy.engine.base.Engine Thread-2258 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:21:51,179 INFO sqlalchemy.engine.base.Engine Thread-2258 : (105,)
2020-02-01 01:21:51,179 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:21:51,179 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:21:51,179 DEBUG sqlalchemy.engine.base.Engine Thread-2258 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:21:51,181 INFO sqlalchemy.engine.base.Engine Thread-2258 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions, doi_locked, doi_hap) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-02-01 01:21:51,181 INFO sqlalchemy.engine.base.Engine Thread-2258 : ('0', 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 107, 106)
2020-02-01 01:21:51,182 INFO sqlalchemy.engine.base.Engine Thread-2258 : COMMIT
2020-02-01 01:21:51,266 INFO sqlalchemy.engine.base.Engine Thread-2259 : BEGIN (implicit)
2020-02-01 01:21:51,267 INFO sqlalchemy.engine.base.Engine Thread-2259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:21:51,267 INFO sqlalchemy.engine.base.Engine Thread-2259 : (1, 1)
2020-02-01 01:21:51,268 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:51,268 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:51,270 INFO sqlalchemy.engine.base.Engine Thread-2259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:21:51,270 INFO sqlalchemy.engine.base.Engine Thread-2259 : ('philip', 1, 1)
2020-02-01 01:21:51,271 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:51,271 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:51,279 INFO sqlalchemy.engine.base.Engine Thread-2259 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 01:21:51,279 INFO sqlalchemy.engine.base.Engine Thread-2259 : ()
2020-02-01 01:21:51,280 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 01:21:51,280 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:21:51,281 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:21:51,285 INFO sqlalchemy.engine.base.Engine Thread-2259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:21:51,285 INFO sqlalchemy.engine.base.Engine Thread-2259 : ('philip', 1, 1)
2020-02-01 01:21:51,286 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:51,286 DEBUG sqlalchemy.engine.base.Engine Thread-2259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:51,289 INFO sqlalchemy.engine.base.Engine Thread-2259 : ROLLBACK
2020-02-01 01:21:54,782 INFO sqlalchemy.engine.base.Engine Thread-2267 : BEGIN (implicit)
2020-02-01 01:21:54,784 INFO sqlalchemy.engine.base.Engine Thread-2267 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:21:54,784 INFO sqlalchemy.engine.base.Engine Thread-2267 : ()
2020-02-01 01:21:54,785 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:21:54,786 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:21:54,786 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:21:54,788 INFO sqlalchemy.engine.base.Engine Thread-2267 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:21:54,788 INFO sqlalchemy.engine.base.Engine Thread-2267 : (1, 1)
2020-02-01 01:21:54,789 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:54,789 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:54,793 INFO sqlalchemy.engine.base.Engine Thread-2267 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:21:54,793 INFO sqlalchemy.engine.base.Engine Thread-2267 : ('philip', 1, 1)
2020-02-01 01:21:54,793 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:21:54,794 DEBUG sqlalchemy.engine.base.Engine Thread-2267 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:21:54,795 INFO sqlalchemy.engine.base.Engine Thread-2267 : ROLLBACK
2020-02-01 01:21:55,272 INFO sqlalchemy.engine.base.Engine Thread-2275 : BEGIN (implicit)
2020-02-01 01:21:55,276 INFO sqlalchemy.engine.base.Engine Thread-2275 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:21:55,276 INFO sqlalchemy.engine.base.Engine Thread-2275 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:21:55,277 DEBUG sqlalchemy.engine.base.Engine Thread-2275 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:21:55,277 DEBUG sqlalchemy.engine.base.Engine Thread-2275 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-02-01 01:21:55,277 DEBUG sqlalchemy.engine.base.Engine Thread-2275 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'No')
2020-02-01 01:21:55,278 INFO sqlalchemy.engine.base.Engine Thread-2275 : ROLLBACK
2020-02-01 01:22:24,692 INFO sqlalchemy.engine.base.Engine Thread-2276 : BEGIN (implicit)
2020-02-01 01:22:24,693 INFO sqlalchemy.engine.base.Engine Thread-2276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:24,693 INFO sqlalchemy.engine.base.Engine Thread-2276 : (1, 1)
2020-02-01 01:22:24,695 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:24,695 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:24,697 INFO sqlalchemy.engine.base.Engine Thread-2276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:24,697 INFO sqlalchemy.engine.base.Engine Thread-2276 : ('philip', 1, 1)
2020-02-01 01:22:24,698 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:24,698 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:24,706 INFO sqlalchemy.engine.base.Engine Thread-2276 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 01:22:24,706 INFO sqlalchemy.engine.base.Engine Thread-2276 : ()
2020-02-01 01:22:24,707 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 01:22:24,707 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:24,708 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:24,712 INFO sqlalchemy.engine.base.Engine Thread-2276 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:24,712 INFO sqlalchemy.engine.base.Engine Thread-2276 : ('philip', 1, 1)
2020-02-01 01:22:24,713 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:24,713 DEBUG sqlalchemy.engine.base.Engine Thread-2276 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:24,715 INFO sqlalchemy.engine.base.Engine Thread-2276 : ROLLBACK
2020-02-01 01:22:29,181 INFO sqlalchemy.engine.base.Engine Thread-2284 : BEGIN (implicit)
2020-02-01 01:22:29,182 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:29,182 INFO sqlalchemy.engine.base.Engine Thread-2284 : (1, 1)
2020-02-01 01:22:29,183 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:29,183 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:29,185 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:29,185 INFO sqlalchemy.engine.base.Engine Thread-2284 : ('philip', 1, 1)
2020-02-01 01:22:29,186 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:29,186 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:29,187 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 01:22:29,188 INFO sqlalchemy.engine.base.Engine Thread-2284 : ('1', 1)
2020-02-01 01:22:29,188 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 01:22:29,188 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-01 01:22:29,191 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:29,191 INFO sqlalchemy.engine.base.Engine Thread-2284 : (82,)
2020-02-01 01:22:29,191 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:29,192 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 01:22:29,192 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 01:22:29,192 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 01:22:29,193 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 01:22:29,193 INFO sqlalchemy.engine.base.Engine Thread-2284 : (1,)
2020-02-01 01:22:29,194 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:29,194 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 01:22:29,194 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 01:22:29,195 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:29,195 INFO sqlalchemy.engine.base.Engine Thread-2284 : (105,)
2020-02-01 01:22:29,196 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:29,196 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:29,196 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:29,197 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:29,197 INFO sqlalchemy.engine.base.Engine Thread-2284 : (105,)
2020-02-01 01:22:29,198 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:29,198 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:29,198 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:29,202 INFO sqlalchemy.engine.base.Engine Thread-2284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:29,202 INFO sqlalchemy.engine.base.Engine Thread-2284 : ('philip', 1, 1)
2020-02-01 01:22:29,203 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:29,203 DEBUG sqlalchemy.engine.base.Engine Thread-2284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:29,205 INFO sqlalchemy.engine.base.Engine Thread-2284 : ROLLBACK
2020-02-01 01:22:35,578 INFO sqlalchemy.engine.base.Engine Thread-2292 : BEGIN (implicit)
2020-02-01 01:22:35,579 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:35,579 INFO sqlalchemy.engine.base.Engine Thread-2292 : (1, 1)
2020-02-01 01:22:35,580 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:35,580 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:35,582 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:35,582 INFO sqlalchemy.engine.base.Engine Thread-2292 : ('philip', 1, 1)
2020-02-01 01:22:35,583 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:35,583 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:35,584 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 01:22:35,584 INFO sqlalchemy.engine.base.Engine Thread-2292 : ('1', 1)
2020-02-01 01:22:35,585 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 01:22:35,585 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 106, 106)
2020-02-01 01:22:35,588 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:35,588 INFO sqlalchemy.engine.base.Engine Thread-2292 : (82,)
2020-02-01 01:22:35,588 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:35,588 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 01:22:35,589 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 01:22:35,589 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 01:22:35,590 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 01:22:35,590 INFO sqlalchemy.engine.base.Engine Thread-2292 : (1,)
2020-02-01 01:22:35,591 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:35,591 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 01:22:35,591 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 01:22:35,593 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:35,593 INFO sqlalchemy.engine.base.Engine Thread-2292 : (105,)
2020-02-01 01:22:35,593 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:35,593 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:35,593 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:35,595 INFO sqlalchemy.engine.base.Engine Thread-2292 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:35,595 INFO sqlalchemy.engine.base.Engine Thread-2292 : (105,)
2020-02-01 01:22:35,595 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:35,595 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:35,595 DEBUG sqlalchemy.engine.base.Engine Thread-2292 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:35,597 INFO sqlalchemy.engine.base.Engine Thread-2292 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_locked=%s WHERE datesofinterest.id = %s
2020-02-01 01:22:35,597 INFO sqlalchemy.engine.base.Engine Thread-2292 : ('1', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 107, 1)
2020-02-01 01:22:35,598 INFO sqlalchemy.engine.base.Engine Thread-2292 : COMMIT
2020-02-01 01:22:35,710 INFO sqlalchemy.engine.base.Engine Thread-2293 : BEGIN (implicit)
2020-02-01 01:22:35,711 INFO sqlalchemy.engine.base.Engine Thread-2293 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:35,712 INFO sqlalchemy.engine.base.Engine Thread-2293 : (1, 1)
2020-02-01 01:22:35,712 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:35,712 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:35,715 INFO sqlalchemy.engine.base.Engine Thread-2293 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:35,715 INFO sqlalchemy.engine.base.Engine Thread-2293 : ('philip', 1, 1)
2020-02-01 01:22:35,715 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:35,715 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:35,723 INFO sqlalchemy.engine.base.Engine Thread-2293 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 01:22:35,723 INFO sqlalchemy.engine.base.Engine Thread-2293 : ()
2020-02-01 01:22:35,724 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 01:22:35,724 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:35,724 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:35,725 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:35,729 INFO sqlalchemy.engine.base.Engine Thread-2293 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:35,729 INFO sqlalchemy.engine.base.Engine Thread-2293 : ('philip', 1, 1)
2020-02-01 01:22:35,730 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:35,730 DEBUG sqlalchemy.engine.base.Engine Thread-2293 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:35,733 INFO sqlalchemy.engine.base.Engine Thread-2293 : ROLLBACK
2020-02-01 01:22:37,241 INFO sqlalchemy.engine.base.Engine Thread-2301 : BEGIN (implicit)
2020-02-01 01:22:37,242 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:37,242 INFO sqlalchemy.engine.base.Engine Thread-2301 : (1, 1)
2020-02-01 01:22:37,243 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:37,243 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:37,245 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:37,245 INFO sqlalchemy.engine.base.Engine Thread-2301 : ('philip', 1, 1)
2020-02-01 01:22:37,246 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:37,246 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:37,247 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 01:22:37,248 INFO sqlalchemy.engine.base.Engine Thread-2301 : ('16', 1)
2020-02-01 01:22:37,248 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 01:22:37,248 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 107, 106)
2020-02-01 01:22:37,251 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:37,251 INFO sqlalchemy.engine.base.Engine Thread-2301 : (82,)
2020-02-01 01:22:37,252 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:37,252 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 01:22:37,252 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 01:22:37,252 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 01:22:37,253 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 01:22:37,253 INFO sqlalchemy.engine.base.Engine Thread-2301 : (1,)
2020-02-01 01:22:37,254 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:37,254 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 01:22:37,254 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 01:22:37,255 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:37,255 INFO sqlalchemy.engine.base.Engine Thread-2301 : (105,)
2020-02-01 01:22:37,256 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:37,256 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:37,256 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:37,257 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:37,257 INFO sqlalchemy.engine.base.Engine Thread-2301 : (105,)
2020-02-01 01:22:37,258 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:37,258 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:37,258 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:37,262 INFO sqlalchemy.engine.base.Engine Thread-2301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:37,262 INFO sqlalchemy.engine.base.Engine Thread-2301 : ('philip', 1, 1)
2020-02-01 01:22:37,262 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:37,263 DEBUG sqlalchemy.engine.base.Engine Thread-2301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:37,265 INFO sqlalchemy.engine.base.Engine Thread-2301 : ROLLBACK
2020-02-01 01:22:41,679 INFO sqlalchemy.engine.base.Engine Thread-2309 : BEGIN (implicit)
2020-02-01 01:22:41,680 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:41,680 INFO sqlalchemy.engine.base.Engine Thread-2309 : (1, 1)
2020-02-01 01:22:41,681 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:41,681 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:41,684 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:41,684 INFO sqlalchemy.engine.base.Engine Thread-2309 : ('philip', 1, 1)
2020-02-01 01:22:41,685 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:41,685 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:41,687 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 01:22:41,687 INFO sqlalchemy.engine.base.Engine Thread-2309 : ('16', 1)
2020-02-01 01:22:41,687 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 01:22:41,688 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (16, 'Important Thing', 83, 'Important Thing', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'GBR,IND', 107, 106)
2020-02-01 01:22:41,691 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:41,691 INFO sqlalchemy.engine.base.Engine Thread-2309 : (82,)
2020-02-01 01:22:41,692 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:41,692 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 01:22:41,692 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 01:22:41,692 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 01:22:41,694 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 01:22:41,694 INFO sqlalchemy.engine.base.Engine Thread-2309 : (1,)
2020-02-01 01:22:41,695 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:41,695 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 01:22:41,695 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 01:22:41,697 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:41,697 INFO sqlalchemy.engine.base.Engine Thread-2309 : (105,)
2020-02-01 01:22:41,697 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:41,698 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:41,698 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:41,700 INFO sqlalchemy.engine.base.Engine Thread-2309 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 01:22:41,700 INFO sqlalchemy.engine.base.Engine Thread-2309 : (105,)
2020-02-01 01:22:41,701 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 01:22:41,701 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 01:22:41,701 DEBUG sqlalchemy.engine.base.Engine Thread-2309 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 01:22:41,703 INFO sqlalchemy.engine.base.Engine Thread-2309 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_locked=%s WHERE datesofinterest.id = %s
2020-02-01 01:22:41,703 INFO sqlalchemy.engine.base.Engine Thread-2309 : ('16', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 106, 16)
2020-02-01 01:22:41,704 INFO sqlalchemy.engine.base.Engine Thread-2309 : COMMIT
2020-02-01 01:22:41,875 INFO sqlalchemy.engine.base.Engine Thread-2310 : BEGIN (implicit)
2020-02-01 01:22:41,876 INFO sqlalchemy.engine.base.Engine Thread-2310 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:41,876 INFO sqlalchemy.engine.base.Engine Thread-2310 : (1, 1)
2020-02-01 01:22:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:41,879 INFO sqlalchemy.engine.base.Engine Thread-2310 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:41,880 INFO sqlalchemy.engine.base.Engine Thread-2310 : ('philip', 1, 1)
2020-02-01 01:22:41,880 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:41,880 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:41,888 INFO sqlalchemy.engine.base.Engine Thread-2310 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 01:22:41,888 INFO sqlalchemy.engine.base.Engine Thread-2310 : ()
2020-02-01 01:22:41,889 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 01:22:41,889 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:41,889 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 01:22:41,890 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 01:22:41,894 INFO sqlalchemy.engine.base.Engine Thread-2310 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:41,894 INFO sqlalchemy.engine.base.Engine Thread-2310 : ('philip', 1, 1)
2020-02-01 01:22:41,894 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:41,895 DEBUG sqlalchemy.engine.base.Engine Thread-2310 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:41,898 INFO sqlalchemy.engine.base.Engine Thread-2310 : ROLLBACK
2020-02-01 01:22:43,336 INFO sqlalchemy.engine.base.Engine Thread-2318 : BEGIN (implicit)
2020-02-01 01:22:43,337 INFO sqlalchemy.engine.base.Engine Thread-2318 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 01:22:43,338 INFO sqlalchemy.engine.base.Engine Thread-2318 : ()
2020-02-01 01:22:43,339 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 01:22:43,339 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 01:22:43,339 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 01:22:43,341 INFO sqlalchemy.engine.base.Engine Thread-2318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 01:22:43,341 INFO sqlalchemy.engine.base.Engine Thread-2318 : (1, 1)
2020-02-01 01:22:43,342 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:43,342 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:43,346 INFO sqlalchemy.engine.base.Engine Thread-2318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 01:22:43,346 INFO sqlalchemy.engine.base.Engine Thread-2318 : ('philip', 1, 1)
2020-02-01 01:22:43,347 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 01:22:43,347 DEBUG sqlalchemy.engine.base.Engine Thread-2318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 01:22:43,348 INFO sqlalchemy.engine.base.Engine Thread-2318 : ROLLBACK
2020-02-01 01:22:43,788 INFO sqlalchemy.engine.base.Engine Thread-2326 : BEGIN (implicit)
2020-02-01 01:22:43,789 INFO sqlalchemy.engine.base.Engine Thread-2326 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 01:22:43,789 INFO sqlalchemy.engine.base.Engine Thread-2326 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 01:22:43,790 DEBUG sqlalchemy.engine.base.Engine Thread-2326 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 01:22:43,790 DEBUG sqlalchemy.engine.base.Engine Thread-2326 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 01:22:43,790 DEBUG sqlalchemy.engine.base.Engine Thread-2326 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 01:22:43,791 INFO sqlalchemy.engine.base.Engine Thread-2326 : ROLLBACK
2020-02-01 17:46:10,985 INFO sqlalchemy.engine.base.Engine Thread-2336 : BEGIN (implicit)
2020-02-01 17:46:10,988 INFO sqlalchemy.engine.base.Engine Thread-2336 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:46:10,988 INFO sqlalchemy.engine.base.Engine Thread-2336 : ()
2020-02-01 17:46:10,990 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:46:10,991 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:46:10,991 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:46:10,993 INFO sqlalchemy.engine.base.Engine Thread-2336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:46:10,993 INFO sqlalchemy.engine.base.Engine Thread-2336 : (1, 1)
2020-02-01 17:46:10,994 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:10,994 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:10,999 INFO sqlalchemy.engine.base.Engine Thread-2336 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:46:10,999 INFO sqlalchemy.engine.base.Engine Thread-2336 : ('philip', 1, 1)
2020-02-01 17:46:11,000 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:11,000 DEBUG sqlalchemy.engine.base.Engine Thread-2336 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:11,002 INFO sqlalchemy.engine.base.Engine Thread-2336 : ROLLBACK
2020-02-01 17:46:11,673 INFO sqlalchemy.engine.base.Engine Thread-2358 : BEGIN (implicit)
2020-02-01 17:46:11,675 INFO sqlalchemy.engine.base.Engine Thread-2358 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:46:11,675 INFO sqlalchemy.engine.base.Engine Thread-2358 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:46:11,676 DEBUG sqlalchemy.engine.base.Engine Thread-2358 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:46:11,676 DEBUG sqlalchemy.engine.base.Engine Thread-2358 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:46:11,676 DEBUG sqlalchemy.engine.base.Engine Thread-2358 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:46:11,677 INFO sqlalchemy.engine.base.Engine Thread-2358 : ROLLBACK
2020-02-01 17:46:33,560 INFO sqlalchemy.engine.base.Engine Thread-2360 : BEGIN (implicit)
2020-02-01 17:46:33,562 INFO sqlalchemy.engine.base.Engine Thread-2360 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:46:33,562 INFO sqlalchemy.engine.base.Engine Thread-2361 : BEGIN (implicit)
2020-02-01 17:46:33,562 INFO sqlalchemy.engine.base.Engine Thread-2360 : (1, 1)
2020-02-01 17:46:33,565 INFO sqlalchemy.engine.base.Engine Thread-2361 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:46:33,567 INFO sqlalchemy.engine.base.Engine Thread-2361 : (1, 1)
2020-02-01 17:46:33,567 DEBUG sqlalchemy.engine.base.Engine Thread-2360 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:33,567 DEBUG sqlalchemy.engine.base.Engine Thread-2360 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:33,568 DEBUG sqlalchemy.engine.base.Engine Thread-2361 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:33,569 INFO sqlalchemy.engine.base.Engine Thread-2360 : ROLLBACK
2020-02-01 17:46:33,569 DEBUG sqlalchemy.engine.base.Engine Thread-2361 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:33,573 INFO sqlalchemy.engine.base.Engine Thread-2362 : BEGIN (implicit)
2020-02-01 17:46:33,575 INFO sqlalchemy.engine.base.Engine Thread-2361 : ROLLBACK
2020-02-01 17:46:33,577 INFO sqlalchemy.engine.base.Engine Thread-2363 : BEGIN (implicit)
2020-02-01 17:46:33,578 INFO sqlalchemy.engine.base.Engine Thread-2362 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:46:33,580 INFO sqlalchemy.engine.base.Engine Thread-2363 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:46:33,580 INFO sqlalchemy.engine.base.Engine Thread-2362 : (1, 1)
2020-02-01 17:46:33,581 INFO sqlalchemy.engine.base.Engine Thread-2363 : (1, 1)
2020-02-01 17:46:33,581 DEBUG sqlalchemy.engine.base.Engine Thread-2362 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:33,582 DEBUG sqlalchemy.engine.base.Engine Thread-2362 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:33,582 DEBUG sqlalchemy.engine.base.Engine Thread-2363 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:33,583 INFO sqlalchemy.engine.base.Engine Thread-2362 : ROLLBACK
2020-02-01 17:46:33,583 DEBUG sqlalchemy.engine.base.Engine Thread-2363 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:33,585 INFO sqlalchemy.engine.base.Engine Thread-2363 : ROLLBACK
2020-02-01 17:46:33,888 INFO sqlalchemy.engine.base.Engine Thread-2364 : BEGIN (implicit)
2020-02-01 17:46:33,889 INFO sqlalchemy.engine.base.Engine Thread-2364 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:46:33,889 INFO sqlalchemy.engine.base.Engine Thread-2364 : (1, 1)
2020-02-01 17:46:33,890 DEBUG sqlalchemy.engine.base.Engine Thread-2364 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:46:33,890 DEBUG sqlalchemy.engine.base.Engine Thread-2364 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:46:33,891 INFO sqlalchemy.engine.base.Engine Thread-2364 : ROLLBACK
2020-02-01 17:47:58,883 INFO sqlalchemy.engine.base.Engine Thread-2365 : BEGIN (implicit)
2020-02-01 17:47:58,886 INFO sqlalchemy.engine.base.Engine Thread-2365 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:47:58,886 INFO sqlalchemy.engine.base.Engine Thread-2365 : ()
2020-02-01 17:47:58,887 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:47:58,887 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:47:58,888 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:47:58,890 INFO sqlalchemy.engine.base.Engine Thread-2365 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:47:58,890 INFO sqlalchemy.engine.base.Engine Thread-2365 : (1, 1)
2020-02-01 17:47:58,890 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:58,891 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:58,895 INFO sqlalchemy.engine.base.Engine Thread-2365 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:47:58,895 INFO sqlalchemy.engine.base.Engine Thread-2365 : ('philip', 1, 1)
2020-02-01 17:47:58,895 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:58,896 DEBUG sqlalchemy.engine.base.Engine Thread-2365 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:58,897 INFO sqlalchemy.engine.base.Engine Thread-2365 : ROLLBACK
2020-02-01 17:47:59,707 INFO sqlalchemy.engine.base.Engine Thread-2373 : BEGIN (implicit)
2020-02-01 17:47:59,711 INFO sqlalchemy.engine.base.Engine Thread-2373 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:47:59,715 INFO sqlalchemy.engine.base.Engine Thread-2374 : BEGIN (implicit)
2020-02-01 17:47:59,717 INFO sqlalchemy.engine.base.Engine Thread-2376 : BEGIN (implicit)
2020-02-01 17:47:59,719 INFO sqlalchemy.engine.base.Engine Thread-2375 : BEGIN (implicit)
2020-02-01 17:47:59,719 INFO sqlalchemy.engine.base.Engine Thread-2373 : (1, 1)
2020-02-01 17:47:59,720 INFO sqlalchemy.engine.base.Engine Thread-2374 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:47:59,723 INFO sqlalchemy.engine.base.Engine Thread-2374 : (1, 1)
2020-02-01 17:47:59,722 INFO sqlalchemy.engine.base.Engine Thread-2375 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:47:59,723 INFO sqlalchemy.engine.base.Engine Thread-2375 : (1, 1)
2020-02-01 17:47:59,721 INFO sqlalchemy.engine.base.Engine Thread-2376 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:47:59,723 DEBUG sqlalchemy.engine.base.Engine Thread-2373 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:59,724 DEBUG sqlalchemy.engine.base.Engine Thread-2373 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:59,724 DEBUG sqlalchemy.engine.base.Engine Thread-2375 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:59,725 DEBUG sqlalchemy.engine.base.Engine Thread-2375 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:59,723 DEBUG sqlalchemy.engine.base.Engine Thread-2374 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:59,724 INFO sqlalchemy.engine.base.Engine Thread-2376 : (1, 1)
2020-02-01 17:47:59,725 DEBUG sqlalchemy.engine.base.Engine Thread-2374 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:59,727 INFO sqlalchemy.engine.base.Engine Thread-2374 : ROLLBACK
2020-02-01 17:47:59,726 INFO sqlalchemy.engine.base.Engine Thread-2373 : ROLLBACK
2020-02-01 17:47:59,728 DEBUG sqlalchemy.engine.base.Engine Thread-2376 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:59,729 DEBUG sqlalchemy.engine.base.Engine Thread-2376 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:59,728 INFO sqlalchemy.engine.base.Engine Thread-2375 : ROLLBACK
2020-02-01 17:47:59,730 INFO sqlalchemy.engine.base.Engine Thread-2376 : ROLLBACK
2020-02-01 17:47:59,833 INFO sqlalchemy.engine.base.Engine Thread-2377 : BEGIN (implicit)
2020-02-01 17:47:59,834 INFO sqlalchemy.engine.base.Engine Thread-2377 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:47:59,834 INFO sqlalchemy.engine.base.Engine Thread-2377 : (1, 1)
2020-02-01 17:47:59,835 DEBUG sqlalchemy.engine.base.Engine Thread-2377 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:47:59,835 DEBUG sqlalchemy.engine.base.Engine Thread-2377 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:47:59,836 INFO sqlalchemy.engine.base.Engine Thread-2377 : ROLLBACK
2020-02-01 17:47:59,869 INFO sqlalchemy.engine.base.Engine Thread-2378 : BEGIN (implicit)
2020-02-01 17:47:59,870 INFO sqlalchemy.engine.base.Engine Thread-2378 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:47:59,871 INFO sqlalchemy.engine.base.Engine Thread-2378 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:47:59,871 DEBUG sqlalchemy.engine.base.Engine Thread-2378 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:47:59,872 DEBUG sqlalchemy.engine.base.Engine Thread-2378 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:47:59,872 DEBUG sqlalchemy.engine.base.Engine Thread-2378 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:47:59,872 INFO sqlalchemy.engine.base.Engine Thread-2378 : ROLLBACK
2020-02-01 17:49:45,415 INFO sqlalchemy.engine.base.Engine Thread-2380 : BEGIN (implicit)
2020-02-01 17:49:45,417 INFO sqlalchemy.engine.base.Engine Thread-2380 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:49:45,417 INFO sqlalchemy.engine.base.Engine Thread-2380 : ()
2020-02-01 17:49:45,419 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:49:45,419 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:49:45,419 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:49:45,421 INFO sqlalchemy.engine.base.Engine Thread-2380 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:49:45,422 INFO sqlalchemy.engine.base.Engine Thread-2380 : (1, 1)
2020-02-01 17:49:45,422 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:45,423 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:45,427 INFO sqlalchemy.engine.base.Engine Thread-2380 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:49:45,427 INFO sqlalchemy.engine.base.Engine Thread-2380 : ('philip', 1, 1)
2020-02-01 17:49:45,428 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:45,428 DEBUG sqlalchemy.engine.base.Engine Thread-2380 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:45,430 INFO sqlalchemy.engine.base.Engine Thread-2380 : ROLLBACK
2020-02-01 17:49:46,028 INFO sqlalchemy.engine.base.Engine Thread-2388 : BEGIN (implicit)
2020-02-01 17:49:46,030 INFO sqlalchemy.engine.base.Engine Thread-2388 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:49:46,030 INFO sqlalchemy.engine.base.Engine Thread-2388 : (1, 1)
2020-02-01 17:49:46,031 INFO sqlalchemy.engine.base.Engine Thread-2390 : BEGIN (implicit)
2020-02-01 17:49:46,032 INFO sqlalchemy.engine.base.Engine Thread-2390 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:49:46,032 INFO sqlalchemy.engine.base.Engine Thread-2390 : (1, 1)
2020-02-01 17:49:46,033 DEBUG sqlalchemy.engine.base.Engine Thread-2388 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:46,034 DEBUG sqlalchemy.engine.base.Engine Thread-2390 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:46,034 DEBUG sqlalchemy.engine.base.Engine Thread-2388 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:46,035 INFO sqlalchemy.engine.base.Engine Thread-2389 : BEGIN (implicit)
2020-02-01 17:49:46,039 INFO sqlalchemy.engine.base.Engine Thread-2389 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:49:46,040 INFO sqlalchemy.engine.base.Engine Thread-2389 : (1, 1)
2020-02-01 17:49:46,038 INFO sqlalchemy.engine.base.Engine Thread-2388 : ROLLBACK
2020-02-01 17:49:46,037 INFO sqlalchemy.engine.base.Engine Thread-2391 : BEGIN (implicit)
2020-02-01 17:49:46,036 DEBUG sqlalchemy.engine.base.Engine Thread-2390 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:46,041 INFO sqlalchemy.engine.base.Engine Thread-2391 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:49:46,041 DEBUG sqlalchemy.engine.base.Engine Thread-2389 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:46,042 INFO sqlalchemy.engine.base.Engine Thread-2391 : (1, 1)
2020-02-01 17:49:46,043 DEBUG sqlalchemy.engine.base.Engine Thread-2389 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:46,043 INFO sqlalchemy.engine.base.Engine Thread-2390 : ROLLBACK
2020-02-01 17:49:46,045 INFO sqlalchemy.engine.base.Engine Thread-2389 : ROLLBACK
2020-02-01 17:49:46,045 DEBUG sqlalchemy.engine.base.Engine Thread-2391 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:46,047 DEBUG sqlalchemy.engine.base.Engine Thread-2391 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:46,048 INFO sqlalchemy.engine.base.Engine Thread-2391 : ROLLBACK
2020-02-01 17:49:46,138 INFO sqlalchemy.engine.base.Engine Thread-2392 : BEGIN (implicit)
2020-02-01 17:49:46,139 INFO sqlalchemy.engine.base.Engine Thread-2392 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:49:46,139 INFO sqlalchemy.engine.base.Engine Thread-2392 : (1, 1)
2020-02-01 17:49:46,140 DEBUG sqlalchemy.engine.base.Engine Thread-2392 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:49:46,140 DEBUG sqlalchemy.engine.base.Engine Thread-2392 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:49:46,141 INFO sqlalchemy.engine.base.Engine Thread-2392 : ROLLBACK
2020-02-01 17:49:46,152 INFO sqlalchemy.engine.base.Engine Thread-2393 : BEGIN (implicit)
2020-02-01 17:49:46,153 INFO sqlalchemy.engine.base.Engine Thread-2393 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:49:46,153 INFO sqlalchemy.engine.base.Engine Thread-2393 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:49:46,154 DEBUG sqlalchemy.engine.base.Engine Thread-2393 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:49:46,154 DEBUG sqlalchemy.engine.base.Engine Thread-2393 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:49:46,155 DEBUG sqlalchemy.engine.base.Engine Thread-2393 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:49:46,155 INFO sqlalchemy.engine.base.Engine Thread-2393 : ROLLBACK
2020-02-01 17:50:58,066 INFO sqlalchemy.engine.base.Engine Thread-2395 : BEGIN (implicit)
2020-02-01 17:50:58,069 INFO sqlalchemy.engine.base.Engine Thread-2395 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:50:58,070 INFO sqlalchemy.engine.base.Engine Thread-2395 : ()
2020-02-01 17:50:58,072 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:50:58,072 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:50:58,072 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:50:58,074 INFO sqlalchemy.engine.base.Engine Thread-2395 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:50:58,074 INFO sqlalchemy.engine.base.Engine Thread-2395 : (1, 1)
2020-02-01 17:50:58,075 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,076 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,081 INFO sqlalchemy.engine.base.Engine Thread-2395 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:50:58,081 INFO sqlalchemy.engine.base.Engine Thread-2395 : ('philip', 1, 1)
2020-02-01 17:50:58,082 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,082 DEBUG sqlalchemy.engine.base.Engine Thread-2395 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,085 INFO sqlalchemy.engine.base.Engine Thread-2395 : ROLLBACK
2020-02-01 17:50:58,588 INFO sqlalchemy.engine.base.Engine Thread-2403 : BEGIN (implicit)
2020-02-01 17:50:58,590 INFO sqlalchemy.engine.base.Engine Thread-2403 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:50:58,590 INFO sqlalchemy.engine.base.Engine Thread-2403 : (1, 1)
2020-02-01 17:50:58,592 INFO sqlalchemy.engine.base.Engine Thread-2404 : BEGIN (implicit)
2020-02-01 17:50:58,593 INFO sqlalchemy.engine.base.Engine Thread-2404 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:50:58,593 INFO sqlalchemy.engine.base.Engine Thread-2404 : (1, 1)
2020-02-01 17:50:58,597 DEBUG sqlalchemy.engine.base.Engine Thread-2404 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,598 DEBUG sqlalchemy.engine.base.Engine Thread-2404 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,598 DEBUG sqlalchemy.engine.base.Engine Thread-2403 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,599 INFO sqlalchemy.engine.base.Engine Thread-2404 : ROLLBACK
2020-02-01 17:50:58,600 DEBUG sqlalchemy.engine.base.Engine Thread-2403 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,601 INFO sqlalchemy.engine.base.Engine Thread-2406 : BEGIN (implicit)
2020-02-01 17:50:58,605 INFO sqlalchemy.engine.base.Engine Thread-2406 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:50:58,604 INFO sqlalchemy.engine.base.Engine Thread-2403 : ROLLBACK
2020-02-01 17:50:58,602 INFO sqlalchemy.engine.base.Engine Thread-2405 : BEGIN (implicit)
2020-02-01 17:50:58,607 INFO sqlalchemy.engine.base.Engine Thread-2405 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:50:58,607 INFO sqlalchemy.engine.base.Engine Thread-2405 : (1, 1)
2020-02-01 17:50:58,606 INFO sqlalchemy.engine.base.Engine Thread-2406 : (1, 1)
2020-02-01 17:50:58,608 DEBUG sqlalchemy.engine.base.Engine Thread-2405 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,609 DEBUG sqlalchemy.engine.base.Engine Thread-2405 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,609 DEBUG sqlalchemy.engine.base.Engine Thread-2406 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,609 DEBUG sqlalchemy.engine.base.Engine Thread-2406 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,610 INFO sqlalchemy.engine.base.Engine Thread-2405 : ROLLBACK
2020-02-01 17:50:58,611 INFO sqlalchemy.engine.base.Engine Thread-2406 : ROLLBACK
2020-02-01 17:50:58,682 INFO sqlalchemy.engine.base.Engine Thread-2407 : BEGIN (implicit)
2020-02-01 17:50:58,683 INFO sqlalchemy.engine.base.Engine Thread-2407 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:50:58,683 INFO sqlalchemy.engine.base.Engine Thread-2407 : (1, 1)
2020-02-01 17:50:58,683 DEBUG sqlalchemy.engine.base.Engine Thread-2407 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:50:58,684 DEBUG sqlalchemy.engine.base.Engine Thread-2407 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:50:58,685 INFO sqlalchemy.engine.base.Engine Thread-2407 : ROLLBACK
2020-02-01 17:50:58,715 INFO sqlalchemy.engine.base.Engine Thread-2408 : BEGIN (implicit)
2020-02-01 17:50:58,716 INFO sqlalchemy.engine.base.Engine Thread-2408 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:50:58,716 INFO sqlalchemy.engine.base.Engine Thread-2408 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:50:58,717 DEBUG sqlalchemy.engine.base.Engine Thread-2408 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:50:58,717 DEBUG sqlalchemy.engine.base.Engine Thread-2408 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:50:58,718 DEBUG sqlalchemy.engine.base.Engine Thread-2408 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:50:58,718 INFO sqlalchemy.engine.base.Engine Thread-2408 : ROLLBACK
2020-02-01 17:52:05,018 INFO sqlalchemy.engine.base.Engine Thread-2410 : BEGIN (implicit)
2020-02-01 17:52:05,020 INFO sqlalchemy.engine.base.Engine Thread-2410 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:52:05,020 INFO sqlalchemy.engine.base.Engine Thread-2410 : ()
2020-02-01 17:52:05,022 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:52:05,022 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:52:05,022 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:52:05,024 INFO sqlalchemy.engine.base.Engine Thread-2410 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:05,024 INFO sqlalchemy.engine.base.Engine Thread-2410 : (1, 1)
2020-02-01 17:52:05,025 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,025 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,029 INFO sqlalchemy.engine.base.Engine Thread-2410 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:05,029 INFO sqlalchemy.engine.base.Engine Thread-2410 : ('philip', 1, 1)
2020-02-01 17:52:05,029 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,029 DEBUG sqlalchemy.engine.base.Engine Thread-2410 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,031 INFO sqlalchemy.engine.base.Engine Thread-2410 : ROLLBACK
2020-02-01 17:52:05,622 INFO sqlalchemy.engine.base.Engine Thread-2419 : BEGIN (implicit)
2020-02-01 17:52:05,623 INFO sqlalchemy.engine.base.Engine Thread-2419 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:05,623 INFO sqlalchemy.engine.base.Engine Thread-2419 : (1, 1)
2020-02-01 17:52:05,625 INFO sqlalchemy.engine.base.Engine Thread-2418 : BEGIN (implicit)
2020-02-01 17:52:05,626 INFO sqlalchemy.engine.base.Engine Thread-2418 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:05,626 INFO sqlalchemy.engine.base.Engine Thread-2418 : (1, 1)
2020-02-01 17:52:05,627 DEBUG sqlalchemy.engine.base.Engine Thread-2419 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,628 DEBUG sqlalchemy.engine.base.Engine Thread-2419 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,634 INFO sqlalchemy.engine.base.Engine Thread-2419 : ROLLBACK
2020-02-01 17:52:05,630 INFO sqlalchemy.engine.base.Engine Thread-2420 : BEGIN (implicit)
2020-02-01 17:52:05,633 INFO sqlalchemy.engine.base.Engine Thread-2421 : BEGIN (implicit)
2020-02-01 17:52:05,628 DEBUG sqlalchemy.engine.base.Engine Thread-2418 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,635 INFO sqlalchemy.engine.base.Engine Thread-2420 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:05,637 INFO sqlalchemy.engine.base.Engine Thread-2420 : (1, 1)
2020-02-01 17:52:05,637 DEBUG sqlalchemy.engine.base.Engine Thread-2418 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,637 INFO sqlalchemy.engine.base.Engine Thread-2421 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:05,638 INFO sqlalchemy.engine.base.Engine Thread-2421 : (1, 1)
2020-02-01 17:52:05,639 INFO sqlalchemy.engine.base.Engine Thread-2418 : ROLLBACK
2020-02-01 17:52:05,639 DEBUG sqlalchemy.engine.base.Engine Thread-2421 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,639 DEBUG sqlalchemy.engine.base.Engine Thread-2421 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,641 INFO sqlalchemy.engine.base.Engine Thread-2421 : ROLLBACK
2020-02-01 17:52:05,642 DEBUG sqlalchemy.engine.base.Engine Thread-2420 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,642 DEBUG sqlalchemy.engine.base.Engine Thread-2420 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,643 INFO sqlalchemy.engine.base.Engine Thread-2420 : ROLLBACK
2020-02-01 17:52:05,734 INFO sqlalchemy.engine.base.Engine Thread-2422 : BEGIN (implicit)
2020-02-01 17:52:05,735 INFO sqlalchemy.engine.base.Engine Thread-2422 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:05,735 INFO sqlalchemy.engine.base.Engine Thread-2422 : (1, 1)
2020-02-01 17:52:05,736 DEBUG sqlalchemy.engine.base.Engine Thread-2422 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:05,736 DEBUG sqlalchemy.engine.base.Engine Thread-2422 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:05,737 INFO sqlalchemy.engine.base.Engine Thread-2422 : ROLLBACK
2020-02-01 17:52:05,777 INFO sqlalchemy.engine.base.Engine Thread-2423 : BEGIN (implicit)
2020-02-01 17:52:05,778 INFO sqlalchemy.engine.base.Engine Thread-2423 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:52:05,778 INFO sqlalchemy.engine.base.Engine Thread-2423 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:52:05,779 DEBUG sqlalchemy.engine.base.Engine Thread-2423 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:52:05,779 DEBUG sqlalchemy.engine.base.Engine Thread-2423 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:52:05,779 DEBUG sqlalchemy.engine.base.Engine Thread-2423 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:52:05,780 INFO sqlalchemy.engine.base.Engine Thread-2423 : ROLLBACK
2020-02-01 17:52:40,369 INFO sqlalchemy.engine.base.Engine Thread-2425 : BEGIN (implicit)
2020-02-01 17:52:40,370 INFO sqlalchemy.engine.base.Engine Thread-2425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:40,370 INFO sqlalchemy.engine.base.Engine Thread-2425 : (1, 1)
2020-02-01 17:52:40,371 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,371 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,373 INFO sqlalchemy.engine.base.Engine Thread-2425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:40,373 INFO sqlalchemy.engine.base.Engine Thread-2425 : ('philip', 1, 1)
2020-02-01 17:52:40,374 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,374 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,383 INFO sqlalchemy.engine.base.Engine Thread-2425 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 17:52:40,383 INFO sqlalchemy.engine.base.Engine Thread-2425 : ()
2020-02-01 17:52:40,384 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 17:52:40,384 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:40,384 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:40,384 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:40,384 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:40,384 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:40,385 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:40,385 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:40,385 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:40,385 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:40,389 INFO sqlalchemy.engine.base.Engine Thread-2425 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:40,389 INFO sqlalchemy.engine.base.Engine Thread-2425 : ('philip', 1, 1)
2020-02-01 17:52:40,390 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,390 DEBUG sqlalchemy.engine.base.Engine Thread-2425 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,392 INFO sqlalchemy.engine.base.Engine Thread-2425 : ROLLBACK
2020-02-01 17:52:40,943 INFO sqlalchemy.engine.base.Engine Thread-2433 : BEGIN (implicit)
2020-02-01 17:52:40,944 INFO sqlalchemy.engine.base.Engine Thread-2433 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:40,944 INFO sqlalchemy.engine.base.Engine Thread-2433 : (1, 1)
2020-02-01 17:52:40,947 INFO sqlalchemy.engine.base.Engine Thread-2434 : BEGIN (implicit)
2020-02-01 17:52:40,948 INFO sqlalchemy.engine.base.Engine Thread-2434 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:40,948 INFO sqlalchemy.engine.base.Engine Thread-2434 : (1, 1)
2020-02-01 17:52:40,949 DEBUG sqlalchemy.engine.base.Engine Thread-2433 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,952 DEBUG sqlalchemy.engine.base.Engine Thread-2433 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,949 DEBUG sqlalchemy.engine.base.Engine Thread-2434 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,953 INFO sqlalchemy.engine.base.Engine Thread-2435 : BEGIN (implicit)
2020-02-01 17:52:40,959 INFO sqlalchemy.engine.base.Engine Thread-2435 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:40,959 INFO sqlalchemy.engine.base.Engine Thread-2435 : (1, 1)
2020-02-01 17:52:40,958 INFO sqlalchemy.engine.base.Engine Thread-2436 : BEGIN (implicit)
2020-02-01 17:52:40,960 INFO sqlalchemy.engine.base.Engine Thread-2436 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:40,960 INFO sqlalchemy.engine.base.Engine Thread-2436 : (1, 1)
2020-02-01 17:52:40,956 DEBUG sqlalchemy.engine.base.Engine Thread-2434 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,956 INFO sqlalchemy.engine.base.Engine Thread-2433 : ROLLBACK
2020-02-01 17:52:40,961 DEBUG sqlalchemy.engine.base.Engine Thread-2435 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,963 DEBUG sqlalchemy.engine.base.Engine Thread-2435 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,962 INFO sqlalchemy.engine.base.Engine Thread-2434 : ROLLBACK
2020-02-01 17:52:40,964 INFO sqlalchemy.engine.base.Engine Thread-2435 : ROLLBACK
2020-02-01 17:52:40,962 DEBUG sqlalchemy.engine.base.Engine Thread-2436 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:40,966 DEBUG sqlalchemy.engine.base.Engine Thread-2436 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:40,967 INFO sqlalchemy.engine.base.Engine Thread-2436 : ROLLBACK
2020-02-01 17:52:41,058 INFO sqlalchemy.engine.base.Engine Thread-2437 : BEGIN (implicit)
2020-02-01 17:52:41,059 INFO sqlalchemy.engine.base.Engine Thread-2437 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:41,059 INFO sqlalchemy.engine.base.Engine Thread-2437 : (1, 1)
2020-02-01 17:52:41,060 DEBUG sqlalchemy.engine.base.Engine Thread-2437 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:41,060 DEBUG sqlalchemy.engine.base.Engine Thread-2437 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:41,061 INFO sqlalchemy.engine.base.Engine Thread-2437 : ROLLBACK
2020-02-01 17:52:42,805 INFO sqlalchemy.engine.base.Engine Thread-2438 : BEGIN (implicit)
2020-02-01 17:52:42,806 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:42,806 INFO sqlalchemy.engine.base.Engine Thread-2438 : (1, 1)
2020-02-01 17:52:42,807 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:42,807 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:42,809 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:42,809 INFO sqlalchemy.engine.base.Engine Thread-2438 : ('philip', 1, 1)
2020-02-01 17:52:42,810 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:42,810 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:42,812 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:52:42,812 INFO sqlalchemy.engine.base.Engine Thread-2438 : ('0', 1)
2020-02-01 17:52:42,812 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:52:42,815 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:52:42,815 INFO sqlalchemy.engine.base.Engine Thread-2438 : (82,)
2020-02-01 17:52:42,815 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:42,816 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:52:42,816 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:52:42,816 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:52:42,817 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:52:42,817 INFO sqlalchemy.engine.base.Engine Thread-2438 : (1,)
2020-02-01 17:52:42,818 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:42,818 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:52:42,818 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:52:42,820 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:52:42,820 INFO sqlalchemy.engine.base.Engine Thread-2438 : (105,)
2020-02-01 17:52:42,820 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:42,821 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:52:42,821 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:52:42,822 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:52:42,822 INFO sqlalchemy.engine.base.Engine Thread-2438 : (105,)
2020-02-01 17:52:42,823 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:42,823 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:52:42,823 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:52:42,828 INFO sqlalchemy.engine.base.Engine Thread-2438 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:42,828 INFO sqlalchemy.engine.base.Engine Thread-2438 : ('philip', 1, 1)
2020-02-01 17:52:42,828 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:42,829 DEBUG sqlalchemy.engine.base.Engine Thread-2438 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:42,831 INFO sqlalchemy.engine.base.Engine Thread-2438 : ROLLBACK
2020-02-01 17:52:43,370 INFO sqlalchemy.engine.base.Engine Thread-2446 : BEGIN (implicit)
2020-02-01 17:52:43,373 INFO sqlalchemy.engine.base.Engine Thread-2446 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:43,373 INFO sqlalchemy.engine.base.Engine Thread-2446 : (1, 1)
2020-02-01 17:52:43,375 INFO sqlalchemy.engine.base.Engine Thread-2447 : BEGIN (implicit)
2020-02-01 17:52:43,378 INFO sqlalchemy.engine.base.Engine Thread-2447 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:43,378 INFO sqlalchemy.engine.base.Engine Thread-2447 : (1, 1)
2020-02-01 17:52:43,380 INFO sqlalchemy.engine.base.Engine Thread-2448 : BEGIN (implicit)
2020-02-01 17:52:43,380 DEBUG sqlalchemy.engine.base.Engine Thread-2447 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:43,380 DEBUG sqlalchemy.engine.base.Engine Thread-2446 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:43,385 DEBUG sqlalchemy.engine.base.Engine Thread-2446 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:43,385 DEBUG sqlalchemy.engine.base.Engine Thread-2447 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:43,382 INFO sqlalchemy.engine.base.Engine Thread-2448 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:43,388 INFO sqlalchemy.engine.base.Engine Thread-2448 : (1, 1)
2020-02-01 17:52:43,388 INFO sqlalchemy.engine.base.Engine Thread-2447 : ROLLBACK
2020-02-01 17:52:43,387 INFO sqlalchemy.engine.base.Engine Thread-2446 : ROLLBACK
2020-02-01 17:52:43,390 DEBUG sqlalchemy.engine.base.Engine Thread-2448 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:43,391 INFO sqlalchemy.engine.base.Engine Thread-2449 : BEGIN (implicit)
2020-02-01 17:52:43,392 DEBUG sqlalchemy.engine.base.Engine Thread-2448 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:43,395 INFO sqlalchemy.engine.base.Engine Thread-2449 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:43,396 INFO sqlalchemy.engine.base.Engine Thread-2448 : ROLLBACK
2020-02-01 17:52:43,396 INFO sqlalchemy.engine.base.Engine Thread-2449 : (1, 1)
2020-02-01 17:52:43,397 DEBUG sqlalchemy.engine.base.Engine Thread-2449 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:43,397 DEBUG sqlalchemy.engine.base.Engine Thread-2449 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:43,399 INFO sqlalchemy.engine.base.Engine Thread-2449 : ROLLBACK
2020-02-01 17:52:43,469 INFO sqlalchemy.engine.base.Engine Thread-2450 : BEGIN (implicit)
2020-02-01 17:52:43,470 INFO sqlalchemy.engine.base.Engine Thread-2450 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:43,470 INFO sqlalchemy.engine.base.Engine Thread-2450 : (1, 1)
2020-02-01 17:52:43,471 DEBUG sqlalchemy.engine.base.Engine Thread-2450 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:43,471 DEBUG sqlalchemy.engine.base.Engine Thread-2450 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:43,472 INFO sqlalchemy.engine.base.Engine Thread-2450 : ROLLBACK
2020-02-01 17:52:44,934 INFO sqlalchemy.engine.base.Engine Thread-2451 : BEGIN (implicit)
2020-02-01 17:52:44,935 INFO sqlalchemy.engine.base.Engine Thread-2451 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:44,935 INFO sqlalchemy.engine.base.Engine Thread-2451 : (1, 1)
2020-02-01 17:52:44,936 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:44,936 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:44,938 INFO sqlalchemy.engine.base.Engine Thread-2451 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:44,939 INFO sqlalchemy.engine.base.Engine Thread-2451 : ('philip', 1, 1)
2020-02-01 17:52:44,939 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:44,939 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:44,947 INFO sqlalchemy.engine.base.Engine Thread-2451 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 17:52:44,947 INFO sqlalchemy.engine.base.Engine Thread-2451 : ()
2020-02-01 17:52:44,948 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 17:52:44,948 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:52:44,949 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:52:44,954 INFO sqlalchemy.engine.base.Engine Thread-2451 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:44,954 INFO sqlalchemy.engine.base.Engine Thread-2451 : ('philip', 1, 1)
2020-02-01 17:52:44,954 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:44,955 DEBUG sqlalchemy.engine.base.Engine Thread-2451 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:44,957 INFO sqlalchemy.engine.base.Engine Thread-2451 : ROLLBACK
2020-02-01 17:52:45,539 INFO sqlalchemy.engine.base.Engine Thread-2459 : BEGIN (implicit)
2020-02-01 17:52:45,540 INFO sqlalchemy.engine.base.Engine Thread-2459 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:45,541 INFO sqlalchemy.engine.base.Engine Thread-2459 : (1, 1)
2020-02-01 17:52:45,543 DEBUG sqlalchemy.engine.base.Engine Thread-2459 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:45,545 INFO sqlalchemy.engine.base.Engine Thread-2460 : BEGIN (implicit)
2020-02-01 17:52:45,545 DEBUG sqlalchemy.engine.base.Engine Thread-2459 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:45,548 INFO sqlalchemy.engine.base.Engine Thread-2460 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:45,550 INFO sqlalchemy.engine.base.Engine Thread-2460 : (1, 1)
2020-02-01 17:52:45,551 INFO sqlalchemy.engine.base.Engine Thread-2459 : ROLLBACK
2020-02-01 17:52:45,552 INFO sqlalchemy.engine.base.Engine Thread-2462 : BEGIN (implicit)
2020-02-01 17:52:45,554 INFO sqlalchemy.engine.base.Engine Thread-2462 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:45,554 INFO sqlalchemy.engine.base.Engine Thread-2462 : (1, 1)
2020-02-01 17:52:45,555 DEBUG sqlalchemy.engine.base.Engine Thread-2462 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:45,556 INFO sqlalchemy.engine.base.Engine Thread-2461 : BEGIN (implicit)
2020-02-01 17:52:45,557 DEBUG sqlalchemy.engine.base.Engine Thread-2462 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:45,557 DEBUG sqlalchemy.engine.base.Engine Thread-2460 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:45,559 DEBUG sqlalchemy.engine.base.Engine Thread-2460 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:45,560 INFO sqlalchemy.engine.base.Engine Thread-2460 : ROLLBACK
2020-02-01 17:52:45,558 INFO sqlalchemy.engine.base.Engine Thread-2461 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:45,561 INFO sqlalchemy.engine.base.Engine Thread-2462 : ROLLBACK
2020-02-01 17:52:45,562 INFO sqlalchemy.engine.base.Engine Thread-2461 : (1, 1)
2020-02-01 17:52:45,563 DEBUG sqlalchemy.engine.base.Engine Thread-2461 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:45,563 DEBUG sqlalchemy.engine.base.Engine Thread-2461 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:45,564 INFO sqlalchemy.engine.base.Engine Thread-2461 : ROLLBACK
2020-02-01 17:52:45,665 INFO sqlalchemy.engine.base.Engine Thread-2463 : BEGIN (implicit)
2020-02-01 17:52:45,666 INFO sqlalchemy.engine.base.Engine Thread-2463 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:45,666 INFO sqlalchemy.engine.base.Engine Thread-2463 : (1, 1)
2020-02-01 17:52:45,667 DEBUG sqlalchemy.engine.base.Engine Thread-2463 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:45,667 DEBUG sqlalchemy.engine.base.Engine Thread-2463 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:45,668 INFO sqlalchemy.engine.base.Engine Thread-2463 : ROLLBACK
2020-02-01 17:52:50,487 INFO sqlalchemy.engine.base.Engine Thread-2464 : BEGIN (implicit)
2020-02-01 17:52:50,488 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:50,488 INFO sqlalchemy.engine.base.Engine Thread-2464 : (1, 1)
2020-02-01 17:52:50,489 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:50,489 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:50,491 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:50,491 INFO sqlalchemy.engine.base.Engine Thread-2464 : ('philip', 1, 1)
2020-02-01 17:52:50,492 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:50,492 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:50,494 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:52:50,494 INFO sqlalchemy.engine.base.Engine Thread-2464 : ('0', 1)
2020-02-01 17:52:50,494 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:52:50,497 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:52:50,497 INFO sqlalchemy.engine.base.Engine Thread-2464 : (82,)
2020-02-01 17:52:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:50,497 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:52:50,498 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:52:50,498 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:52:50,499 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:52:50,499 INFO sqlalchemy.engine.base.Engine Thread-2464 : (1,)
2020-02-01 17:52:50,500 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:50,500 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:52:50,501 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:52:50,502 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:52:50,502 INFO sqlalchemy.engine.base.Engine Thread-2464 : (105,)
2020-02-01 17:52:50,502 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:50,503 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:52:50,503 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:52:50,504 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:52:50,504 INFO sqlalchemy.engine.base.Engine Thread-2464 : (105,)
2020-02-01 17:52:50,504 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:52:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:52:50,505 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:52:50,509 INFO sqlalchemy.engine.base.Engine Thread-2464 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:52:50,509 INFO sqlalchemy.engine.base.Engine Thread-2464 : ('philip', 1, 1)
2020-02-01 17:52:50,509 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:50,510 DEBUG sqlalchemy.engine.base.Engine Thread-2464 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:50,512 INFO sqlalchemy.engine.base.Engine Thread-2464 : ROLLBACK
2020-02-01 17:52:51,021 INFO sqlalchemy.engine.base.Engine Thread-2473 : BEGIN (implicit)
2020-02-01 17:52:51,024 INFO sqlalchemy.engine.base.Engine Thread-2472 : BEGIN (implicit)
2020-02-01 17:52:51,026 INFO sqlalchemy.engine.base.Engine Thread-2473 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:51,027 INFO sqlalchemy.engine.base.Engine Thread-2472 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:51,029 INFO sqlalchemy.engine.base.Engine Thread-2472 : (1, 1)
2020-02-01 17:52:51,029 INFO sqlalchemy.engine.base.Engine Thread-2473 : (1, 1)
2020-02-01 17:52:51,031 DEBUG sqlalchemy.engine.base.Engine Thread-2473 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-2473 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:51,029 INFO sqlalchemy.engine.base.Engine Thread-2474 : BEGIN (implicit)
2020-02-01 17:52:51,035 INFO sqlalchemy.engine.base.Engine Thread-2475 : BEGIN (implicit)
2020-02-01 17:52:51,036 INFO sqlalchemy.engine.base.Engine Thread-2474 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:51,039 INFO sqlalchemy.engine.base.Engine Thread-2474 : (1, 1)
2020-02-01 17:52:51,036 DEBUG sqlalchemy.engine.base.Engine Thread-2472 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:51,038 INFO sqlalchemy.engine.base.Engine Thread-2475 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:51,039 INFO sqlalchemy.engine.base.Engine Thread-2475 : (1, 1)
2020-02-01 17:52:51,037 INFO sqlalchemy.engine.base.Engine Thread-2473 : ROLLBACK
2020-02-01 17:52:51,039 DEBUG sqlalchemy.engine.base.Engine Thread-2472 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:51,040 DEBUG sqlalchemy.engine.base.Engine Thread-2474 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:51,041 INFO sqlalchemy.engine.base.Engine Thread-2472 : ROLLBACK
2020-02-01 17:52:51,042 DEBUG sqlalchemy.engine.base.Engine Thread-2475 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:51,042 DEBUG sqlalchemy.engine.base.Engine Thread-2474 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:51,043 DEBUG sqlalchemy.engine.base.Engine Thread-2475 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:51,045 INFO sqlalchemy.engine.base.Engine Thread-2474 : ROLLBACK
2020-02-01 17:52:51,046 INFO sqlalchemy.engine.base.Engine Thread-2475 : ROLLBACK
2020-02-01 17:52:51,120 INFO sqlalchemy.engine.base.Engine Thread-2476 : BEGIN (implicit)
2020-02-01 17:52:51,121 INFO sqlalchemy.engine.base.Engine Thread-2476 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:52:51,121 INFO sqlalchemy.engine.base.Engine Thread-2476 : (1, 1)
2020-02-01 17:52:51,122 DEBUG sqlalchemy.engine.base.Engine Thread-2476 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:52:51,122 DEBUG sqlalchemy.engine.base.Engine Thread-2476 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:52:51,123 INFO sqlalchemy.engine.base.Engine Thread-2476 : ROLLBACK
2020-02-01 17:53:35,902 INFO sqlalchemy.engine.base.Engine Thread-2478 : BEGIN (implicit)
2020-02-01 17:53:35,903 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:35,904 INFO sqlalchemy.engine.base.Engine Thread-2478 : (1, 1)
2020-02-01 17:53:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:35,907 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:53:35,907 INFO sqlalchemy.engine.base.Engine Thread-2478 : ('philip', 1, 1)
2020-02-01 17:53:35,907 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:35,908 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:35,909 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:53:35,909 INFO sqlalchemy.engine.base.Engine Thread-2478 : ('0', 1)
2020-02-01 17:53:35,910 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:53:35,912 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:53:35,913 INFO sqlalchemy.engine.base.Engine Thread-2478 : (82,)
2020-02-01 17:53:35,913 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:53:35,913 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:53:35,913 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:53:35,914 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:53:35,915 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:53:35,915 INFO sqlalchemy.engine.base.Engine Thread-2478 : (1,)
2020-02-01 17:53:35,915 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:53:35,916 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:53:35,916 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:53:35,917 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:53:35,917 INFO sqlalchemy.engine.base.Engine Thread-2478 : (105,)
2020-02-01 17:53:35,918 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:53:35,918 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:53:35,918 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:53:35,920 INFO sqlalchemy.engine.base.Engine Thread-2478 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:53:35,920 INFO sqlalchemy.engine.base.Engine Thread-2478 : (105,)
2020-02-01 17:53:35,920 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:53:35,920 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:53:35,921 DEBUG sqlalchemy.engine.base.Engine Thread-2478 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:53:35,922 INFO sqlalchemy.engine.base.Engine Thread-2478 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions, doi_locked, doi_hap) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-02-01 17:53:35,922 INFO sqlalchemy.engine.base.Engine Thread-2478 : ('0', 'Change Freeze TEST', 83, '', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'GBR,IND', 106, 106)
2020-02-01 17:53:35,923 INFO sqlalchemy.engine.base.Engine Thread-2478 : COMMIT
2020-02-01 17:53:35,993 INFO sqlalchemy.engine.base.Engine Thread-2479 : BEGIN (implicit)
2020-02-01 17:53:35,994 INFO sqlalchemy.engine.base.Engine Thread-2479 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:35,994 INFO sqlalchemy.engine.base.Engine Thread-2479 : (1, 1)
2020-02-01 17:53:35,995 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:35,995 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:35,997 INFO sqlalchemy.engine.base.Engine Thread-2479 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:53:35,997 INFO sqlalchemy.engine.base.Engine Thread-2479 : ('philip', 1, 1)
2020-02-01 17:53:35,998 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:35,998 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,007 INFO sqlalchemy.engine.base.Engine Thread-2479 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 17:53:36,007 INFO sqlalchemy.engine.base.Engine Thread-2479 : ()
2020-02-01 17:53:36,008 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 17:53:36,008 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-01 17:53:36,008 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:53:36,009 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:53:36,014 INFO sqlalchemy.engine.base.Engine Thread-2479 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:53:36,014 INFO sqlalchemy.engine.base.Engine Thread-2479 : ('philip', 1, 1)
2020-02-01 17:53:36,014 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:36,015 DEBUG sqlalchemy.engine.base.Engine Thread-2479 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,018 INFO sqlalchemy.engine.base.Engine Thread-2479 : ROLLBACK
2020-02-01 17:53:36,546 INFO sqlalchemy.engine.base.Engine Thread-2488 : BEGIN (implicit)
2020-02-01 17:53:36,549 INFO sqlalchemy.engine.base.Engine Thread-2488 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:36,549 INFO sqlalchemy.engine.base.Engine Thread-2488 : (1, 1)
2020-02-01 17:53:36,551 INFO sqlalchemy.engine.base.Engine Thread-2489 : BEGIN (implicit)
2020-02-01 17:53:36,554 INFO sqlalchemy.engine.base.Engine Thread-2489 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:36,553 INFO sqlalchemy.engine.base.Engine Thread-2487 : BEGIN (implicit)
2020-02-01 17:53:36,556 INFO sqlalchemy.engine.base.Engine Thread-2487 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:36,555 INFO sqlalchemy.engine.base.Engine Thread-2489 : (1, 1)
2020-02-01 17:53:36,555 DEBUG sqlalchemy.engine.base.Engine Thread-2488 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:36,557 DEBUG sqlalchemy.engine.base.Engine Thread-2488 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,558 INFO sqlalchemy.engine.base.Engine Thread-2488 : ROLLBACK
2020-02-01 17:53:36,556 INFO sqlalchemy.engine.base.Engine Thread-2487 : (1, 1)
2020-02-01 17:53:36,559 DEBUG sqlalchemy.engine.base.Engine Thread-2487 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:36,558 DEBUG sqlalchemy.engine.base.Engine Thread-2489 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:36,559 DEBUG sqlalchemy.engine.base.Engine Thread-2487 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,561 INFO sqlalchemy.engine.base.Engine Thread-2487 : ROLLBACK
2020-02-01 17:53:36,560 DEBUG sqlalchemy.engine.base.Engine Thread-2489 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,555 INFO sqlalchemy.engine.base.Engine Thread-2490 : BEGIN (implicit)
2020-02-01 17:53:36,563 INFO sqlalchemy.engine.base.Engine Thread-2490 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:36,563 INFO sqlalchemy.engine.base.Engine Thread-2490 : (1, 1)
2020-02-01 17:53:36,564 INFO sqlalchemy.engine.base.Engine Thread-2489 : ROLLBACK
2020-02-01 17:53:36,565 DEBUG sqlalchemy.engine.base.Engine Thread-2490 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:36,565 DEBUG sqlalchemy.engine.base.Engine Thread-2490 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,566 INFO sqlalchemy.engine.base.Engine Thread-2490 : ROLLBACK
2020-02-01 17:53:36,638 INFO sqlalchemy.engine.base.Engine Thread-2491 : BEGIN (implicit)
2020-02-01 17:53:36,639 INFO sqlalchemy.engine.base.Engine Thread-2491 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:36,639 INFO sqlalchemy.engine.base.Engine Thread-2491 : (1, 1)
2020-02-01 17:53:36,639 DEBUG sqlalchemy.engine.base.Engine Thread-2491 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:36,640 DEBUG sqlalchemy.engine.base.Engine Thread-2491 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:36,641 INFO sqlalchemy.engine.base.Engine Thread-2491 : ROLLBACK
2020-02-01 17:53:42,931 INFO sqlalchemy.engine.base.Engine Thread-2492 : BEGIN (implicit)
2020-02-01 17:53:42,933 INFO sqlalchemy.engine.base.Engine Thread-2492 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:53:42,933 INFO sqlalchemy.engine.base.Engine Thread-2492 : ()
2020-02-01 17:53:42,934 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:53:42,935 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:53:42,935 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:53:42,937 INFO sqlalchemy.engine.base.Engine Thread-2492 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:42,937 INFO sqlalchemy.engine.base.Engine Thread-2492 : (1, 1)
2020-02-01 17:53:42,937 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:42,938 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:42,941 INFO sqlalchemy.engine.base.Engine Thread-2492 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:53:42,941 INFO sqlalchemy.engine.base.Engine Thread-2492 : ('philip', 1, 1)
2020-02-01 17:53:42,942 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:42,942 DEBUG sqlalchemy.engine.base.Engine Thread-2492 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:42,944 INFO sqlalchemy.engine.base.Engine Thread-2492 : ROLLBACK
2020-02-01 17:53:43,572 INFO sqlalchemy.engine.base.Engine Thread-2500 : BEGIN (implicit)
2020-02-01 17:53:43,575 INFO sqlalchemy.engine.base.Engine Thread-2501 : BEGIN (implicit)
2020-02-01 17:53:43,576 INFO sqlalchemy.engine.base.Engine Thread-2500 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:43,577 INFO sqlalchemy.engine.base.Engine Thread-2501 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:43,583 INFO sqlalchemy.engine.base.Engine Thread-2501 : (1, 1)
2020-02-01 17:53:43,580 INFO sqlalchemy.engine.base.Engine Thread-2502 : BEGIN (implicit)
2020-02-01 17:53:43,583 INFO sqlalchemy.engine.base.Engine Thread-2500 : (1, 1)
2020-02-01 17:53:43,585 DEBUG sqlalchemy.engine.base.Engine Thread-2500 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:43,584 INFO sqlalchemy.engine.base.Engine Thread-2502 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:43,585 DEBUG sqlalchemy.engine.base.Engine Thread-2501 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:43,583 INFO sqlalchemy.engine.base.Engine Thread-2503 : BEGIN (implicit)
2020-02-01 17:53:43,585 DEBUG sqlalchemy.engine.base.Engine Thread-2500 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:43,586 INFO sqlalchemy.engine.base.Engine Thread-2502 : (1, 1)
2020-02-01 17:53:43,586 DEBUG sqlalchemy.engine.base.Engine Thread-2501 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:43,587 INFO sqlalchemy.engine.base.Engine Thread-2503 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:43,588 INFO sqlalchemy.engine.base.Engine Thread-2500 : ROLLBACK
2020-02-01 17:53:43,589 INFO sqlalchemy.engine.base.Engine Thread-2501 : ROLLBACK
2020-02-01 17:53:43,590 INFO sqlalchemy.engine.base.Engine Thread-2503 : (1, 1)
2020-02-01 17:53:43,590 DEBUG sqlalchemy.engine.base.Engine Thread-2502 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:43,591 DEBUG sqlalchemy.engine.base.Engine Thread-2502 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:43,592 INFO sqlalchemy.engine.base.Engine Thread-2502 : ROLLBACK
2020-02-01 17:53:43,593 DEBUG sqlalchemy.engine.base.Engine Thread-2503 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:43,594 DEBUG sqlalchemy.engine.base.Engine Thread-2503 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:43,595 INFO sqlalchemy.engine.base.Engine Thread-2503 : ROLLBACK
2020-02-01 17:53:43,684 INFO sqlalchemy.engine.base.Engine Thread-2504 : BEGIN (implicit)
2020-02-01 17:53:43,685 INFO sqlalchemy.engine.base.Engine Thread-2504 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:53:43,685 INFO sqlalchemy.engine.base.Engine Thread-2504 : (1, 1)
2020-02-01 17:53:43,686 DEBUG sqlalchemy.engine.base.Engine Thread-2504 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:53:43,686 DEBUG sqlalchemy.engine.base.Engine Thread-2504 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:53:43,687 INFO sqlalchemy.engine.base.Engine Thread-2504 : ROLLBACK
2020-02-01 17:53:43,734 INFO sqlalchemy.engine.base.Engine Thread-2505 : BEGIN (implicit)
2020-02-01 17:53:43,736 INFO sqlalchemy.engine.base.Engine Thread-2505 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:53:43,736 INFO sqlalchemy.engine.base.Engine Thread-2505 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:53:43,736 DEBUG sqlalchemy.engine.base.Engine Thread-2505 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:53:43,737 DEBUG sqlalchemy.engine.base.Engine Thread-2505 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:53:43,737 DEBUG sqlalchemy.engine.base.Engine Thread-2505 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:53:43,737 DEBUG sqlalchemy.engine.base.Engine Thread-2505 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 17:53:43,738 INFO sqlalchemy.engine.base.Engine Thread-2505 : ROLLBACK
2020-02-01 17:54:42,657 INFO sqlalchemy.engine.base.Engine Thread-2506 : BEGIN (implicit)
2020-02-01 17:54:42,658 INFO sqlalchemy.engine.base.Engine Thread-2506 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:42,659 INFO sqlalchemy.engine.base.Engine Thread-2506 : (1, 1)
2020-02-01 17:54:42,659 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:42,660 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:42,662 INFO sqlalchemy.engine.base.Engine Thread-2506 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:54:42,662 INFO sqlalchemy.engine.base.Engine Thread-2506 : ('philip', 1, 1)
2020-02-01 17:54:42,663 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:42,663 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:42,672 INFO sqlalchemy.engine.base.Engine Thread-2506 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 17:54:42,672 INFO sqlalchemy.engine.base.Engine Thread-2506 : ()
2020-02-01 17:54:42,673 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 17:54:42,673 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-01 17:54:42,673 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:54:42,673 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:54:42,673 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:54:42,674 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:54:42,674 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:54:42,674 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:54:42,674 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:54:42,674 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:54:42,674 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:54:42,679 INFO sqlalchemy.engine.base.Engine Thread-2506 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:54:42,679 INFO sqlalchemy.engine.base.Engine Thread-2506 : ('philip', 1, 1)
2020-02-01 17:54:42,679 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:42,680 DEBUG sqlalchemy.engine.base.Engine Thread-2506 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:42,682 INFO sqlalchemy.engine.base.Engine Thread-2506 : ROLLBACK
2020-02-01 17:54:43,237 INFO sqlalchemy.engine.base.Engine Thread-2514 : BEGIN (implicit)
2020-02-01 17:54:43,238 INFO sqlalchemy.engine.base.Engine Thread-2514 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:43,238 INFO sqlalchemy.engine.base.Engine Thread-2514 : (1, 1)
2020-02-01 17:54:43,239 DEBUG sqlalchemy.engine.base.Engine Thread-2514 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:43,239 DEBUG sqlalchemy.engine.base.Engine Thread-2514 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:43,240 INFO sqlalchemy.engine.base.Engine Thread-2514 : ROLLBACK
2020-02-01 17:54:43,254 INFO sqlalchemy.engine.base.Engine Thread-2516 : BEGIN (implicit)
2020-02-01 17:54:43,255 INFO sqlalchemy.engine.base.Engine Thread-2516 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:43,258 INFO sqlalchemy.engine.base.Engine Thread-2515 : BEGIN (implicit)
2020-02-01 17:54:43,258 INFO sqlalchemy.engine.base.Engine Thread-2516 : (1, 1)
2020-02-01 17:54:43,263 INFO sqlalchemy.engine.base.Engine Thread-2517 : BEGIN (implicit)
2020-02-01 17:54:43,264 INFO sqlalchemy.engine.base.Engine Thread-2515 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:43,265 INFO sqlalchemy.engine.base.Engine Thread-2517 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:43,265 DEBUG sqlalchemy.engine.base.Engine Thread-2516 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:43,266 DEBUG sqlalchemy.engine.base.Engine Thread-2516 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:43,266 INFO sqlalchemy.engine.base.Engine Thread-2517 : (1, 1)
2020-02-01 17:54:43,265 INFO sqlalchemy.engine.base.Engine Thread-2515 : (1, 1)
2020-02-01 17:54:43,267 DEBUG sqlalchemy.engine.base.Engine Thread-2517 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:43,267 DEBUG sqlalchemy.engine.base.Engine Thread-2517 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:43,268 DEBUG sqlalchemy.engine.base.Engine Thread-2515 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:43,269 INFO sqlalchemy.engine.base.Engine Thread-2517 : ROLLBACK
2020-02-01 17:54:43,269 DEBUG sqlalchemy.engine.base.Engine Thread-2515 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:43,270 INFO sqlalchemy.engine.base.Engine Thread-2516 : ROLLBACK
2020-02-01 17:54:43,271 INFO sqlalchemy.engine.base.Engine Thread-2515 : ROLLBACK
2020-02-01 17:54:43,348 INFO sqlalchemy.engine.base.Engine Thread-2518 : BEGIN (implicit)
2020-02-01 17:54:43,349 INFO sqlalchemy.engine.base.Engine Thread-2518 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:43,349 INFO sqlalchemy.engine.base.Engine Thread-2518 : (1, 1)
2020-02-01 17:54:43,350 DEBUG sqlalchemy.engine.base.Engine Thread-2518 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:43,350 DEBUG sqlalchemy.engine.base.Engine Thread-2518 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:43,351 INFO sqlalchemy.engine.base.Engine Thread-2518 : ROLLBACK
2020-02-01 17:54:44,810 INFO sqlalchemy.engine.base.Engine Thread-2519 : BEGIN (implicit)
2020-02-01 17:54:44,810 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:44,811 INFO sqlalchemy.engine.base.Engine Thread-2519 : (1, 1)
2020-02-01 17:54:44,811 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:44,812 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:44,814 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:54:44,814 INFO sqlalchemy.engine.base.Engine Thread-2519 : ('philip', 1, 1)
2020-02-01 17:54:44,814 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:44,815 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:44,816 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:54:44,816 INFO sqlalchemy.engine.base.Engine Thread-2519 : ('0', 1)
2020-02-01 17:54:44,816 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:54:44,819 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:54:44,819 INFO sqlalchemy.engine.base.Engine Thread-2519 : (82,)
2020-02-01 17:54:44,819 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:54:44,819 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:54:44,820 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:54:44,820 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:54:44,821 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:54:44,821 INFO sqlalchemy.engine.base.Engine Thread-2519 : (1,)
2020-02-01 17:54:44,822 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:54:44,822 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:54:44,822 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:54:44,823 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:54:44,823 INFO sqlalchemy.engine.base.Engine Thread-2519 : (105,)
2020-02-01 17:54:44,824 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:54:44,824 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:54:44,824 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:54:44,825 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:54:44,825 INFO sqlalchemy.engine.base.Engine Thread-2519 : (105,)
2020-02-01 17:54:44,826 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:54:44,826 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:54:44,827 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:54:44,830 INFO sqlalchemy.engine.base.Engine Thread-2519 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:54:44,831 INFO sqlalchemy.engine.base.Engine Thread-2519 : ('philip', 1, 1)
2020-02-01 17:54:44,831 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:44,831 DEBUG sqlalchemy.engine.base.Engine Thread-2519 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:44,834 INFO sqlalchemy.engine.base.Engine Thread-2519 : ROLLBACK
2020-02-01 17:54:45,357 INFO sqlalchemy.engine.base.Engine Thread-2527 : BEGIN (implicit)
2020-02-01 17:54:45,359 INFO sqlalchemy.engine.base.Engine Thread-2527 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:45,360 INFO sqlalchemy.engine.base.Engine Thread-2527 : (1, 1)
2020-02-01 17:54:45,361 INFO sqlalchemy.engine.base.Engine Thread-2528 : BEGIN (implicit)
2020-02-01 17:54:45,362 INFO sqlalchemy.engine.base.Engine Thread-2528 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:45,362 INFO sqlalchemy.engine.base.Engine Thread-2528 : (1, 1)
2020-02-01 17:54:45,363 DEBUG sqlalchemy.engine.base.Engine Thread-2527 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:45,363 DEBUG sqlalchemy.engine.base.Engine Thread-2528 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:45,376 DEBUG sqlalchemy.engine.base.Engine Thread-2528 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:45,366 INFO sqlalchemy.engine.base.Engine Thread-2529 : BEGIN (implicit)
2020-02-01 17:54:45,376 DEBUG sqlalchemy.engine.base.Engine Thread-2527 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:45,380 INFO sqlalchemy.engine.base.Engine Thread-2527 : ROLLBACK
2020-02-01 17:54:45,377 INFO sqlalchemy.engine.base.Engine Thread-2528 : ROLLBACK
2020-02-01 17:54:45,378 INFO sqlalchemy.engine.base.Engine Thread-2529 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:45,381 INFO sqlalchemy.engine.base.Engine Thread-2529 : (1, 1)
2020-02-01 17:54:45,381 DEBUG sqlalchemy.engine.base.Engine Thread-2529 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:45,382 DEBUG sqlalchemy.engine.base.Engine Thread-2529 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:45,383 INFO sqlalchemy.engine.base.Engine Thread-2529 : ROLLBACK
2020-02-01 17:54:45,369 INFO sqlalchemy.engine.base.Engine Thread-2530 : BEGIN (implicit)
2020-02-01 17:54:45,384 INFO sqlalchemy.engine.base.Engine Thread-2530 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:45,384 INFO sqlalchemy.engine.base.Engine Thread-2530 : (1, 1)
2020-02-01 17:54:45,385 DEBUG sqlalchemy.engine.base.Engine Thread-2530 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:45,386 DEBUG sqlalchemy.engine.base.Engine Thread-2530 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:45,387 INFO sqlalchemy.engine.base.Engine Thread-2530 : ROLLBACK
2020-02-01 17:54:45,450 INFO sqlalchemy.engine.base.Engine Thread-2531 : BEGIN (implicit)
2020-02-01 17:54:45,451 INFO sqlalchemy.engine.base.Engine Thread-2531 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:54:45,451 INFO sqlalchemy.engine.base.Engine Thread-2531 : (1, 1)
2020-02-01 17:54:45,451 DEBUG sqlalchemy.engine.base.Engine Thread-2531 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:54:45,452 DEBUG sqlalchemy.engine.base.Engine Thread-2531 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:54:45,453 INFO sqlalchemy.engine.base.Engine Thread-2531 : ROLLBACK
2020-02-01 17:55:43,430 INFO sqlalchemy.engine.base.Engine Thread-2532 : BEGIN (implicit)
2020-02-01 17:55:43,431 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:43,431 INFO sqlalchemy.engine.base.Engine Thread-2532 : (1, 1)
2020-02-01 17:55:43,433 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:43,433 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:43,435 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:43,435 INFO sqlalchemy.engine.base.Engine Thread-2532 : ('philip', 1, 1)
2020-02-01 17:55:43,436 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:43,436 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:43,438 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:55:43,438 INFO sqlalchemy.engine.base.Engine Thread-2532 : ('0', 1)
2020-02-01 17:55:43,438 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:55:43,442 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:43,442 INFO sqlalchemy.engine.base.Engine Thread-2532 : (82,)
2020-02-01 17:55:43,443 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:43,443 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:55:43,443 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:55:43,443 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:55:43,445 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:55:43,445 INFO sqlalchemy.engine.base.Engine Thread-2532 : (1,)
2020-02-01 17:55:43,445 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:43,445 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:55:43,445 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:55:43,447 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:43,447 INFO sqlalchemy.engine.base.Engine Thread-2532 : (105,)
2020-02-01 17:55:43,447 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:43,448 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:55:43,448 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:55:43,449 INFO sqlalchemy.engine.base.Engine Thread-2532 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:43,450 INFO sqlalchemy.engine.base.Engine Thread-2532 : (105,)
2020-02-01 17:55:43,450 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:43,450 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:55:43,450 DEBUG sqlalchemy.engine.base.Engine Thread-2532 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:55:43,452 INFO sqlalchemy.engine.base.Engine Thread-2532 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions, doi_locked, doi_hap) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-02-01 17:55:43,452 INFO sqlalchemy.engine.base.Engine Thread-2532 : ('0', 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), '', 106, 106)
2020-02-01 17:55:43,453 INFO sqlalchemy.engine.base.Engine Thread-2532 : COMMIT
2020-02-01 17:55:43,541 INFO sqlalchemy.engine.base.Engine Thread-2533 : BEGIN (implicit)
2020-02-01 17:55:43,542 INFO sqlalchemy.engine.base.Engine Thread-2533 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:43,542 INFO sqlalchemy.engine.base.Engine Thread-2533 : (1, 1)
2020-02-01 17:55:43,543 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:43,543 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:43,546 INFO sqlalchemy.engine.base.Engine Thread-2533 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:43,546 INFO sqlalchemy.engine.base.Engine Thread-2533 : ('philip', 1, 1)
2020-02-01 17:55:43,546 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:43,547 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:43,555 INFO sqlalchemy.engine.base.Engine Thread-2533 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 17:55:43,555 INFO sqlalchemy.engine.base.Engine Thread-2533 : ()
2020-02-01 17:55:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 17:55:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (18, 'Test Feb', '', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,556 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:43,557 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:43,561 INFO sqlalchemy.engine.base.Engine Thread-2533 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:43,561 INFO sqlalchemy.engine.base.Engine Thread-2533 : ('philip', 1, 1)
2020-02-01 17:55:43,562 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:43,562 DEBUG sqlalchemy.engine.base.Engine Thread-2533 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:43,565 INFO sqlalchemy.engine.base.Engine Thread-2533 : ROLLBACK
2020-02-01 17:55:44,987 INFO sqlalchemy.engine.base.Engine Thread-2543 : BEGIN (implicit)
2020-02-01 17:55:44,988 INFO sqlalchemy.engine.base.Engine Thread-2543 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:44,988 INFO sqlalchemy.engine.base.Engine Thread-2543 : (1, 1)
2020-02-01 17:55:44,990 INFO sqlalchemy.engine.base.Engine Thread-2544 : BEGIN (implicit)
2020-02-01 17:55:44,992 INFO sqlalchemy.engine.base.Engine Thread-2542 : BEGIN (implicit)
2020-02-01 17:55:44,996 INFO sqlalchemy.engine.base.Engine Thread-2542 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:44,996 INFO sqlalchemy.engine.base.Engine Thread-2542 : (1, 1)
2020-02-01 17:55:44,995 INFO sqlalchemy.engine.base.Engine Thread-2544 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:44,996 INFO sqlalchemy.engine.base.Engine Thread-2544 : (1, 1)
2020-02-01 17:55:44,993 INFO sqlalchemy.engine.base.Engine Thread-2541 : BEGIN (implicit)
2020-02-01 17:55:44,998 INFO sqlalchemy.engine.base.Engine Thread-2541 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:44,997 DEBUG sqlalchemy.engine.base.Engine Thread-2544 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:44,999 DEBUG sqlalchemy.engine.base.Engine Thread-2544 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:44,998 INFO sqlalchemy.engine.base.Engine Thread-2541 : (1, 1)
2020-02-01 17:55:44,994 DEBUG sqlalchemy.engine.base.Engine Thread-2543 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:44,997 DEBUG sqlalchemy.engine.base.Engine Thread-2542 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:45,001 DEBUG sqlalchemy.engine.base.Engine Thread-2542 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:45,000 DEBUG sqlalchemy.engine.base.Engine Thread-2541 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:45,002 DEBUG sqlalchemy.engine.base.Engine Thread-2541 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:45,002 INFO sqlalchemy.engine.base.Engine Thread-2542 : ROLLBACK
2020-02-01 17:55:45,000 INFO sqlalchemy.engine.base.Engine Thread-2544 : ROLLBACK
2020-02-01 17:55:45,001 DEBUG sqlalchemy.engine.base.Engine Thread-2543 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:45,005 INFO sqlalchemy.engine.base.Engine Thread-2543 : ROLLBACK
2020-02-01 17:55:45,006 INFO sqlalchemy.engine.base.Engine Thread-2541 : ROLLBACK
2020-02-01 17:55:45,123 INFO sqlalchemy.engine.base.Engine Thread-2545 : BEGIN (implicit)
2020-02-01 17:55:45,124 INFO sqlalchemy.engine.base.Engine Thread-2545 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:45,125 INFO sqlalchemy.engine.base.Engine Thread-2545 : (1, 1)
2020-02-01 17:55:45,125 DEBUG sqlalchemy.engine.base.Engine Thread-2545 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:45,126 DEBUG sqlalchemy.engine.base.Engine Thread-2545 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:45,127 INFO sqlalchemy.engine.base.Engine Thread-2545 : ROLLBACK
2020-02-01 17:55:48,450 INFO sqlalchemy.engine.base.Engine Thread-2546 : BEGIN (implicit)
2020-02-01 17:55:48,451 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:48,451 INFO sqlalchemy.engine.base.Engine Thread-2546 : (1, 1)
2020-02-01 17:55:48,452 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:48,452 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:48,454 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:48,454 INFO sqlalchemy.engine.base.Engine Thread-2546 : ('philip', 1, 1)
2020-02-01 17:55:48,455 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:48,455 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:48,457 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:55:48,457 INFO sqlalchemy.engine.base.Engine Thread-2546 : ('18', 1)
2020-02-01 17:55:48,457 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:55:48,458 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), '', 106, 106)
2020-02-01 17:55:48,460 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:48,460 INFO sqlalchemy.engine.base.Engine Thread-2546 : (82,)
2020-02-01 17:55:48,461 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:48,461 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:55:48,461 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:55:48,461 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:55:48,463 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:55:48,463 INFO sqlalchemy.engine.base.Engine Thread-2546 : (1,)
2020-02-01 17:55:48,463 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:48,464 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:55:48,464 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:55:48,465 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:48,465 INFO sqlalchemy.engine.base.Engine Thread-2546 : (105,)
2020-02-01 17:55:48,466 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:48,466 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:55:48,466 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:55:48,467 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:48,468 INFO sqlalchemy.engine.base.Engine Thread-2546 : (105,)
2020-02-01 17:55:48,468 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:48,469 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:55:48,469 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:55:48,473 INFO sqlalchemy.engine.base.Engine Thread-2546 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:48,473 INFO sqlalchemy.engine.base.Engine Thread-2546 : ('philip', 1, 1)
2020-02-01 17:55:48,474 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:48,474 DEBUG sqlalchemy.engine.base.Engine Thread-2546 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:48,477 INFO sqlalchemy.engine.base.Engine Thread-2546 : ROLLBACK
2020-02-01 17:55:49,062 INFO sqlalchemy.engine.base.Engine Thread-2554 : BEGIN (implicit)
2020-02-01 17:55:49,065 INFO sqlalchemy.engine.base.Engine Thread-2554 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:49,065 INFO sqlalchemy.engine.base.Engine Thread-2554 : (1, 1)
2020-02-01 17:55:49,066 DEBUG sqlalchemy.engine.base.Engine Thread-2554 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:49,066 DEBUG sqlalchemy.engine.base.Engine Thread-2554 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:49,067 INFO sqlalchemy.engine.base.Engine Thread-2554 : ROLLBACK
2020-02-01 17:55:49,069 INFO sqlalchemy.engine.base.Engine Thread-2555 : BEGIN (implicit)
2020-02-01 17:55:49,070 INFO sqlalchemy.engine.base.Engine Thread-2555 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:49,070 INFO sqlalchemy.engine.base.Engine Thread-2555 : (1, 1)
2020-02-01 17:55:49,072 INFO sqlalchemy.engine.base.Engine Thread-2556 : BEGIN (implicit)
2020-02-01 17:55:49,072 DEBUG sqlalchemy.engine.base.Engine Thread-2555 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:49,076 DEBUG sqlalchemy.engine.base.Engine Thread-2555 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:49,075 INFO sqlalchemy.engine.base.Engine Thread-2556 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:49,077 INFO sqlalchemy.engine.base.Engine Thread-2556 : (1, 1)
2020-02-01 17:55:49,077 INFO sqlalchemy.engine.base.Engine Thread-2555 : ROLLBACK
2020-02-01 17:55:49,074 INFO sqlalchemy.engine.base.Engine Thread-2557 : BEGIN (implicit)
2020-02-01 17:55:49,079 INFO sqlalchemy.engine.base.Engine Thread-2557 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:49,079 INFO sqlalchemy.engine.base.Engine Thread-2557 : (1, 1)
2020-02-01 17:55:49,080 DEBUG sqlalchemy.engine.base.Engine Thread-2556 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:49,080 DEBUG sqlalchemy.engine.base.Engine Thread-2556 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:49,081 INFO sqlalchemy.engine.base.Engine Thread-2556 : ROLLBACK
2020-02-01 17:55:49,082 DEBUG sqlalchemy.engine.base.Engine Thread-2557 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:49,082 DEBUG sqlalchemy.engine.base.Engine Thread-2557 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:49,083 INFO sqlalchemy.engine.base.Engine Thread-2557 : ROLLBACK
2020-02-01 17:55:49,150 INFO sqlalchemy.engine.base.Engine Thread-2558 : BEGIN (implicit)
2020-02-01 17:55:49,151 INFO sqlalchemy.engine.base.Engine Thread-2558 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:49,151 INFO sqlalchemy.engine.base.Engine Thread-2558 : (1, 1)
2020-02-01 17:55:49,152 DEBUG sqlalchemy.engine.base.Engine Thread-2558 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:49,152 DEBUG sqlalchemy.engine.base.Engine Thread-2558 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:49,153 INFO sqlalchemy.engine.base.Engine Thread-2558 : ROLLBACK
2020-02-01 17:55:53,061 INFO sqlalchemy.engine.base.Engine Thread-2559 : BEGIN (implicit)
2020-02-01 17:55:53,063 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,063 INFO sqlalchemy.engine.base.Engine Thread-2559 : (1, 1)
2020-02-01 17:55:53,064 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,064 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,067 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:53,067 INFO sqlalchemy.engine.base.Engine Thread-2559 : ('philip', 1, 1)
2020-02-01 17:55:53,067 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,068 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,069 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-02-01 17:55:53,069 INFO sqlalchemy.engine.base.Engine Thread-2559 : ('18', 1)
2020-02-01 17:55:53,070 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-02-01 17:55:53,070 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (18, 'Test Feb', 83, 'Test Feb', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), '', 106, 106)
2020-02-01 17:55:53,073 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:53,073 INFO sqlalchemy.engine.base.Engine Thread-2559 : (82,)
2020-02-01 17:55:53,074 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:53,074 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-02-01 17:55:53,074 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-02-01 17:55:53,074 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-02-01 17:55:53,075 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-02-01 17:55:53,076 INFO sqlalchemy.engine.base.Engine Thread-2559 : (1,)
2020-02-01 17:55:53,076 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:53,076 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-02-01 17:55:53,076 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-02-01 17:55:53,077 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:53,078 INFO sqlalchemy.engine.base.Engine Thread-2559 : (105,)
2020-02-01 17:55:53,078 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:53,079 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:55:53,079 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:55:53,080 INFO sqlalchemy.engine.base.Engine Thread-2559 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-02-01 17:55:53,080 INFO sqlalchemy.engine.base.Engine Thread-2559 : (105,)
2020-02-01 17:55:53,081 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-02-01 17:55:53,081 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-02-01 17:55:53,081 DEBUG sqlalchemy.engine.base.Engine Thread-2559 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-02-01 17:55:53,083 INFO sqlalchemy.engine.base.Engine Thread-2559 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_regions=%s WHERE datesofinterest.id = %s
2020-02-01 17:55:53,083 INFO sqlalchemy.engine.base.Engine Thread-2559 : ('18', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'GBR,IND', 18)
2020-02-01 17:55:53,084 INFO sqlalchemy.engine.base.Engine Thread-2559 : COMMIT
2020-02-01 17:55:53,151 INFO sqlalchemy.engine.base.Engine Thread-2560 : BEGIN (implicit)
2020-02-01 17:55:53,152 INFO sqlalchemy.engine.base.Engine Thread-2560 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,152 INFO sqlalchemy.engine.base.Engine Thread-2560 : (1, 1)
2020-02-01 17:55:53,153 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,153 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,155 INFO sqlalchemy.engine.base.Engine Thread-2560 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:53,155 INFO sqlalchemy.engine.base.Engine Thread-2560 : ('philip', 1, 1)
2020-02-01 17:55:53,156 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,156 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,165 INFO sqlalchemy.engine.base.Engine Thread-2560 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-02-01 17:55:53,165 INFO sqlalchemy.engine.base.Engine Thread-2560 : ()
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (17, 'Change Freeze TEST', 'GBR,IND', datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (18, 'Test Feb', 'GBR,IND', datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (16, 'Important Thing', 'GBR,IND', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,166 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,167 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (15, 'Summer Change Freeze', 'GBR,IND', datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,167 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:53,167 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-02-01 17:55:53,167 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-02-01 17:55:53,171 INFO sqlalchemy.engine.base.Engine Thread-2560 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:55:53,171 INFO sqlalchemy.engine.base.Engine Thread-2560 : ('philip', 1, 1)
2020-02-01 17:55:53,172 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,172 DEBUG sqlalchemy.engine.base.Engine Thread-2560 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,176 INFO sqlalchemy.engine.base.Engine Thread-2560 : ROLLBACK
2020-02-01 17:55:53,761 INFO sqlalchemy.engine.base.Engine Thread-2569 : BEGIN (implicit)
2020-02-01 17:55:53,764 INFO sqlalchemy.engine.base.Engine Thread-2569 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,764 INFO sqlalchemy.engine.base.Engine Thread-2569 : (1, 1)
2020-02-01 17:55:53,766 DEBUG sqlalchemy.engine.base.Engine Thread-2569 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,766 DEBUG sqlalchemy.engine.base.Engine Thread-2569 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,770 INFO sqlalchemy.engine.base.Engine Thread-2569 : ROLLBACK
2020-02-01 17:55:53,771 INFO sqlalchemy.engine.base.Engine Thread-2568 : BEGIN (implicit)
2020-02-01 17:55:53,772 INFO sqlalchemy.engine.base.Engine Thread-2568 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,773 INFO sqlalchemy.engine.base.Engine Thread-2571 : BEGIN (implicit)
2020-02-01 17:55:53,776 INFO sqlalchemy.engine.base.Engine Thread-2571 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,775 INFO sqlalchemy.engine.base.Engine Thread-2568 : (1, 1)
2020-02-01 17:55:53,776 INFO sqlalchemy.engine.base.Engine Thread-2571 : (1, 1)
2020-02-01 17:55:53,775 INFO sqlalchemy.engine.base.Engine Thread-2570 : BEGIN (implicit)
2020-02-01 17:55:53,778 INFO sqlalchemy.engine.base.Engine Thread-2570 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,778 INFO sqlalchemy.engine.base.Engine Thread-2570 : (1, 1)
2020-02-01 17:55:53,779 DEBUG sqlalchemy.engine.base.Engine Thread-2571 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,779 DEBUG sqlalchemy.engine.base.Engine Thread-2571 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,780 INFO sqlalchemy.engine.base.Engine Thread-2571 : ROLLBACK
2020-02-01 17:55:53,781 DEBUG sqlalchemy.engine.base.Engine Thread-2568 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,781 DEBUG sqlalchemy.engine.base.Engine Thread-2568 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,782 INFO sqlalchemy.engine.base.Engine Thread-2568 : ROLLBACK
2020-02-01 17:55:53,784 DEBUG sqlalchemy.engine.base.Engine Thread-2570 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,784 DEBUG sqlalchemy.engine.base.Engine Thread-2570 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,785 INFO sqlalchemy.engine.base.Engine Thread-2570 : ROLLBACK
2020-02-01 17:55:53,855 INFO sqlalchemy.engine.base.Engine Thread-2572 : BEGIN (implicit)
2020-02-01 17:55:53,856 INFO sqlalchemy.engine.base.Engine Thread-2572 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:55:53,856 INFO sqlalchemy.engine.base.Engine Thread-2572 : (1, 1)
2020-02-01 17:55:53,857 DEBUG sqlalchemy.engine.base.Engine Thread-2572 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:55:53,857 DEBUG sqlalchemy.engine.base.Engine Thread-2572 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:55:53,858 INFO sqlalchemy.engine.base.Engine Thread-2572 : ROLLBACK
2020-02-01 17:56:18,591 INFO sqlalchemy.engine.base.Engine Thread-2573 : BEGIN (implicit)
2020-02-01 17:56:18,593 INFO sqlalchemy.engine.base.Engine Thread-2573 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 17:56:18,593 INFO sqlalchemy.engine.base.Engine Thread-2573 : ()
2020-02-01 17:56:18,594 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 17:56:18,594 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 17:56:18,594 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 17:56:18,596 INFO sqlalchemy.engine.base.Engine Thread-2573 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:56:18,597 INFO sqlalchemy.engine.base.Engine Thread-2573 : (1, 1)
2020-02-01 17:56:18,597 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:18,597 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:18,602 INFO sqlalchemy.engine.base.Engine Thread-2573 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 17:56:18,602 INFO sqlalchemy.engine.base.Engine Thread-2573 : ('philip', 1, 1)
2020-02-01 17:56:18,603 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:18,603 DEBUG sqlalchemy.engine.base.Engine Thread-2573 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:18,604 INFO sqlalchemy.engine.base.Engine Thread-2573 : ROLLBACK
2020-02-01 17:56:19,216 INFO sqlalchemy.engine.base.Engine Thread-2581 : BEGIN (implicit)
2020-02-01 17:56:19,217 INFO sqlalchemy.engine.base.Engine Thread-2581 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:56:19,220 INFO sqlalchemy.engine.base.Engine Thread-2581 : (1, 1)
2020-02-01 17:56:19,220 INFO sqlalchemy.engine.base.Engine Thread-2582 : BEGIN (implicit)
2020-02-01 17:56:19,221 INFO sqlalchemy.engine.base.Engine Thread-2582 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:56:19,221 INFO sqlalchemy.engine.base.Engine Thread-2582 : (1, 1)
2020-02-01 17:56:19,223 DEBUG sqlalchemy.engine.base.Engine Thread-2582 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:19,224 DEBUG sqlalchemy.engine.base.Engine Thread-2581 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:19,229 DEBUG sqlalchemy.engine.base.Engine Thread-2581 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:19,225 INFO sqlalchemy.engine.base.Engine Thread-2583 : BEGIN (implicit)
2020-02-01 17:56:19,224 DEBUG sqlalchemy.engine.base.Engine Thread-2582 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:19,234 INFO sqlalchemy.engine.base.Engine Thread-2582 : ROLLBACK
2020-02-01 17:56:19,232 INFO sqlalchemy.engine.base.Engine Thread-2581 : ROLLBACK
2020-02-01 17:56:19,231 INFO sqlalchemy.engine.base.Engine Thread-2584 : BEGIN (implicit)
2020-02-01 17:56:19,233 INFO sqlalchemy.engine.base.Engine Thread-2583 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:56:19,236 INFO sqlalchemy.engine.base.Engine Thread-2584 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:56:19,237 INFO sqlalchemy.engine.base.Engine Thread-2583 : (1, 1)
2020-02-01 17:56:19,237 INFO sqlalchemy.engine.base.Engine Thread-2584 : (1, 1)
2020-02-01 17:56:19,238 DEBUG sqlalchemy.engine.base.Engine Thread-2583 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:19,238 DEBUG sqlalchemy.engine.base.Engine Thread-2583 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:19,239 DEBUG sqlalchemy.engine.base.Engine Thread-2584 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:19,239 DEBUG sqlalchemy.engine.base.Engine Thread-2584 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:19,240 INFO sqlalchemy.engine.base.Engine Thread-2583 : ROLLBACK
2020-02-01 17:56:19,241 INFO sqlalchemy.engine.base.Engine Thread-2584 : ROLLBACK
2020-02-01 17:56:19,306 INFO sqlalchemy.engine.base.Engine Thread-2585 : BEGIN (implicit)
2020-02-01 17:56:19,307 INFO sqlalchemy.engine.base.Engine Thread-2585 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 17:56:19,307 INFO sqlalchemy.engine.base.Engine Thread-2585 : (1, 1)
2020-02-01 17:56:19,307 DEBUG sqlalchemy.engine.base.Engine Thread-2585 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 17:56:19,308 DEBUG sqlalchemy.engine.base.Engine Thread-2585 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 17:56:19,309 INFO sqlalchemy.engine.base.Engine Thread-2585 : ROLLBACK
2020-02-01 17:56:19,346 INFO sqlalchemy.engine.base.Engine Thread-2586 : BEGIN (implicit)
2020-02-01 17:56:19,348 INFO sqlalchemy.engine.base.Engine Thread-2586 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:56:19,348 INFO sqlalchemy.engine.base.Engine Thread-2586 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:56:19,348 DEBUG sqlalchemy.engine.base.Engine Thread-2586 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:56:19,349 DEBUG sqlalchemy.engine.base.Engine Thread-2586 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:56:19,349 DEBUG sqlalchemy.engine.base.Engine Thread-2586 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:56:19,349 DEBUG sqlalchemy.engine.base.Engine Thread-2586 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 17:56:19,349 DEBUG sqlalchemy.engine.base.Engine Thread-2586 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-01 17:56:19,350 INFO sqlalchemy.engine.base.Engine Thread-2586 : ROLLBACK
2020-02-01 17:56:57,525 INFO sqlalchemy.engine.base.Engine Thread-2587 : BEGIN (implicit)
2020-02-01 17:56:57,526 INFO sqlalchemy.engine.base.Engine Thread-2587 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:56:57,526 INFO sqlalchemy.engine.base.Engine Thread-2587 : ('LightBlue', 'black', datetime.datetime(2021, 2, 23, 0, 0), datetime.datetime(2021, 2, 24, 0, 0), datetime.datetime(2021, 2, 23, 0, 0), datetime.datetime(2021, 2, 24, 0, 0), datetime.datetime(2021, 2, 23, 0, 0), datetime.datetime(2021, 2, 24, 0, 0))
2020-02-01 17:56:57,527 DEBUG sqlalchemy.engine.base.Engine Thread-2587 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:56:57,528 INFO sqlalchemy.engine.base.Engine Thread-2587 : ROLLBACK
2020-02-01 17:56:58,311 INFO sqlalchemy.engine.base.Engine Thread-2588 : BEGIN (implicit)
2020-02-01 17:56:58,312 INFO sqlalchemy.engine.base.Engine Thread-2588 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:56:58,312 INFO sqlalchemy.engine.base.Engine Thread-2588 : ('LightBlue', 'black', datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 0, 0))
2020-02-01 17:56:58,313 DEBUG sqlalchemy.engine.base.Engine Thread-2588 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:56:58,313 DEBUG sqlalchemy.engine.base.Engine Thread-2588 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:56:58,314 DEBUG sqlalchemy.engine.base.Engine Thread-2588 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:56:58,314 DEBUG sqlalchemy.engine.base.Engine Thread-2588 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 17:56:58,314 DEBUG sqlalchemy.engine.base.Engine Thread-2588 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-01 17:56:58,315 INFO sqlalchemy.engine.base.Engine Thread-2588 : ROLLBACK
2020-02-01 17:57:00,012 INFO sqlalchemy.engine.base.Engine Thread-2589 : BEGIN (implicit)
2020-02-01 17:57:00,013 INFO sqlalchemy.engine.base.Engine Thread-2589 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:57:00,014 INFO sqlalchemy.engine.base.Engine Thread-2589 : ('LightBlue', 'black', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 2, 0, 0), datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 2, 0, 0), datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 2, 0, 0))
2020-02-01 17:57:00,014 DEBUG sqlalchemy.engine.base.Engine Thread-2589 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:57:00,015 INFO sqlalchemy.engine.base.Engine Thread-2589 : ROLLBACK
2020-02-01 17:57:01,176 INFO sqlalchemy.engine.base.Engine Thread-2590 : BEGIN (implicit)
2020-02-01 17:57:01,177 INFO sqlalchemy.engine.base.Engine Thread-2590 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 17:57:01,177 INFO sqlalchemy.engine.base.Engine Thread-2590 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-02-01 17:57:01,178 DEBUG sqlalchemy.engine.base.Engine Thread-2590 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 17:57:01,178 DEBUG sqlalchemy.engine.base.Engine Thread-2590 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 17:57:01,178 DEBUG sqlalchemy.engine.base.Engine Thread-2590 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 17:57:01,178 DEBUG sqlalchemy.engine.base.Engine Thread-2590 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 17:57:01,179 DEBUG sqlalchemy.engine.base.Engine Thread-2590 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-01 17:57:01,180 INFO sqlalchemy.engine.base.Engine Thread-2590 : ROLLBACK
2020-02-01 18:01:34,323 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:01:34,323 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,324 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:01:34,324 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 18:01:34,325 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:01:34,325 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,325 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:01:34,325 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 18:01:34,326 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 18:01:34,326 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,326 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 18:01:34,326 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 18:01:34,327 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:01:34,327 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,327 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:01:34,327 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:01:34,328 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:01:34,328 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,329 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:01:34,329 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,329 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:01:34,329 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,330 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 18:01:34,335 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 18:01:34,336 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:34,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 18:01:34,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 18:01:34,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 18:01:34,341 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:34,341 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-02-01 18:01:34,342 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:34,342 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:34,406 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 18:01:34,407 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-02-01 18:01:34,407 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:34,408 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:34,409 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 18:01:34,952 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-02-01 18:01:34,955 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:34,957 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-02-01 18:01:34,957 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-02-01 18:01:34,958 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:34,965 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:34,961 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:34,965 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-02-01 18:01:34,971 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-02-01 18:01:34,971 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-01 18:01:34,976 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-02-01 18:01:34,977 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:34,978 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-02-01 18:01:34,978 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:34,979 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-01 18:01:34,978 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:34,979 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:34,980 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-02-01 18:01:34,981 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:34,981 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:34,982 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-02-01 18:01:34,983 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:34,984 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:34,985 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-01 18:01:35,157 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-01 18:01:35,158 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:35,158 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-01 18:01:35,158 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:35,159 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:35,159 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-01 18:01:35,202 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-02-01 18:01:35,203 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE false = 1
2020-02-01 18:01:35,203 INFO sqlalchemy.engine.base.Engine Thread-15 : ('LightBlue', 'black')
2020-02-01 18:01:35,204 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:01:35,205 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-02-01 18:01:37,745 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-02-01 18:01:37,746 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE false = 1
2020-02-01 18:01:37,746 INFO sqlalchemy.engine.base.Engine Thread-17 : ('LightBlue', 'black')
2020-02-01 18:01:37,747 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:01:37,747 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-02-01 18:01:38,331 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-02-01 18:01:38,331 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE false = 1
2020-02-01 18:01:38,332 INFO sqlalchemy.engine.base.Engine Thread-18 : ('LightBlue', 'black')
2020-02-01 18:01:38,332 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:01:38,333 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-02-01 18:01:42,761 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-02-01 18:01:42,762 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE false = 1
2020-02-01 18:01:42,762 INFO sqlalchemy.engine.base.Engine Thread-19 : ('LightBlue', 'black')
2020-02-01 18:01:42,763 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:01:42,764 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-02-01 18:01:43,139 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-02-01 18:01:43,140 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:43,140 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-02-01 18:01:43,141 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:43,141 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:43,142 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-02-01 18:01:44,438 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-02-01 18:01:44,440 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE false = 1
2020-02-01 18:01:44,440 INFO sqlalchemy.engine.base.Engine Thread-21 : ('LightBlue', 'black')
2020-02-01 18:01:44,440 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:01:44,441 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-02-01 18:01:44,713 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-02-01 18:01:44,714 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:44,714 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-02-01 18:01:44,715 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:44,715 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:44,716 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-02-01 18:01:56,895 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:01:56,895 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,897 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:01:56,897 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 18:01:56,898 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:01:56,898 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:01:56,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 18:01:56,899 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 18:01:56,899 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 18:01:56,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 18:01:56,899 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:01:56,899 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:01:56,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:01:56,901 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:01:56,901 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,902 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:01:56,902 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,902 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:01:56,902 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:01:56,903 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 18:01:56,905 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 18:01:56,905 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-02-01 18:01:56,906 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-01 18:01:56,909 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 18:01:57,281 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:01:57,283 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:01:57,284 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:01:57,284 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:01:57,285 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:01:57,302 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 18:02:24,393 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:02:24,393 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,394 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:02:24,395 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 18:02:24,395 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:02:24,395 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,396 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:02:24,396 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 18:02:24,396 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 18:02:24,396 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,397 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 18:02:24,397 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 18:02:24,397 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:02:24,397 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,398 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:02:24,398 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:02:24,399 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:02:24,399 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,399 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:02:24,399 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,400 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:02:24,400 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:02:24,401 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 18:02:24,402 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE false = 1
2020-02-01 18:02:24,402 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black')
2020-02-01 18:02:24,403 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:02:24,404 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 18:02:24,711 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:02:24,714 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:02:24,714 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:02:24,715 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:02:24,715 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:02:24,732 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 18:02:54,105 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:02:54,105 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,106 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:02:54,107 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-01 18:02:54,107 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:02:54,107 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,108 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:02:54,108 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-01 18:02:54,108 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-01 18:02:54,108 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,109 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-01 18:02:54,109 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-01 18:02:54,109 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:02:54,109 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,110 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:02:54,110 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:02:54,111 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:02:54,111 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,111 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:02:54,111 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,112 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:02:54,112 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:02:54,112 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:02:54,115 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:02:54,115 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:02:54,116 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:02:54,116 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:02:54,132 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 18:03:20,918 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:03:20,919 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,920 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:03:20,921 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-01 18:03:20,921 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:03:20,921 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,922 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:03:20,922 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-01 18:03:20,922 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-01 18:03:20,923 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,923 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-01 18:03:20,923 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-01 18:03:20,923 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:03:20,923 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,924 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:03:20,924 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:03:20,925 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:03:20,925 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,926 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:03:20,926 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,926 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:03:20,926 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:03:20,927 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:03:20,929 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:03:20,929 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:03:20,930 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:03:20,930 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:03:20,948 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 18:04:07,009 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:04:07,009 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,010 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:04:07,011 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 18:04:07,011 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:04:07,011 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 18:04:07,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 18:04:07,012 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 18:04:07,012 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 18:04:07,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 18:04:07,013 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:04:07,013 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:04:07,014 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:04:07,015 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:04:07,015 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,016 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:04:07,016 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,016 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:04:07,016 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 18:04:07,017 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 18:04:07,019 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AND parameters_1.param_value = %s
2020-02-01 18:04:07,019 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-01 18:04:07,020 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:04:07,021 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 18:04:07,457 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:04:07,459 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:04:07,459 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:04:07,460 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:04:07,460 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:04:07,477 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 18:04:09,176 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-02-01 18:04:09,178 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AND parameters_1.param_value = %s
2020-02-01 18:04:09,178 INFO sqlalchemy.engine.base.Engine Thread-4 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'Yes')
2020-02-01 18:04:09,178 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 18:04:09,179 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-02-01 18:04:09,433 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-02-01 18:04:09,434 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:04:09,434 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-02-01 18:04:09,435 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:04:09,435 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:04:09,436 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-02-01 18:05:36,195 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:05:36,195 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,196 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:05:36,197 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-01 18:05:36,197 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:05:36,197 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,198 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:05:36,198 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-01 18:05:36,198 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-01 18:05:36,198 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,198 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-01 18:05:36,198 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-01 18:05:36,199 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:05:36,199 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,199 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:05:36,200 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:05:36,200 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:05:36,200 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,201 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:05:36,201 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,202 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:05:36,202 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:36,202 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:05:36,205 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:05:36,205 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:05:36,206 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:05:36,206 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:05:36,225 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 18:05:59,924 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 18:05:59,925 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,927 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:05:59,927 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-02-01 18:05:59,928 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 18:05:59,928 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,929 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-02-01 18:05:59,929 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-02-01 18:05:59,929 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-02-01 18:05:59,929 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,929 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-02-01 18:05:59,930 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-02-01 18:05:59,930 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 18:05:59,930 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,931 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 18:05:59,931 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 18:05:59,931 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 18:05:59,932 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,932 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 18:05:59,932 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,933 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 18:05:59,933 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-02-01 18:05:59,933 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 18:05:59,936 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 18:05:59,936 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 18:05:59,937 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 18:05:59,937 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 18:05:59,955 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 23:43:38,251 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-02-01 23:43:38,257 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 23:43:38,257 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-02-01 23:43:38,259 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 23:43:38,260 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 23:43:38,260 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 23:43:38,262 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:38,262 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-02-01 23:43:38,263 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:38,263 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:38,322 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 23:43:38,322 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-02-01 23:43:38,324 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:38,324 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:38,326 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-02-01 23:43:38,890 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-01 23:43:38,891 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:38,892 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-01 23:43:38,893 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:38,894 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:38,897 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-01 23:43:38,902 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-02-01 23:43:38,903 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:38,903 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-02-01 23:43:38,904 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:38,904 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:38,905 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-01 23:43:38,906 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:38,907 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-02-01 23:43:38,909 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-01 23:43:38,911 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-02-01 23:43:38,912 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:38,912 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-02-01 23:43:38,913 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:38,913 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:38,914 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-01 23:43:38,915 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:38,916 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:38,917 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-02-01 23:43:39,078 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-02-01 23:43:39,079 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:39,079 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-02-01 23:43:39,080 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:39,080 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:39,081 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-02-01 23:43:48,656 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 23:43:48,656 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,657 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 23:43:48,657 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 23:43:48,658 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 23:43:48,658 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 23:43:48,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 23:43:48,659 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 23:43:48,659 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 23:43:48,660 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 23:43:48,660 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 23:43:48,660 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,661 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 23:43:48,661 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 23:43:48,662 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 23:43:48,662 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,663 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 23:43:48,663 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,663 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 23:43:48,663 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,664 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 23:43:48,671 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-02-01 23:43:48,671 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:43:48,672 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-02-01 23:43:48,673 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-02-01 23:43:48,673 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-02-01 23:43:48,677 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:48,677 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-02-01 23:43:48,678 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:48,678 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:48,742 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-02-01 23:43:48,742 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-02-01 23:43:48,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:48,743 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:48,745 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 23:43:49,249 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-02-01 23:43:49,253 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:49,255 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-02-01 23:43:49,257 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-02-01 23:43:49,259 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:49,260 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:49,262 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:49,263 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-02-01 23:43:49,265 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:49,265 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-02-01 23:43:49,263 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-02-01 23:43:49,264 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-02-01 23:43:49,266 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:49,278 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:49,267 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:49,266 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:49,279 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-02-01 23:43:49,280 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-02-01 23:43:49,280 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-02-01 23:43:49,280 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:49,282 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-02-01 23:43:49,284 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:49,285 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:49,286 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-02-01 23:43:49,347 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-02-01 23:43:49,348 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:49,348 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-02-01 23:43:49,349 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:49,349 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:49,350 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-02-01 23:43:56,668 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-02-01 23:43:56,669 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:43:56,669 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-02-01 23:43:56,670 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:43:56,670 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:43:56,671 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-02-01 23:44:07,841 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 23:44:07,841 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,843 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 23:44:07,843 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 23:44:07,844 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 23:44:07,844 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,844 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 23:44:07,845 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 23:44:07,845 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 23:44:07,845 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 23:44:07,846 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 23:44:07,846 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 23:44:07,846 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,847 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 23:44:07,847 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 23:44:07,848 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 23:44:07,848 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,849 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 23:44:07,849 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,849 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 23:44:07,849 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:44:07,850 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 23:44:07,852 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 23:44:07,852 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-02-01 23:44:07,853 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 23:44:07,853 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,854 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,855 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-01 23:44:07,857 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 23:44:08,171 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 23:44:08,174 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:44:08,174 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 23:44:08,175 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:44:08,176 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:44:08,194 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-02-01 23:49:38,376 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-02-01 23:49:38,376 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,378 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 23:49:38,378 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-02-01 23:49:38,379 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-02-01 23:49:38,379 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,379 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-02-01 23:49:38,380 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-02-01 23:49:38,380 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-02-01 23:49:38,380 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,380 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-02-01 23:49:38,380 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-02-01 23:49:38,381 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-02-01 23:49:38,381 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,382 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-02-01 23:49:38,382 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-02-01 23:49:38,382 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-02-01 23:49:38,383 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,383 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-02-01 23:49:38,383 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,384 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-02-01 23:49:38,384 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-02-01 23:49:38,384 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-02-01 23:49:38,386 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-02-01 23:49:38,386 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-02-01 23:49:38,387 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'No')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 7, 23, 0, 0), datetime.datetime(2020, 7, 25, 23, 45), 'Summer Change Freeze', 'Summer Change Freeze', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,388 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 23, 0, 0), datetime.datetime(2020, 2, 24, 23, 45), 'Important Thing', 'Important Thing', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 19, 0, 0), datetime.datetime(2020, 2, 23, 18, 0), 'Change Freeze TEST', '', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,389 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 20, 0, 0), datetime.datetime(2020, 2, 26, 23, 45), 'Test Feb', 'Test Feb', 'LightBlue', 'black', 'Yes')
2020-02-01 23:49:38,390 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-02-01 23:49:38,727 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-02-01 23:49:38,729 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-02-01 23:49:38,729 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-02-01 23:49:38,730 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-02-01 23:49:38,730 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-02-01 23:49:38,748 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
