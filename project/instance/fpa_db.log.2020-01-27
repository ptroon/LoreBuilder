2020-01-27 01:20:50,570 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:20:50,572 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2019, 1, 1, 0, 0), datetime.datetime(2020, 1, 27, 0, 0))
2020-01-27 01:20:50,574 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('start', 'end', 'title')
2020-01-27 01:21:33,736 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title 
FROM datesofinterest AS datesofinterest_1
2020-01-27 01:21:33,736 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-27 01:21:33,737 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('start', 'end', 'title')
2020-01-27 01:21:33,738 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday')
2020-01-27 01:21:33,738 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'Easter Holiday')
2020-01-27 01:21:33,738 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze')
2020-01-27 01:22:16,527 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:22:16,527 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 5, 27, 0, 0))
2020-01-27 01:22:16,528 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('start', 'end', 'title')
2020-01-27 01:22:16,528 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday')
2020-01-27 01:22:16,528 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'Easter Holiday')
2020-01-27 01:22:16,528 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze')
2020-01-27 01:23:39,897 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:23:39,898 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:23:39,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 01:23:39,900 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:23:39,900 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:23:39,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 01:23:39,901 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 01:23:39,901 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 01:23:39,902 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 01:23:39,902 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:23:39,902 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,903 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:23:39,903 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:23:39,904 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:23:39,904 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,905 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:23:39,905 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,905 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:23:39,906 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:23:39,906 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 01:23:39,912 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:23:39,912 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2019, 1, 27, 0, 0), datetime.datetime(2020, 3, 27, 0, 0))
2020-01-27 01:23:39,913 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title')
2020-01-27 01:23:39,913 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday')
2020-01-27 01:23:39,913 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze')
2020-01-27 01:23:39,915 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 01:23:53,906 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 01:23:53,908 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 01:27:57,735 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:27:57,735 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:27:57,737 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 01:27:57,737 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:27:57,738 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,738 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:27:57,738 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 01:27:57,738 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 01:27:57,739 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 01:27:57,739 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 01:27:57,739 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:27:57,739 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:27:57,740 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:27:57,741 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:27:57,741 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,741 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:27:57,742 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,742 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:27:57,742 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:27:57,743 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 01:27:57,744 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:27:57,744 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2019, 1, 27, 0, 0), datetime.datetime(2020, 3, 27, 0, 0))
2020-01-27 01:27:57,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title')
2020-01-27 01:27:57,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday')
2020-01-27 01:27:57,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze')
2020-01-27 01:27:57,747 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 01:29:10,043 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:29:10,043 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,044 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:29:10,045 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 01:29:10,045 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:29:10,046 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,046 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:29:10,046 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 01:29:10,046 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 01:29:10,047 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,047 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 01:29:10,047 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 01:29:10,047 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:29:10,047 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,048 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:29:10,048 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:29:10,049 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:29:10,049 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,049 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:29:10,049 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,050 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:29:10,050 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:29:10,051 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 01:29:10,052 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:29:10,052 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2019, 1, 27, 0, 0), datetime.datetime(2020, 3, 27, 0, 0))
2020-01-27 01:29:10,053 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:29:10,053 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday', 'test')
2020-01-27 01:29:10,053 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:29:10,054 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 01:30:44,140 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 01:30:44,148 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:30:44,148 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:30:44,149 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:30:44,150 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:30:44,150 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:30:44,154 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:44,154 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-27 01:30:44,155 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:44,155 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:44,212 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:30:44,212 INFO sqlalchemy.engine.base.Engine Thread-3 : ('philip', 1, 1)
2020-01-27 01:30:44,213 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:44,214 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:44,215 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 01:30:44,773 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-27 01:30:44,774 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:44,774 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-27 01:30:44,775 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:44,775 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:44,786 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-27 01:30:46,721 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-27 01:30:46,722 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:46,722 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-01-27 01:30:46,723 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:46,723 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:46,724 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-27 01:30:47,383 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-27 01:30:47,385 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:47,385 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-01-27 01:30:47,386 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:47,386 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:47,387 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-27 01:30:49,189 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-27 01:30:49,190 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:49,190 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-01-27 01:30:49,191 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:49,192 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:49,193 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-27 01:30:50,095 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-27 01:30:50,096 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:50,096 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-01-27 01:30:50,097 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:50,098 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:50,099 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-27 01:30:50,741 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-27 01:30:50,742 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:50,742 INFO sqlalchemy.engine.base.Engine Thread-15 : (1, 1)
2020-01-27 01:30:50,743 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:50,743 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:50,744 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-27 01:30:51,691 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-27 01:30:51,692 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:51,692 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-27 01:30:51,693 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:51,693 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:51,694 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-27 01:30:51,967 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-27 01:30:51,968 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:51,968 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-27 01:30:51,969 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:51,969 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:51,970 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-27 01:30:52,155 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-27 01:30:52,156 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:52,156 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-01-27 01:30:52,157 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:52,157 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:52,158 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-27 01:30:52,373 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-27 01:30:52,374 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:52,374 INFO sqlalchemy.engine.base.Engine Thread-19 : (1, 1)
2020-01-27 01:30:52,375 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:52,375 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:52,376 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-27 01:30:53,962 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-27 01:30:53,963 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:53,963 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-01-27 01:30:53,964 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:53,964 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:53,965 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-27 01:30:54,825 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-27 01:30:54,826 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:54,826 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-01-27 01:30:54,827 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:54,827 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:54,828 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-27 01:30:55,671 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-01-27 01:30:55,672 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:30:55,672 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-01-27 01:30:55,673 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:30:55,674 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:30:55,675 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-01-27 01:31:00,598 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-27 01:31:00,599 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:31:00,599 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-01-27 01:31:00,599 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:00,600 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:00,602 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:31:00,602 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-27 01:31:00,602 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:00,602 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:00,617 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:31:00,617 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-27 01:31:00,618 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:00,618 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:00,621 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 01:31:00,621 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-01-27 01:31:00,622 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:31:00,623 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:31:00,623 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:31:00,623 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:31:00,624 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-27 01:31:11,408 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-27 01:31:11,409 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:31:11,409 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-01-27 01:31:11,410 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:11,410 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:11,412 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:31:11,412 INFO sqlalchemy.engine.base.Engine Thread-30 : ('philip', 1, 1)
2020-01-27 01:31:11,413 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:11,413 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:11,415 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:31:11,415 INFO sqlalchemy.engine.base.Engine Thread-30 : (75,)
2020-01-27 01:31:11,416 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:31:11,416 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:31:11,416 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:31:11,418 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:31:11,418 INFO sqlalchemy.engine.base.Engine Thread-30 : (78,)
2020-01-27 01:31:11,418 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:31:11,418 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 01:31:11,418 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 01:31:11,419 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 01:31:11,432 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:31:11,432 INFO sqlalchemy.engine.base.Engine Thread-30 : ('philip', 1, 1)
2020-01-27 01:31:11,433 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:11,433 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:12,784 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-27 01:31:18,290 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-27 01:31:18,291 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:31:18,291 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-01-27 01:31:18,292 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:18,292 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:18,294 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:31:18,295 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-27 01:31:18,295 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:18,295 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:18,298 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:31:18,298 INFO sqlalchemy.engine.base.Engine Thread-37 : (75,)
2020-01-27 01:31:18,298 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:31:18,298 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:31:18,299 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:31:18,300 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:31:18,300 INFO sqlalchemy.engine.base.Engine Thread-37 : (78,)
2020-01-27 01:31:18,301 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:31:18,301 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 01:31:18,301 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 01:31:18,301 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 01:31:18,306 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:31:18,306 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-27 01:31:18,307 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:18,307 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:19,760 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-27 01:31:58,233 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-01-27 01:31:58,234 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:31:58,234 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-01-27 01:31:58,235 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:31:58,236 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:31:58,237 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-01-27 01:32:47,745 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-01-27 01:32:47,746 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:32:47,746 INFO sqlalchemy.engine.base.Engine Thread-45 : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 5, 1, 0, 0))
2020-01-27 01:32:47,747 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:32:47,747 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday', 'test')
2020-01-27 01:32:47,747 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'Easter Holiday', 'Easter Holiday 123')
2020-01-27 01:32:47,747 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:32:47,748 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-01-27 01:33:24,071 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-27 01:33:24,074 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:33:24,074 INFO sqlalchemy.engine.base.Engine Thread-46 : ()
2020-01-27 01:33:24,076 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:33:24,076 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:33:24,076 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:33:24,078 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:24,078 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-01-27 01:33:24,079 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:24,079 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:24,091 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:33:24,091 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip', 1, 1)
2020-01-27 01:33:24,092 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:24,093 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:24,094 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-01-27 01:33:24,594 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-01-27 01:33:24,595 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:24,595 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-01-27 01:33:24,595 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:24,596 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:24,597 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-01-27 01:33:26,567 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-01-27 01:33:26,568 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:26,568 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-01-27 01:33:26,569 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:26,569 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:26,570 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-01-27 01:33:28,583 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-01-27 01:33:28,584 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:28,585 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-01-27 01:33:28,585 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:28,586 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:28,587 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-01-27 01:33:29,421 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-01-27 01:33:29,422 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:29,422 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-01-27 01:33:29,423 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:29,423 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:29,424 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-01-27 01:33:30,188 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-01-27 01:33:30,189 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:30,189 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-01-27 01:33:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:30,190 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:30,192 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-01-27 01:33:30,643 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-01-27 01:33:30,644 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:30,644 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-01-27 01:33:30,645 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:30,645 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:30,646 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-01-27 01:33:34,221 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-01-27 01:33:34,222 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:33:34,222 INFO sqlalchemy.engine.base.Engine Thread-59 : (1, 1)
2020-01-27 01:33:34,223 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:34,223 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:34,226 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:33:34,226 INFO sqlalchemy.engine.base.Engine Thread-59 : ('philip', 1, 1)
2020-01-27 01:33:34,226 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:34,227 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:34,229 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:33:34,229 INFO sqlalchemy.engine.base.Engine Thread-59 : (75,)
2020-01-27 01:33:34,229 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:33:34,229 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:33:34,230 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:33:34,231 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:33:34,231 INFO sqlalchemy.engine.base.Engine Thread-59 : (78,)
2020-01-27 01:33:34,232 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:33:34,232 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 01:33:34,232 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 01:33:34,232 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 01:33:34,236 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:33:34,237 INFO sqlalchemy.engine.base.Engine Thread-59 : ('philip', 1, 1)
2020-01-27 01:33:34,237 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:33:34,237 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:33:35,679 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-01-27 01:34:09,828 INFO sqlalchemy.engine.base.Engine Thread-66 : BEGIN (implicit)
2020-01-27 01:34:09,829 INFO sqlalchemy.engine.base.Engine Thread-66 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:34:09,829 INFO sqlalchemy.engine.base.Engine Thread-66 : (1, 1)
2020-01-27 01:34:09,830 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:34:09,830 DEBUG sqlalchemy.engine.base.Engine Thread-66 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:34:09,831 INFO sqlalchemy.engine.base.Engine Thread-66 : ROLLBACK
2020-01-27 01:34:42,356 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-01-27 01:34:42,357 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:34:42,357 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-01-27 01:34:42,358 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:34:42,359 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:34:42,360 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-01-27 01:35:39,242 INFO sqlalchemy.engine.base.Engine Thread-68 : BEGIN (implicit)
2020-01-27 01:35:39,243 INFO sqlalchemy.engine.base.Engine Thread-68 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:35:39,243 INFO sqlalchemy.engine.base.Engine Thread-68 : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 5, 1, 0, 0))
2020-01-27 01:35:39,244 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:35:39,244 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday', 'test')
2020-01-27 01:35:39,244 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'Easter Holiday', 'Easter Holiday 123')
2020-01-27 01:35:39,244 DEBUG sqlalchemy.engine.base.Engine Thread-68 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:35:39,245 INFO sqlalchemy.engine.base.Engine Thread-68 : ROLLBACK
2020-01-27 01:35:39,598 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-01-27 01:35:39,599 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:35:39,599 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-01-27 01:35:39,600 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:35:39,600 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:35:39,601 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-01-27 01:36:23,244 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-01-27 01:36:23,247 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:36:23,247 INFO sqlalchemy.engine.base.Engine Thread-70 : ()
2020-01-27 01:36:23,248 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:36:23,249 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:36:23,249 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:36:23,252 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:23,252 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-01-27 01:36:23,252 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:23,253 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:23,265 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:36:23,265 INFO sqlalchemy.engine.base.Engine Thread-70 : ('philip', 1, 1)
2020-01-27 01:36:23,265 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:23,266 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:23,267 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-01-27 01:36:23,775 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-01-27 01:36:23,776 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:23,776 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-01-27 01:36:23,777 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:23,777 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:23,778 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-01-27 01:36:25,039 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-01-27 01:36:25,040 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:25,040 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-01-27 01:36:25,041 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:25,042 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:25,043 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-01-27 01:36:27,108 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-01-27 01:36:27,111 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:36:27,111 INFO sqlalchemy.engine.base.Engine Thread-79 : ()
2020-01-27 01:36:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:36:27,112 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:36:27,113 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:36:27,115 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:27,115 INFO sqlalchemy.engine.base.Engine Thread-79 : (1, 1)
2020-01-27 01:36:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:27,116 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:27,120 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:36:27,120 INFO sqlalchemy.engine.base.Engine Thread-79 : ('philip', 1, 1)
2020-01-27 01:36:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:27,121 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:27,122 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-01-27 01:36:27,604 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-01-27 01:36:27,605 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:27,605 INFO sqlalchemy.engine.base.Engine Thread-86 : (1, 1)
2020-01-27 01:36:27,606 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:27,606 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:27,607 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-01-27 01:36:29,570 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-01-27 01:36:29,571 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:29,571 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-01-27 01:36:29,572 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:29,572 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:29,573 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-01-27 01:36:30,229 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-01-27 01:36:30,230 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:30,230 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-01-27 01:36:30,231 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:30,231 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:30,233 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-01-27 01:36:31,345 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-01-27 01:36:31,346 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:31,347 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-01-27 01:36:31,347 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:31,348 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:31,349 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-01-27 01:36:32,214 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-01-27 01:36:32,215 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:32,215 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-01-27 01:36:32,216 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:32,216 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:32,217 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-01-27 01:36:32,629 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-01-27 01:36:32,630 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:32,630 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-01-27 01:36:32,630 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:32,631 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:32,632 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-01-27 01:36:34,677 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-01-27 01:36:34,678 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:34,678 INFO sqlalchemy.engine.base.Engine Thread-93 : (1, 1)
2020-01-27 01:36:34,679 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:34,680 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:34,681 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-01-27 01:36:36,068 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-01-27 01:36:36,069 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:36,069 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-01-27 01:36:36,070 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:36,070 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:36,071 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-01-27 01:36:37,109 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-01-27 01:36:37,110 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:37,110 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-01-27 01:36:37,110 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:37,111 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:37,112 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-01-27 01:36:37,764 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-01-27 01:36:37,765 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:36:37,765 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-01-27 01:36:37,766 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:36:37,766 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:36:37,767 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-01-27 01:37:12,287 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-01-27 01:37:12,290 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:37:12,290 INFO sqlalchemy.engine.base.Engine Thread-97 : ()
2020-01-27 01:37:12,291 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:37:12,291 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:37:12,292 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:37:12,294 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:12,294 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-01-27 01:37:12,294 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:12,294 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:12,305 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:12,305 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-01-27 01:37:12,306 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:12,306 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:12,308 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-01-27 01:37:12,753 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-01-27 01:37:12,754 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:12,754 INFO sqlalchemy.engine.base.Engine Thread-104 : (1, 1)
2020-01-27 01:37:12,754 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:12,755 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:12,756 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-01-27 01:37:16,361 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-01-27 01:37:16,363 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:16,363 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-01-27 01:37:16,363 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:16,364 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:16,365 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-01-27 01:37:20,051 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-01-27 01:37:20,052 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:20,052 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-01-27 01:37:20,053 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:20,054 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:20,055 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-01-27 01:37:42,749 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-01-27 01:37:42,750 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:42,750 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-01-27 01:37:42,751 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:42,751 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:42,752 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-01-27 01:37:43,734 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-01-27 01:37:43,735 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:43,735 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-01-27 01:37:43,736 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:43,736 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:43,737 INFO sqlalchemy.engine.base.Engine Thread-109 : ROLLBACK
2020-01-27 01:37:45,987 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-01-27 01:37:45,988 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:45,988 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-01-27 01:37:45,989 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:45,989 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:45,991 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:45,991 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-01-27 01:37:45,992 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:45,992 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:45,994 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:37:45,994 INFO sqlalchemy.engine.base.Engine Thread-110 : (0,)
2020-01-27 01:37:45,995 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:45,995 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-27 01:37:45,995 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-27 01:37:45,995 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 0)
2020-01-27 01:37:45,995 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-27 01:37:45,996 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-27 01:37:45,998 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-01-27 01:37:45,998 INFO sqlalchemy.engine.base.Engine Thread-110 : (0, 1)
2020-01-27 01:37:45,999 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:45,999 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-27 01:37:46,000 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-27 01:37:46,000 INFO sqlalchemy.engine.base.Engine Thread-110 : (66, 0, 20)
2020-01-27 01:37:46,000 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:46,001 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 01:37:46,001 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-27 01:37:46,025 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:46,025 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-01-27 01:37:46,026 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:46,026 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:46,029 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-01-27 01:37:49,092 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-01-27 01:37:49,093 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:49,093 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-01-27 01:37:49,093 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:49,094 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:49,096 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:49,096 INFO sqlalchemy.engine.base.Engine Thread-117 : ('philip', 1, 1)
2020-01-27 01:37:49,096 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:49,097 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:49,098 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:37:49,099 INFO sqlalchemy.engine.base.Engine Thread-117 : (75,)
2020-01-27 01:37:49,099 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:49,099 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:37:49,099 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:37:49,101 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:37:49,101 INFO sqlalchemy.engine.base.Engine Thread-117 : (78,)
2020-01-27 01:37:49,101 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:49,102 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 01:37:49,102 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 01:37:49,102 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 01:37:49,106 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:49,106 INFO sqlalchemy.engine.base.Engine Thread-117 : ('philip', 1, 1)
2020-01-27 01:37:49,106 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:49,107 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:50,466 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-01-27 01:37:54,677 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-01-27 01:37:54,678 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:37:54,678 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-01-27 01:37:54,679 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:54,679 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:54,681 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:54,681 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-01-27 01:37:54,682 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:54,682 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:54,684 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:37:54,684 INFO sqlalchemy.engine.base.Engine Thread-124 : (75,)
2020-01-27 01:37:54,685 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:54,685 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:37:54,685 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:37:54,686 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:37:54,686 INFO sqlalchemy.engine.base.Engine Thread-124 : (78,)
2020-01-27 01:37:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:37:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 01:37:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 01:37:54,687 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 01:37:54,691 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:37:54,691 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-01-27 01:37:54,692 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:37:54,692 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:37:56,042 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-01-27 01:38:26,400 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-01-27 01:38:26,401 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:38:26,401 INFO sqlalchemy.engine.base.Engine Thread-131 : (1, 1)
2020-01-27 01:38:26,402 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:38:26,403 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:38:26,404 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-01-27 01:39:49,268 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:39:49,268 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:39:49,270 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 01:39:49,271 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:39:49,271 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,272 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:39:49,272 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 01:39:49,272 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 01:39:49,273 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,273 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 01:39:49,273 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 01:39:49,273 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:39:49,273 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:39:49,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:39:49,275 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:39:49,275 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,276 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:39:49,276 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,277 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:39:49,277 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:39:49,278 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 01:39:49,280 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:39:49,280 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-27 01:39:49,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:39:49,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:39:49,298 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 01:39:53,273 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-27 01:39:53,274 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:39:53,274 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-27 01:39:53,275 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:39:53,276 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:39:53,277 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-27 01:39:56,759 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-27 01:39:56,760 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:39:56,760 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-01-27 01:39:56,761 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:39:56,761 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:39:56,762 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-27 01:40:00,291 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-01-27 01:40:00,292 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:40:00,292 INFO sqlalchemy.engine.base.Engine Thread-7 : (1, 1)
2020-01-27 01:40:00,293 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:40:00,293 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:40:00,294 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-01-27 01:40:56,426 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-27 01:40:56,427 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:40:56,427 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-27 01:40:56,428 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:40:56,428 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:40:56,429 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-27 01:41:27,830 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:41:27,830 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,831 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:41:27,831 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 01:41:27,832 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:41:27,832 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,833 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:41:27,833 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 01:41:27,833 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 01:41:27,833 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,834 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 01:41:27,834 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 01:41:27,834 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:41:27,834 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,835 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:41:27,835 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:41:27,836 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:41:27,836 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,837 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:41:27,837 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,837 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:41:27,837 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:41:27,838 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 01:41:27,840 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:41:27,840 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-27 01:41:27,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:41:27,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:41:27,860 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 01:41:35,879 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 01:41:35,880 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:41:35,880 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-27 01:41:35,881 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:41:35,881 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:41:35,901 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 01:42:09,690 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-27 01:42:09,691 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:42:09,691 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-01-27 01:42:09,692 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:42:09,693 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:42:09,694 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-27 01:46:55,745 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:46:55,745 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:46:55,747 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 01:46:55,748 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:46:55,748 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 01:46:55,748 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 01:46:55,749 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 01:46:55,749 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 01:46:55,749 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 01:46:55,749 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:46:55,749 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:46:55,750 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:46:55,751 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:46:55,751 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,752 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:46:55,752 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,752 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:46:55,752 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 01:46:55,753 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 01:46:55,755 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:46:55,755 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-27 01:46:55,756 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:46:55,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:46:55,783 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 01:47:48,638 INFO sqlalchemy.engine.base.Engine Thread-4 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:47:48,638 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,639 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Variable_name', 'Value')
2020-01-27 01:47:48,640 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('sql_mode', '')
2020-01-27 01:47:48,640 INFO sqlalchemy.engine.base.Engine Thread-4 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:47:48,641 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,641 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Variable_name', 'Value')
2020-01-27 01:47:48,641 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('lower_case_table_names', '0')
2020-01-27 01:47:48,641 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT DATABASE()
2020-01-27 01:47:48,642 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,642 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('DATABASE()',)
2020-01-27 01:47:48,642 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('fmapp',)
2020-01-27 01:47:48,642 INFO sqlalchemy.engine.base.Engine Thread-4 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:47:48,642 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,643 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:47:48,643 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:47:48,644 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:47:48,644 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,644 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:47:48,644 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,645 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:47:48,645 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:47:48,645 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-27 01:47:48,648 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:47:48,648 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-27 01:47:48,649 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:47:48,649 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:47:48,675 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-27 01:48:20,697 INFO sqlalchemy.engine.base.Engine Thread-4 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:48:20,697 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,698 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Variable_name', 'Value')
2020-01-27 01:48:20,698 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('sql_mode', '')
2020-01-27 01:48:20,699 INFO sqlalchemy.engine.base.Engine Thread-4 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:48:20,699 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,699 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Variable_name', 'Value')
2020-01-27 01:48:20,699 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('lower_case_table_names', '0')
2020-01-27 01:48:20,700 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT DATABASE()
2020-01-27 01:48:20,700 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,700 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('DATABASE()',)
2020-01-27 01:48:20,700 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('fmapp',)
2020-01-27 01:48:20,701 INFO sqlalchemy.engine.base.Engine Thread-4 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:48:20,701 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,701 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:48:20,701 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:48:20,702 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:48:20,702 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,703 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:48:20,703 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,703 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:48:20,703 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-27 01:48:20,704 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-27 01:48:20,706 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:48:20,706 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-27 01:48:20,707 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:48:20,707 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:48:20,733 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-27 01:49:12,067 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:49:12,067 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,068 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 01:49:12,069 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-01-27 01:49:12,069 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:49:12,069 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 01:49:12,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-01-27 01:49:12,070 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-01-27 01:49:12,070 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-01-27 01:49:12,071 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-01-27 01:49:12,071 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:49:12,071 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,072 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:49:12,072 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:49:12,073 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:49:12,073 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,073 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:49:12,073 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,074 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:49:12,074 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:49:12,075 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 01:49:12,076 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:49:12,076 INFO sqlalchemy.engine.base.Engine Thread-3 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:49:12,077 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:49:12,077 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday', 'test')
2020-01-27 01:49:12,077 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:49:12,078 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 01:49:12,394 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-27 01:49:12,397 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:49:12,397 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-27 01:49:12,398 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:12,398 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:12,415 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-27 01:49:21,211 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-27 01:49:21,216 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:49:21,216 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-27 01:49:21,218 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:49:21,218 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:49:21,218 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:49:21,220 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:49:21,220 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-27 01:49:21,221 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:21,221 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:21,272 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:21,272 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-27 01:49:21,273 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:21,273 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:21,274 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-27 01:49:21,910 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-27 01:49:21,910 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:49:21,910 INFO sqlalchemy.engine.base.Engine Thread-12 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 01:49:21,911 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:49:21,911 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:49:21,912 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-27 01:49:25,172 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-27 01:49:25,173 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:49:25,173 INFO sqlalchemy.engine.base.Engine Thread-14 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:49:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:49:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday', 'test')
2020-01-27 01:49:25,174 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:49:25,175 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-27 01:49:26,712 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-27 01:49:26,713 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:49:26,713 INFO sqlalchemy.engine.base.Engine Thread-15 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 01:49:26,714 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:49:26,714 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:49:26,714 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-27 01:49:27,597 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-27 01:49:27,597 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:49:27,598 INFO sqlalchemy.engine.base.Engine Thread-16 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:49:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:49:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'Christmas Holiday', 'test')
2020-01-27 01:49:27,598 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'Change Freeze', 'Change Freeze')
2020-01-27 01:49:27,599 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-27 01:49:31,101 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-27 01:49:31,102 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:49:31,102 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-27 01:49:31,102 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:31,103 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:31,105 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:31,105 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-27 01:49:31,105 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:31,105 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:31,116 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-27 01:49:31,116 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-27 01:49:31,118 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-27 01:49:31,119 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 01:49:31,119 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 01:49:31,133 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:31,134 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-27 01:49:31,134 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:31,134 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:31,136 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-27 01:49:34,785 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-27 01:49:34,786 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:49:34,787 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-27 01:49:34,787 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:34,787 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:34,789 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:34,790 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-27 01:49:34,790 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:34,790 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:34,804 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:34,804 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-27 01:49:34,805 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:34,806 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:34,808 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 01:49:34,809 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-01-27 01:49:34,809 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:49:34,810 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:49:34,810 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:49:34,810 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:49:34,811 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-27 01:49:37,040 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-27 01:49:37,041 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:49:37,041 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-01-27 01:49:37,042 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:37,042 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:37,044 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:37,044 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-27 01:49:37,045 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:37,045 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:37,046 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 01:49:37,046 INFO sqlalchemy.engine.base.Engine Thread-31 : ('1', 1)
2020-01-27 01:49:37,047 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 01:49:37,047 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-27 01:49:37,049 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:49:37,049 INFO sqlalchemy.engine.base.Engine Thread-31 : (82,)
2020-01-27 01:49:37,050 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:49:37,051 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:49:37,051 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 01:49:37,051 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 01:49:37,052 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 01:49:37,052 INFO sqlalchemy.engine.base.Engine Thread-31 : (1,)
2020-01-27 01:49:37,053 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:49:37,053 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 01:49:37,053 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 01:49:37,081 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:49:37,081 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-27 01:49:37,082 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:49:37,082 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:49:37,084 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-27 01:50:34,322 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-27 01:50:34,323 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:50:34,323 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-01-27 01:50:34,324 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:34,324 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:34,326 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:50:34,326 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-27 01:50:34,327 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:34,327 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:34,329 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 01:50:34,329 INFO sqlalchemy.engine.base.Engine Thread-39 : ('1', 1)
2020-01-27 01:50:34,329 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 01:50:34,329 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Christmas Holiday', 83, 'test', datetime.datetime(2020, 2, 22, 15, 15), datetime.datetime(2020, 2, 29, 15, 45), 'GBR')
2020-01-27 01:50:34,333 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:50:34,333 INFO sqlalchemy.engine.base.Engine Thread-39 : (82,)
2020-01-27 01:50:34,334 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:50:34,334 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:50:34,334 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 01:50:34,334 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 01:50:34,335 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 01:50:34,336 INFO sqlalchemy.engine.base.Engine Thread-39 : (1,)
2020-01-27 01:50:34,336 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:50:34,336 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 01:50:34,336 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 01:50:34,341 INFO sqlalchemy.engine.base.Engine Thread-39 : UPDATE datesofinterest SET id=%s, doi_name=%s, doi_comment=%s, doi_start_dt=%s, doi_end_dt=%s, doi_regions=%s WHERE datesofinterest.id = %s
2020-01-27 01:50:34,341 INFO sqlalchemy.engine.base.Engine Thread-39 : ('1', 'Change Freeze RED', 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 1)
2020-01-27 01:50:34,342 INFO sqlalchemy.engine.base.Engine Thread-39 : COMMIT
2020-01-27 01:50:34,433 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-01-27 01:50:34,434 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:50:34,434 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-01-27 01:50:34,435 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:34,435 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:34,437 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:50:34,437 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-01-27 01:50:34,438 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:34,438 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:34,442 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:50:34,442 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-01-27 01:50:34,443 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:34,443 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:34,445 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 01:50:34,445 INFO sqlalchemy.engine.base.Engine Thread-40 : ()
2020-01-27 01:50:34,446 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:50:34,446 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:50:34,446 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:50:34,446 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:50:34,448 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-01-27 01:50:36,588 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-01-27 01:50:36,589 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:50:36,589 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-01-27 01:50:36,590 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:36,590 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:36,592 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:50:36,592 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-01-27 01:50:36,593 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:36,593 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:36,594 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 01:50:36,594 INFO sqlalchemy.engine.base.Engine Thread-47 : ('8', 1)
2020-01-27 01:50:36,595 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 01:50:36,595 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-27 01:50:36,597 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:50:36,597 INFO sqlalchemy.engine.base.Engine Thread-47 : (82,)
2020-01-27 01:50:36,598 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:50:36,598 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:50:36,598 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 01:50:36,598 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 01:50:36,599 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 01:50:36,599 INFO sqlalchemy.engine.base.Engine Thread-47 : (1,)
2020-01-27 01:50:36,600 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:50:36,600 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 01:50:36,600 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 01:50:36,604 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:50:36,604 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-01-27 01:50:36,605 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:50:36,605 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:50:36,607 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-01-27 01:52:06,977 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-01-27 01:52:06,978 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:52:06,978 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-01-27 01:52:06,979 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:06,979 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:06,982 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:52:06,982 INFO sqlalchemy.engine.base.Engine Thread-54 : ('philip', 1, 1)
2020-01-27 01:52:06,983 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:06,983 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:06,984 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 01:52:06,984 INFO sqlalchemy.engine.base.Engine Thread-54 : ('8', 1)
2020-01-27 01:52:06,984 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 01:52:06,985 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (8, 'Easter Holiday', 83, 'Easter Holiday 123', datetime.datetime(2020, 3, 26, 0, 0), datetime.datetime(2020, 4, 18, 0, 0), 'GBR,IND')
2020-01-27 01:52:06,987 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:52:06,987 INFO sqlalchemy.engine.base.Engine Thread-54 : (82,)
2020-01-27 01:52:06,988 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:52:06,988 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:52:06,988 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 01:52:06,988 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 01:52:06,990 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 01:52:06,990 INFO sqlalchemy.engine.base.Engine Thread-54 : (1,)
2020-01-27 01:52:06,991 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:52:06,991 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 01:52:06,991 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 01:52:06,993 INFO sqlalchemy.engine.base.Engine Thread-54 : UPDATE datesofinterest SET id=%s, doi_comment=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-01-27 01:52:06,993 INFO sqlalchemy.engine.base.Engine Thread-54 : ('8', 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 8)
2020-01-27 01:52:06,994 INFO sqlalchemy.engine.base.Engine Thread-54 : COMMIT
2020-01-27 01:52:07,095 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-01-27 01:52:07,096 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:52:07,096 INFO sqlalchemy.engine.base.Engine Thread-55 : (1, 1)
2020-01-27 01:52:07,096 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:07,097 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:07,099 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:52:07,099 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-01-27 01:52:07,099 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:07,100 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:07,104 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:52:07,104 INFO sqlalchemy.engine.base.Engine Thread-55 : ('philip', 1, 1)
2020-01-27 01:52:07,105 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:07,105 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:07,107 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 01:52:07,107 INFO sqlalchemy.engine.base.Engine Thread-55 : ()
2020-01-27 01:52:07,108 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:52:07,108 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:52:07,108 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:52:07,108 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:52:07,111 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-01-27 01:52:11,214 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-01-27 01:52:11,215 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:52:11,215 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-01-27 01:52:11,215 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:11,216 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:11,218 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:52:11,218 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-01-27 01:52:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:11,219 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:11,220 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 01:52:11,220 INFO sqlalchemy.engine.base.Engine Thread-62 : ('9', 1)
2020-01-27 01:52:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 01:52:11,221 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-27 01:52:11,223 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:52:11,223 INFO sqlalchemy.engine.base.Engine Thread-62 : (82,)
2020-01-27 01:52:11,223 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:52:11,224 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:52:11,224 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 01:52:11,224 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 01:52:11,225 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 01:52:11,225 INFO sqlalchemy.engine.base.Engine Thread-62 : (1,)
2020-01-27 01:52:11,225 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:52:11,226 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 01:52:11,226 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 01:52:11,230 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:52:11,230 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-01-27 01:52:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:52:11,230 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:52:11,232 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-01-27 01:53:42,082 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-01-27 01:53:42,083 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:53:42,083 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-01-27 01:53:42,084 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:42,085 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:42,087 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:53:42,087 INFO sqlalchemy.engine.base.Engine Thread-69 : ('philip', 1, 1)
2020-01-27 01:53:42,088 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:42,090 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:42,092 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 01:53:42,092 INFO sqlalchemy.engine.base.Engine Thread-69 : ('9', 1)
2020-01-27 01:53:42,093 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 01:53:42,093 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (9, 'Change Freeze', 83, 'Change Freeze', datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 2, 9, 23, 0), 'GBR,IND')
2020-01-27 01:53:42,096 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:53:42,096 INFO sqlalchemy.engine.base.Engine Thread-69 : (82,)
2020-01-27 01:53:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:53:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:53:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 01:53:42,097 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 01:53:42,098 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 01:53:42,099 INFO sqlalchemy.engine.base.Engine Thread-69 : (1,)
2020-01-27 01:53:42,099 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:53:42,099 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 01:53:42,099 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 01:53:42,101 INFO sqlalchemy.engine.base.Engine Thread-69 : UPDATE datesofinterest SET id=%s, doi_name=%s, doi_comment=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-01-27 01:53:42,101 INFO sqlalchemy.engine.base.Engine Thread-69 : ('9', 'May Day', 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 9)
2020-01-27 01:53:42,102 INFO sqlalchemy.engine.base.Engine Thread-69 : COMMIT
2020-01-27 01:53:42,175 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-01-27 01:53:42,176 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:53:42,176 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-01-27 01:53:42,176 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:42,177 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:42,179 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:53:42,179 INFO sqlalchemy.engine.base.Engine Thread-70 : ('philip', 1, 1)
2020-01-27 01:53:42,180 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:42,180 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:42,186 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:53:42,186 INFO sqlalchemy.engine.base.Engine Thread-70 : ('philip', 1, 1)
2020-01-27 01:53:42,186 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:42,187 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:42,189 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 01:53:42,189 INFO sqlalchemy.engine.base.Engine Thread-70 : ()
2020-01-27 01:53:42,190 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:53:42,190 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:53:42,190 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:53:42,190 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 01:53:42,192 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-01-27 01:53:46,076 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-01-27 01:53:46,078 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 01:53:46,079 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-01-27 01:53:46,080 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 01:53:46,080 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 01:53:46,080 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 01:53:46,082 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:53:46,083 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-01-27 01:53:46,083 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:46,084 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:46,088 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:53:46,088 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-01-27 01:53:46,089 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:53:46,089 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:53:46,091 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-01-27 01:53:46,543 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-01-27 01:53:46,544 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:53:46,544 INFO sqlalchemy.engine.base.Engine Thread-84 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 01:53:46,545 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:53:46,545 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-01-27 01:53:48,334 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-01-27 01:53:48,335 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:53:48,335 INFO sqlalchemy.engine.base.Engine Thread-85 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:53:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:53:48,336 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 01:53:48,337 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-01-27 01:53:54,823 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-01-27 01:53:54,824 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:53:54,824 INFO sqlalchemy.engine.base.Engine Thread-91 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:53:54,825 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:53:54,825 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 01:53:54,826 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-01-27 01:53:58,007 INFO sqlalchemy.engine.base.Engine Thread-93 : BEGIN (implicit)
2020-01-27 01:53:58,008 INFO sqlalchemy.engine.base.Engine Thread-93 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:53:58,008 INFO sqlalchemy.engine.base.Engine Thread-93 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:53:58,009 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:53:58,009 DEBUG sqlalchemy.engine.base.Engine Thread-93 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 01:53:58,010 INFO sqlalchemy.engine.base.Engine Thread-93 : ROLLBACK
2020-01-27 01:54:07,754 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-01-27 01:54:07,755 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:54:07,755 INFO sqlalchemy.engine.base.Engine Thread-94 : (1, 1)
2020-01-27 01:54:07,755 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:54:07,756 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:54:07,757 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-01-27 01:54:09,937 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-01-27 01:54:09,938 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:54:09,938 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-01-27 01:54:09,939 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:54:09,939 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:54:09,940 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-01-27 01:54:15,105 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-01-27 01:54:15,105 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:54:15,105 INFO sqlalchemy.engine.base.Engine Thread-96 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-27 01:54:15,106 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:54:15,106 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 01:54:15,106 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 01:54:15,106 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 01:54:15,107 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-01-27 01:54:15,417 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-01-27 01:54:15,418 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:54:15,418 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-01-27 01:54:15,419 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:54:15,419 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:54:15,420 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-01-27 01:54:48,413 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-01-27 01:54:48,414 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 01:54:48,414 INFO sqlalchemy.engine.base.Engine Thread-105 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 01:54:48,414 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('start', 'end', 'title', 'description')
2020-01-27 01:54:48,415 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 01:54:48,415 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-01-27 01:56:07,556 INFO sqlalchemy.engine.base.Engine Thread-108 : BEGIN (implicit)
2020-01-27 01:56:07,557 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:56:07,557 INFO sqlalchemy.engine.base.Engine Thread-108 : (1, 1)
2020-01-27 01:56:07,559 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:56:07,559 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:56:07,562 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:56:07,562 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-01-27 01:56:07,563 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:56:07,563 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:56:07,565 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:56:07,566 INFO sqlalchemy.engine.base.Engine Thread-108 : (75,)
2020-01-27 01:56:07,566 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:56:07,566 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:56:07,567 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 01:56:07,568 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 01:56:07,568 INFO sqlalchemy.engine.base.Engine Thread-108 : (78,)
2020-01-27 01:56:07,569 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 01:56:07,569 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 01:56:07,569 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 01:56:07,569 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 01:56:07,585 INFO sqlalchemy.engine.base.Engine Thread-108 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 01:56:07,585 INFO sqlalchemy.engine.base.Engine Thread-108 : ('philip', 1, 1)
2020-01-27 01:56:07,586 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:56:07,586 DEBUG sqlalchemy.engine.base.Engine Thread-108 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:56:09,075 INFO sqlalchemy.engine.base.Engine Thread-108 : ROLLBACK
2020-01-27 01:56:45,272 INFO sqlalchemy.engine.base.Engine Thread-116 : BEGIN (implicit)
2020-01-27 01:56:45,273 INFO sqlalchemy.engine.base.Engine Thread-116 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:56:45,274 INFO sqlalchemy.engine.base.Engine Thread-116 : (1, 1)
2020-01-27 01:56:45,274 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:56:45,275 DEBUG sqlalchemy.engine.base.Engine Thread-116 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:56:45,276 INFO sqlalchemy.engine.base.Engine Thread-116 : ROLLBACK
2020-01-27 01:58:33,636 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 01:58:33,636 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,637 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 01:58:33,638 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-01-27 01:58:33,639 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 01:58:33,639 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,639 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 01:58:33,639 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-01-27 01:58:33,640 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-01-27 01:58:33,640 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,640 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-01-27 01:58:33,640 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-01-27 01:58:33,640 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 01:58:33,640 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,641 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 01:58:33,641 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 01:58:33,642 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 01:58:33,642 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,642 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 01:58:33,642 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,643 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 01:58:33,643 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 01:58:33,644 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 01:58:33,646 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:58:33,646 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-27 01:58:33,647 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:58:33,647 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:58:33,664 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 01:58:58,272 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-27 01:58:58,273 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 01:58:58,273 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-27 01:58:58,274 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 01:58:58,274 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 01:58:58,275 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-27 02:03:52,828 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 02:03:52,828 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,829 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 02:03:52,830 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-01-27 02:03:52,831 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 02:03:52,831 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 02:03:52,831 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-01-27 02:03:52,832 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-01-27 02:03:52,832 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-01-27 02:03:52,832 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-01-27 02:03:52,832 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 02:03:52,832 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 02:03:52,833 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 02:03:52,834 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 02:03:52,834 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,835 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 02:03:52,835 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,835 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 02:03:52,836 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:03:52,836 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 02:03:52,838 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 02:03:52,839 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-27 02:03:52,839 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 02:03:52,840 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 02:03:52,857 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 02:05:51,672 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 02:05:51,672 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,673 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 02:05:51,674 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-01-27 02:05:51,674 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 02:05:51,674 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,675 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-27 02:05:51,675 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-01-27 02:05:51,675 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-01-27 02:05:51,675 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,676 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-01-27 02:05:51,676 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-01-27 02:05:51,676 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 02:05:51,676 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,677 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 02:05:51,677 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 02:05:51,678 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 02:05:51,678 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,678 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 02:05:51,679 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,679 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 02:05:51,679 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-27 02:05:51,680 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 02:05:51,682 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 02:05:51,682 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-27 02:05:51,683 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 02:05:51,684 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 02:05:51,700 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 08:18:31,414 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-27 08:18:31,415 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:18:31,415 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-27 08:18:31,417 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:18:31,417 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:18:31,418 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-27 08:19:18,789 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-27 08:19:18,790 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:19:18,791 INFO sqlalchemy.engine.base.Engine Thread-10 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:19:18,792 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:19:18,792 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:19:18,793 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-27 08:19:19,162 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-27 08:19:19,163 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:19:19,163 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-01-27 08:19:19,164 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:19:19,164 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:19:19,166 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-27 08:45:26,519 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 08:45:26,519 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 08:45:26,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 08:45:26,521 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 08:45:26,521 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 08:45:26,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 08:45:26,523 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 08:45:26,523 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,523 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 08:45:26,523 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 08:45:26,523 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 08:45:26,523 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,524 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 08:45:26,524 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 08:45:26,525 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 08:45:26,525 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,525 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 08:45:26,525 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,526 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 08:45:26,526 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:45:26,527 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 08:45:26,528 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:45:26,528 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:45:26,529 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:45:26,529 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:45:26,530 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 08:45:26,878 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 08:45:26,881 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:45:26,881 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-27 08:45:26,882 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:45:26,882 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:45:26,899 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 08:46:11,383 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-27 08:46:11,385 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:46:11,385 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-01-27 08:46:11,386 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:46:11,386 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:46:11,388 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-27 08:46:37,989 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-27 08:46:37,990 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:46:37,990 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-01-27 08:46:37,991 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:46:37,991 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:46:37,992 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-27 08:54:00,132 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-27 08:54:00,139 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 08:54:00,139 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-01-27 08:54:00,142 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 08:54:00,143 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 08:54:00,143 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 08:54:00,145 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:54:00,145 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-01-27 08:54:00,146 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:00,146 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:00,201 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:54:00,201 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-01-27 08:54:00,202 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:00,202 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:00,204 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-27 08:54:00,772 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-01-27 08:54:00,773 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:54:00,773 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 08:54:00,773 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:54:00,775 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-01-27 08:54:03,308 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-27 08:54:03,309 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:54:03,309 INFO sqlalchemy.engine.base.Engine Thread-34 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:54:03,310 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:54:03,310 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:54:03,311 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-27 08:54:22,509 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-27 08:54:22,510 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:54:22,510 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-01-27 08:54:22,510 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:22,511 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:22,513 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:54:22,513 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-27 08:54:22,513 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:22,513 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:22,517 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 08:54:22,517 INFO sqlalchemy.engine.base.Engine Thread-39 : (75,)
2020-01-27 08:54:22,517 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:54:22,518 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 08:54:22,518 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 08:54:22,519 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 08:54:22,519 INFO sqlalchemy.engine.base.Engine Thread-39 : (78,)
2020-01-27 08:54:22,520 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:54:22,520 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 08:54:22,520 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 08:54:22,520 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 08:54:22,533 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:54:22,534 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-27 08:54:22,534 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:22,535 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:23,959 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-27 08:54:41,451 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-01-27 08:54:41,452 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:54:41,453 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-01-27 08:54:41,453 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:41,454 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:41,455 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-01-27 08:54:53,209 INFO sqlalchemy.engine.base.Engine Thread-48 : BEGIN (implicit)
2020-01-27 08:54:53,211 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 08:54:53,211 INFO sqlalchemy.engine.base.Engine Thread-48 : ()
2020-01-27 08:54:53,212 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 08:54:53,212 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 08:54:53,213 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 08:54:53,215 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:54:53,215 INFO sqlalchemy.engine.base.Engine Thread-48 : (1, 1)
2020-01-27 08:54:53,216 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:53,216 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:53,222 INFO sqlalchemy.engine.base.Engine Thread-48 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:54:53,222 INFO sqlalchemy.engine.base.Engine Thread-48 : ('philip', 1, 1)
2020-01-27 08:54:53,223 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:54:53,223 DEBUG sqlalchemy.engine.base.Engine Thread-48 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:54:53,225 INFO sqlalchemy.engine.base.Engine Thread-48 : ROLLBACK
2020-01-27 08:54:53,666 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-01-27 08:54:53,667 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:54:53,667 INFO sqlalchemy.engine.base.Engine Thread-55 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 08:54:53,668 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:54:53,669 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-01-27 08:54:57,095 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-01-27 08:54:57,096 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:54:57,096 INFO sqlalchemy.engine.base.Engine Thread-56 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:54:57,097 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:54:57,097 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:54:57,098 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-01-27 08:55:10,095 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-01-27 08:55:10,096 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:55:10,096 INFO sqlalchemy.engine.base.Engine Thread-60 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:55:10,097 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:55:10,097 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:55:10,098 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-01-27 08:55:52,008 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-01-27 08:55:52,009 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:55:52,009 INFO sqlalchemy.engine.base.Engine Thread-69 : (datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0))
2020-01-27 08:55:52,010 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:55:52,010 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-01-27 08:55:53,169 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-01-27 08:55:53,170 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:55:53,171 INFO sqlalchemy.engine.base.Engine Thread-70 : (datetime.datetime(2020, 11, 30, 0, 0), datetime.datetime(2021, 1, 11, 0, 0))
2020-01-27 08:55:53,171 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:55:53,172 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-01-27 08:55:55,314 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-01-27 08:55:55,315 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:55:55,315 INFO sqlalchemy.engine.base.Engine Thread-71 : (datetime.datetime(2020, 10, 26, 0, 0), datetime.datetime(2020, 12, 7, 0, 0))
2020-01-27 08:55:55,315 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:55:55,316 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-01-27 08:55:57,108 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-01-27 08:55:57,109 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:55:57,109 INFO sqlalchemy.engine.base.Engine Thread-80 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:55:57,110 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:55:57,110 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:55:57,111 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-01-27 08:56:13,403 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-01-27 08:56:13,404 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:56:13,404 INFO sqlalchemy.engine.base.Engine Thread-81 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 08:56:13,405 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:56:13,406 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-01-27 08:56:14,572 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-01-27 08:56:14,573 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:56:14,573 INFO sqlalchemy.engine.base.Engine Thread-82 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:56:14,574 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:56:14,574 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:56:14,574 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-01-27 08:56:17,569 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-01-27 08:56:17,570 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:56:17,570 INFO sqlalchemy.engine.base.Engine Thread-88 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:56:17,571 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:56:17,571 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:56:17,572 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-01-27 08:57:31,648 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 08:57:31,648 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,650 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 08:57:31,650 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 08:57:31,651 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 08:57:31,651 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,651 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 08:57:31,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 08:57:31,652 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 08:57:31,652 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 08:57:31,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 08:57:31,653 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 08:57:31,653 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,654 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 08:57:31,654 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 08:57:31,655 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 08:57:31,655 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,655 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 08:57:31,655 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,656 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 08:57:31,656 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 08:57:31,656 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 08:57:31,658 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:31,658 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 08:57:31,658 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:31,660 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 08:57:36,091 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 08:57:36,092 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:36,092 INFO sqlalchemy.engine.base.Engine Thread-3 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:57:36,093 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:36,093 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:57:36,094 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 08:57:37,412 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-27 08:57:37,413 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:37,413 INFO sqlalchemy.engine.base.Engine Thread-4 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:57:37,414 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:37,415 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-27 08:57:38,894 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-27 08:57:38,894 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:38,894 INFO sqlalchemy.engine.base.Engine Thread-5 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:57:38,895 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:38,895 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:57:38,895 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:57:38,896 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-27 08:57:43,705 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-27 08:57:43,706 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:43,706 INFO sqlalchemy.engine.base.Engine Thread-6 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:57:43,707 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:43,707 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-27 08:57:44,464 INFO sqlalchemy.engine.base.Engine Thread-7 : BEGIN (implicit)
2020-01-27 08:57:44,465 INFO sqlalchemy.engine.base.Engine Thread-7 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:44,465 INFO sqlalchemy.engine.base.Engine Thread-7 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:57:44,466 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:44,466 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:57:44,466 DEBUG sqlalchemy.engine.base.Engine Thread-7 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:57:44,467 INFO sqlalchemy.engine.base.Engine Thread-7 : ROLLBACK
2020-01-27 08:57:47,061 INFO sqlalchemy.engine.base.Engine Thread-8 : BEGIN (implicit)
2020-01-27 08:57:47,062 INFO sqlalchemy.engine.base.Engine Thread-8 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:47,062 INFO sqlalchemy.engine.base.Engine Thread-8 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 08:57:47,063 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:47,063 DEBUG sqlalchemy.engine.base.Engine Thread-8 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:57:47,064 INFO sqlalchemy.engine.base.Engine Thread-8 : ROLLBACK
2020-01-27 08:57:48,333 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-27 08:57:48,334 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:48,334 INFO sqlalchemy.engine.base.Engine Thread-9 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:57:48,335 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:48,335 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:57:48,335 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:57:48,336 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-27 08:57:55,144 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-27 08:57:55,145 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:55,145 INFO sqlalchemy.engine.base.Engine Thread-10 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:57:55,146 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:55,147 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-27 08:57:56,172 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-27 08:57:56,174 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:56,174 INFO sqlalchemy.engine.base.Engine Thread-11 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:57:56,175 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:56,175 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:57:56,175 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:57:56,176 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-27 08:57:56,931 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-27 08:57:56,932 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:56,932 INFO sqlalchemy.engine.base.Engine Thread-12 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:57:56,932 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:56,933 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-27 08:57:57,220 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-27 08:57:57,221 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:57:57,221 INFO sqlalchemy.engine.base.Engine Thread-13 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:57:57,222 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:57:57,222 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:57:57,223 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-27 08:58:01,218 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-27 08:58:01,218 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:58:01,218 INFO sqlalchemy.engine.base.Engine Thread-14 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:58:01,219 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:58:01,220 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-27 08:58:01,596 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-27 08:58:01,597 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:58:01,597 INFO sqlalchemy.engine.base.Engine Thread-15 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:58:01,598 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:58:01,598 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:58:01,598 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:58:01,599 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-27 08:58:02,163 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-27 08:58:02,163 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:58:02,163 INFO sqlalchemy.engine.base.Engine Thread-16 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 08:58:02,164 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:58:02,164 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:58:02,165 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-27 08:58:03,737 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-27 08:58:03,738 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:58:03,738 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:58:03,739 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:58:03,739 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:58:03,740 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:58:03,740 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-27 08:58:04,960 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-27 08:58:04,960 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:58:04,961 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:58:04,961 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:58:04,962 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-27 08:58:22,009 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-27 08:58:22,011 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:58:22,011 INFO sqlalchemy.engine.base.Engine Thread-19 : (1, 1)
2020-01-27 08:58:22,012 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:58:22,013 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:58:22,015 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:58:22,016 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-01-27 08:58:22,016 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:58:22,017 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:58:22,078 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:58:22,078 INFO sqlalchemy.engine.base.Engine Thread-19 : ('philip', 1, 1)
2020-01-27 08:58:22,078 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:58:22,079 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:58:22,082 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 08:58:22,082 INFO sqlalchemy.engine.base.Engine Thread-19 : ()
2020-01-27 08:58:22,083 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:58:22,084 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:58:22,084 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:58:22,084 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:58:22,085 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-27 08:58:38,794 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-01-27 08:58:38,795 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:58:38,795 INFO sqlalchemy.engine.base.Engine Thread-26 : (1, 1)
2020-01-27 08:58:38,796 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:58:38,796 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:58:38,798 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:58:38,798 INFO sqlalchemy.engine.base.Engine Thread-26 : ('philip', 1, 1)
2020-01-27 08:58:38,799 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:58:38,799 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:58:38,800 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 08:58:38,800 INFO sqlalchemy.engine.base.Engine Thread-26 : ('0', 1)
2020-01-27 08:58:38,801 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 08:58:38,803 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 08:58:38,803 INFO sqlalchemy.engine.base.Engine Thread-26 : (82,)
2020-01-27 08:58:38,804 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:58:38,804 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:58:38,804 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 08:58:38,804 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 08:58:38,806 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 08:58:38,806 INFO sqlalchemy.engine.base.Engine Thread-26 : (1,)
2020-01-27 08:58:38,806 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:58:38,806 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 08:58:38,806 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 08:58:38,832 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:58:38,832 INFO sqlalchemy.engine.base.Engine Thread-26 : ('philip', 1, 1)
2020-01-27 08:58:38,833 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:58:38,833 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:58:38,835 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-01-27 08:59:16,973 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-27 08:59:16,974 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:59:16,974 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-01-27 08:59:16,975 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:16,975 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:16,977 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:16,977 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-01-27 08:59:16,978 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:16,978 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:16,979 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-27 08:59:16,979 INFO sqlalchemy.engine.base.Engine Thread-34 : ('0', 1)
2020-01-27 08:59:16,980 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions')
2020-01-27 08:59:16,983 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 08:59:16,984 INFO sqlalchemy.engine.base.Engine Thread-34 : (82,)
2020-01-27 08:59:16,984 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:59:16,984 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:59:16,984 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-27 08:59:16,985 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-27 08:59:16,986 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 08:59:16,986 INFO sqlalchemy.engine.base.Engine Thread-34 : (1,)
2020-01-27 08:59:16,986 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:59:16,987 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 08:59:16,987 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 08:59:16,991 INFO sqlalchemy.engine.base.Engine Thread-34 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions) VALUES (%s, %s, %s, %s, %s, %s, %s)
2020-01-27 08:59:16,991 INFO sqlalchemy.engine.base.Engine Thread-34 : ('0', 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 08:59:16,992 INFO sqlalchemy.engine.base.Engine Thread-34 : COMMIT
2020-01-27 08:59:17,068 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-01-27 08:59:17,069 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:59:17,069 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-01-27 08:59:17,069 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:17,069 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:17,072 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:17,072 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-01-27 08:59:17,072 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:17,072 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:17,076 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:17,076 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-01-27 08:59:17,077 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:17,077 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:17,079 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM datesofinterest INNER JOIN parameters ON parameters.id = datesofinterest.doi_priority ORDER BY datesofinterest.id ASC
2020-01-27 08:59:17,079 INFO sqlalchemy.engine.base.Engine Thread-35 : ()
2020-01-27 08:59:17,080 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 08:59:17,080 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:59:17,081 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:59:17,081 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:59:17,081 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 83, 'High', 'High', 82, 0, 0, 1)
2020-01-27 08:59:17,083 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-01-27 08:59:23,602 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-01-27 08:59:23,608 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 08:59:23,608 INFO sqlalchemy.engine.base.Engine Thread-42 : ()
2020-01-27 08:59:23,610 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 08:59:23,610 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 08:59:23,610 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 08:59:23,612 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:59:23,612 INFO sqlalchemy.engine.base.Engine Thread-42 : (1, 1)
2020-01-27 08:59:23,613 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:23,613 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:23,624 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:23,624 INFO sqlalchemy.engine.base.Engine Thread-42 : ('philip', 1, 1)
2020-01-27 08:59:23,625 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:23,625 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:23,626 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-01-27 08:59:29,349 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-01-27 08:59:29,351 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 08:59:29,352 INFO sqlalchemy.engine.base.Engine Thread-49 : ()
2020-01-27 08:59:29,353 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 08:59:29,353 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 08:59:29,353 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 08:59:29,356 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:59:29,356 INFO sqlalchemy.engine.base.Engine Thread-49 : (1, 1)
2020-01-27 08:59:29,356 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:29,357 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:29,361 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:29,361 INFO sqlalchemy.engine.base.Engine Thread-49 : ('philip', 1, 1)
2020-01-27 08:59:29,362 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:29,362 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:29,364 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-01-27 08:59:38,751 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-01-27 08:59:38,752 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 08:59:38,753 INFO sqlalchemy.engine.base.Engine Thread-57 : ()
2020-01-27 08:59:38,754 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 08:59:38,754 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 08:59:38,754 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 08:59:38,756 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:59:38,756 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-01-27 08:59:38,757 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:38,757 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:38,761 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:38,761 INFO sqlalchemy.engine.base.Engine Thread-57 : ('philip', 1, 1)
2020-01-27 08:59:38,762 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:38,762 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:38,763 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-01-27 08:59:55,809 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-01-27 08:59:55,811 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 08:59:55,811 INFO sqlalchemy.engine.base.Engine Thread-64 : ()
2020-01-27 08:59:55,814 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 08:59:55,814 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 08:59:55,814 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 08:59:55,817 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 08:59:55,817 INFO sqlalchemy.engine.base.Engine Thread-64 : (1, 1)
2020-01-27 08:59:55,817 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:55,818 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:55,831 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 08:59:55,831 INFO sqlalchemy.engine.base.Engine Thread-64 : ('philip', 1, 1)
2020-01-27 08:59:55,832 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 08:59:55,832 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 08:59:55,833 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-01-27 08:59:56,203 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-01-27 08:59:56,204 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:59:56,204 INFO sqlalchemy.engine.base.Engine Thread-71 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 08:59:56,205 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:59:56,205 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-01-27 08:59:58,327 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-01-27 08:59:58,328 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:59:58,328 INFO sqlalchemy.engine.base.Engine Thread-73 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 08:59:58,328 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:59:58,328 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 08:59:58,329 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-01-27 08:59:59,182 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-27 08:59:59,183 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:59:59,183 INFO sqlalchemy.engine.base.Engine Thread-74 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 08:59:59,184 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:59:59,184 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-27 08:59:59,620 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-01-27 08:59:59,621 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 08:59:59,621 INFO sqlalchemy.engine.base.Engine Thread-75 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 08:59:59,621 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('start', 'end', 'title', 'description')
2020-01-27 08:59:59,622 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 08:59:59,622 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 08:59:59,622 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-01-27 09:00:00,060 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-01-27 09:00:00,061 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:00:00,061 INFO sqlalchemy.engine.base.Engine Thread-76 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 09:00:00,061 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:00:00,062 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:00:00,062 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 09:00:00,062 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-01-27 09:00:03,224 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-01-27 09:00:03,225 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:00:03,225 INFO sqlalchemy.engine.base.Engine Thread-77 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 09:00:03,228 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:00:03,228 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 09:00:03,228 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:00:03,229 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-01-27 09:00:03,807 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-01-27 09:00:03,808 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:00:03,808 INFO sqlalchemy.engine.base.Engine Thread-78 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 09:00:03,809 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:00:03,809 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:00:03,809 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 09:00:03,810 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-01-27 09:00:36,540 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-01-27 09:00:36,541 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:00:36,541 INFO sqlalchemy.engine.base.Engine Thread-79 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 09:00:36,542 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:00:36,542 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-01-27 09:00:39,602 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-01-27 09:00:39,605 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 09:00:39,605 INFO sqlalchemy.engine.base.Engine Thread-80 : ('0', 1)
2020-01-27 09:00:39,606 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 09:00:39,610 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 09:00:39,611 INFO sqlalchemy.engine.base.Engine Thread-80 : ()
2020-01-27 09:00:39,612 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:00:39,612 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 09:00:39,612 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 09:00:39,613 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:00:39,613 INFO sqlalchemy.engine.base.Engine Thread-80 : (97,)
2020-01-27 09:00:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 09:00:39,614 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 09:00:39,615 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:00:39,616 INFO sqlalchemy.engine.base.Engine Thread-80 : (105,)
2020-01-27 09:00:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:00:39,616 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:00:39,619 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:00:39,620 INFO sqlalchemy.engine.base.Engine Thread-80 : (2, 1)
2020-01-27 09:00:39,620 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:00:39,621 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 09:00:39,624 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:00:39,624 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-01-27 09:00:39,625 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:39,625 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:39,665 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:00:39,665 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-01-27 09:00:39,666 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:39,666 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:39,669 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-01-27 09:00:44,379 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-01-27 09:00:44,381 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 09:00:44,382 INFO sqlalchemy.engine.base.Engine Thread-87 : ()
2020-01-27 09:00:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:00:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 09:00:44,383 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 09:00:44,385 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:00:44,385 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-01-27 09:00:44,386 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:44,386 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:44,389 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:00:44,390 INFO sqlalchemy.engine.base.Engine Thread-87 : ('philip', 1, 1)
2020-01-27 09:00:44,390 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:44,390 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:44,392 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-01-27 09:00:44,822 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-01-27 09:00:44,823 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:00:44,823 INFO sqlalchemy.engine.base.Engine Thread-94 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 09:00:44,824 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:00:44,824 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-01-27 09:00:47,860 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-01-27 09:00:47,861 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:00:47,861 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-01-27 09:00:47,862 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:47,862 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:47,864 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:00:47,864 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-01-27 09:00:47,865 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:47,865 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:47,876 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-27 09:00:47,876 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-01-27 09:00:47,877 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-27 09:00:47,878 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:00:47,878 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:00:47,892 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:00:47,893 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-01-27 09:00:47,893 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:47,893 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:47,895 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-01-27 09:00:50,008 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-01-27 09:00:50,009 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:00:50,009 INFO sqlalchemy.engine.base.Engine Thread-102 : (1, 1)
2020-01-27 09:00:50,010 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:50,010 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:50,012 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:00:50,012 INFO sqlalchemy.engine.base.Engine Thread-102 : ('philip', 1, 1)
2020-01-27 09:00:50,013 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:50,013 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:50,017 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:00:50,017 INFO sqlalchemy.engine.base.Engine Thread-102 : ('1', 1)
2020-01-27 09:00:50,018 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:00:50,019 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 09:00:50,022 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:00:50,022 INFO sqlalchemy.engine.base.Engine Thread-102 : (89,)
2020-01-27 09:00:50,023 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,023 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-27 09:00:50,023 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-27 09:00:50,024 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:00:50,024 INFO sqlalchemy.engine.base.Engine Thread-102 : (2,)
2020-01-27 09:00:50,025 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,025 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-27 09:00:50,025 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-27 09:00:50,025 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-27 09:00:50,026 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:00:50,026 INFO sqlalchemy.engine.base.Engine Thread-102 : (100,)
2020-01-27 09:00:50,027 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,027 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-27 09:00:50,027 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-27 09:00:50,027 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-27 09:00:50,027 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-27 09:00:50,027 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-27 09:00:50,029 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:00:50,029 INFO sqlalchemy.engine.base.Engine Thread-102 : (1,)
2020-01-27 09:00:50,029 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,029 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:00:50,030 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:00:50,031 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:00:50,031 INFO sqlalchemy.engine.base.Engine Thread-102 : (1,)
2020-01-27 09:00:50,031 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:00:50,032 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:00:50,033 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:00:50,033 INFO sqlalchemy.engine.base.Engine Thread-102 : (105,)
2020-01-27 09:00:50,033 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,033 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:00:50,034 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:00:50,035 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:00:50,035 INFO sqlalchemy.engine.base.Engine Thread-102 : (92,)
2020-01-27 09:00:50,035 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,036 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-27 09:00:50,036 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-27 09:00:50,036 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-27 09:00:50,036 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-27 09:00:50,037 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:00:50,038 INFO sqlalchemy.engine.base.Engine Thread-102 : (66,)
2020-01-27 09:00:50,038 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:00:50,038 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-27 09:00:50,038 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:00:50,061 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:00:50,061 INFO sqlalchemy.engine.base.Engine Thread-102 : ('philip', 1, 1)
2020-01-27 09:00:50,062 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:00:50,062 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:00:50,067 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-01-27 09:01:00,358 INFO sqlalchemy.engine.base.Engine Thread-109 : BEGIN (implicit)
2020-01-27 09:01:00,359 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:00,359 INFO sqlalchemy.engine.base.Engine Thread-109 : (1, 1)
2020-01-27 09:01:00,360 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:00,360 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:00,362 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:00,362 INFO sqlalchemy.engine.base.Engine Thread-109 : ('philip', 1, 1)
2020-01-27 09:01:00,363 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:00,363 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:00,367 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:01:00,367 INFO sqlalchemy.engine.base.Engine Thread-109 : ('1', 1)
2020-01-27 09:01:00,368 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:00,369 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (1, 'This is a Complex', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 26, 23, 34, 1), 67)
2020-01-27 09:01:00,374 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:00,374 INFO sqlalchemy.engine.base.Engine Thread-109 : (89,)
2020-01-27 09:01:00,375 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,375 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-27 09:01:00,375 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-27 09:01:00,376 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:00,377 INFO sqlalchemy.engine.base.Engine Thread-109 : (2,)
2020-01-27 09:01:00,377 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,377 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-27 09:01:00,377 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-27 09:01:00,378 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-27 09:01:00,379 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:00,379 INFO sqlalchemy.engine.base.Engine Thread-109 : (100,)
2020-01-27 09:01:00,379 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,380 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-27 09:01:00,380 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-27 09:01:00,380 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-27 09:01:00,380 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-27 09:01:00,380 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-27 09:01:00,381 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:00,382 INFO sqlalchemy.engine.base.Engine Thread-109 : (1,)
2020-01-27 09:01:00,382 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,382 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:00,382 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:00,384 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:00,384 INFO sqlalchemy.engine.base.Engine Thread-109 : (1,)
2020-01-27 09:01:00,384 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,385 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:00,385 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:00,386 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:00,386 INFO sqlalchemy.engine.base.Engine Thread-109 : (105,)
2020-01-27 09:01:00,387 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,387 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:01:00,387 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:01:00,390 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:00,390 INFO sqlalchemy.engine.base.Engine Thread-109 : (92,)
2020-01-27 09:01:00,390 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,391 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-27 09:01:00,391 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-27 09:01:00,391 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-27 09:01:00,391 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-27 09:01:00,392 INFO sqlalchemy.engine.base.Engine Thread-109 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:00,392 INFO sqlalchemy.engine.base.Engine Thread-109 : (66,)
2020-01-27 09:01:00,393 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:00,393 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-27 09:01:00,393 DEBUG sqlalchemy.engine.base.Engine Thread-109 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:00,396 INFO sqlalchemy.engine.base.Engine Thread-109 : UPDATE complexes SET id=%s, complex_name=%s, complex_restrict_start=%s, complex_restrict_end=%s, complex_updated=%s WHERE complexes.id = %s
2020-01-27 09:01:00,396 INFO sqlalchemy.engine.base.Engine Thread-109 : ('1', 'Made Up CheckPoint', '0', '0', datetime.datetime(2020, 1, 27, 9, 1, 0, 395031), 1)
2020-01-27 09:01:00,397 INFO sqlalchemy.engine.base.Engine Thread-109 : COMMIT
2020-01-27 09:01:00,480 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-01-27 09:01:00,481 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:00,481 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-01-27 09:01:00,482 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:00,482 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:00,484 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:00,484 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-01-27 09:01:00,485 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:00,485 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:00,496 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-27 09:01:00,496 INFO sqlalchemy.engine.base.Engine Thread-110 : ()
2020-01-27 09:01:00,497 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-27 09:01:00,498 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:00,499 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:00,503 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:00,503 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-01-27 09:01:00,504 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:00,504 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:00,507 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-01-27 09:01:01,953 INFO sqlalchemy.engine.base.Engine Thread-117 : BEGIN (implicit)
2020-01-27 09:01:01,954 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:01,954 INFO sqlalchemy.engine.base.Engine Thread-117 : (1, 1)
2020-01-27 09:01:01,955 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:01,955 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:01,958 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:01,958 INFO sqlalchemy.engine.base.Engine Thread-117 : ('philip', 1, 1)
2020-01-27 09:01:01,958 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:01,959 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:01,962 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:01:01,962 INFO sqlalchemy.engine.base.Engine Thread-117 : ('2', 1)
2020-01-27 09:01:01,963 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:01,963 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 09:01:01,967 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:01,967 INFO sqlalchemy.engine.base.Engine Thread-117 : (89,)
2020-01-27 09:01:01,968 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,968 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-27 09:01:01,968 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-27 09:01:01,969 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:01,969 INFO sqlalchemy.engine.base.Engine Thread-117 : (2,)
2020-01-27 09:01:01,970 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,970 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-27 09:01:01,970 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-27 09:01:01,970 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-27 09:01:01,971 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:01,971 INFO sqlalchemy.engine.base.Engine Thread-117 : (100,)
2020-01-27 09:01:01,972 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,972 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-27 09:01:01,972 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-27 09:01:01,972 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-27 09:01:01,973 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-27 09:01:01,973 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-27 09:01:01,974 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:01,974 INFO sqlalchemy.engine.base.Engine Thread-117 : (1,)
2020-01-27 09:01:01,975 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,975 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:01,975 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:01,976 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:01,976 INFO sqlalchemy.engine.base.Engine Thread-117 : (1,)
2020-01-27 09:01:01,977 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,977 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:01,977 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:01,978 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:01,978 INFO sqlalchemy.engine.base.Engine Thread-117 : (105,)
2020-01-27 09:01:01,979 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,979 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:01:01,979 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:01:01,980 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:01,980 INFO sqlalchemy.engine.base.Engine Thread-117 : (92,)
2020-01-27 09:01:01,981 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,981 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-27 09:01:01,981 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-27 09:01:01,981 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-27 09:01:01,981 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-27 09:01:01,982 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:01,982 INFO sqlalchemy.engine.base.Engine Thread-117 : (66,)
2020-01-27 09:01:01,983 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:01,983 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-27 09:01:01,983 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:01,987 INFO sqlalchemy.engine.base.Engine Thread-117 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:01,987 INFO sqlalchemy.engine.base.Engine Thread-117 : ('philip', 1, 1)
2020-01-27 09:01:01,988 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:01,988 DEBUG sqlalchemy.engine.base.Engine Thread-117 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:01,993 INFO sqlalchemy.engine.base.Engine Thread-117 : ROLLBACK
2020-01-27 09:01:10,098 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-01-27 09:01:10,099 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:10,099 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-01-27 09:01:10,100 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:10,101 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:10,103 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:10,103 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-01-27 09:01:10,104 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:10,104 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:10,107 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:01:10,107 INFO sqlalchemy.engine.base.Engine Thread-124 : ('2', 1)
2020-01-27 09:01:10,108 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:10,109 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (2, 'Fortigate blah blah', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 24, 14, 50, 44), 67)
2020-01-27 09:01:10,113 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:10,113 INFO sqlalchemy.engine.base.Engine Thread-124 : (89,)
2020-01-27 09:01:10,114 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,114 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-27 09:01:10,114 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-27 09:01:10,115 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:10,115 INFO sqlalchemy.engine.base.Engine Thread-124 : (2,)
2020-01-27 09:01:10,116 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,116 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-27 09:01:10,116 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-27 09:01:10,116 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-27 09:01:10,117 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:10,117 INFO sqlalchemy.engine.base.Engine Thread-124 : (100,)
2020-01-27 09:01:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-27 09:01:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-27 09:01:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-27 09:01:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-27 09:01:10,118 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-27 09:01:10,120 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:10,120 INFO sqlalchemy.engine.base.Engine Thread-124 : (1,)
2020-01-27 09:01:10,120 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,120 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:10,120 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:10,122 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:10,122 INFO sqlalchemy.engine.base.Engine Thread-124 : (1,)
2020-01-27 09:01:10,122 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,122 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:10,122 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:10,124 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:10,124 INFO sqlalchemy.engine.base.Engine Thread-124 : (105,)
2020-01-27 09:01:10,124 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,124 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:01:10,125 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:01:10,126 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:10,126 INFO sqlalchemy.engine.base.Engine Thread-124 : (92,)
2020-01-27 09:01:10,126 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,127 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-27 09:01:10,127 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-27 09:01:10,127 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-27 09:01:10,127 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-27 09:01:10,128 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:10,128 INFO sqlalchemy.engine.base.Engine Thread-124 : (66,)
2020-01-27 09:01:10,129 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:10,129 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-27 09:01:10,129 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:10,131 INFO sqlalchemy.engine.base.Engine Thread-124 : UPDATE complexes SET id=%s, complex_name=%s, complex_restrict_start=%s, complex_restrict_end=%s, complex_updated=%s WHERE complexes.id = %s
2020-01-27 09:01:10,131 INFO sqlalchemy.engine.base.Engine Thread-124 : ('2', 'Made Up Fortigate', '0', '0', datetime.datetime(2020, 1, 27, 9, 1, 10, 130857), 2)
2020-01-27 09:01:10,132 INFO sqlalchemy.engine.base.Engine Thread-124 : COMMIT
2020-01-27 09:01:10,242 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-01-27 09:01:10,243 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:10,243 INFO sqlalchemy.engine.base.Engine Thread-125 : (1, 1)
2020-01-27 09:01:10,244 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:10,244 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:10,246 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:10,246 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-01-27 09:01:10,246 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:10,247 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:10,257 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-27 09:01:10,257 INFO sqlalchemy.engine.base.Engine Thread-125 : ()
2020-01-27 09:01:10,258 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-27 09:01:10,259 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:10,259 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:10,263 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:10,263 INFO sqlalchemy.engine.base.Engine Thread-125 : ('philip', 1, 1)
2020-01-27 09:01:10,264 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:10,264 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:10,267 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-01-27 09:01:12,212 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-01-27 09:01:12,213 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:12,213 INFO sqlalchemy.engine.base.Engine Thread-132 : (1, 1)
2020-01-27 09:01:12,214 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:12,214 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:12,216 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:12,216 INFO sqlalchemy.engine.base.Engine Thread-132 : ('philip', 1, 1)
2020-01-27 09:01:12,217 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:12,217 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:12,220 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:01:12,220 INFO sqlalchemy.engine.base.Engine Thread-132 : ('1', 1)
2020-01-27 09:01:12,221 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:12,222 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 09:01:12,225 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:12,225 INFO sqlalchemy.engine.base.Engine Thread-132 : (89,)
2020-01-27 09:01:12,225 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,225 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-27 09:01:12,226 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-27 09:01:12,227 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:12,227 INFO sqlalchemy.engine.base.Engine Thread-132 : (2,)
2020-01-27 09:01:12,227 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,228 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-27 09:01:12,228 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-27 09:01:12,228 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-27 09:01:12,229 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:12,229 INFO sqlalchemy.engine.base.Engine Thread-132 : (100,)
2020-01-27 09:01:12,229 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,230 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-27 09:01:12,230 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-27 09:01:12,230 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-27 09:01:12,230 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 0)
2020-01-27 09:01:12,230 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-27 09:01:12,231 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:12,231 INFO sqlalchemy.engine.base.Engine Thread-132 : (1,)
2020-01-27 09:01:12,232 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,232 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:12,232 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:12,233 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:12,234 INFO sqlalchemy.engine.base.Engine Thread-132 : (1,)
2020-01-27 09:01:12,234 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,234 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-27 09:01:12,234 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-27 09:01:12,236 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:12,236 INFO sqlalchemy.engine.base.Engine Thread-132 : (105,)
2020-01-27 09:01:12,236 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,236 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:01:12,237 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:01:12,238 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:12,238 INFO sqlalchemy.engine.base.Engine Thread-132 : (92,)
2020-01-27 09:01:12,238 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,239 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-27 09:01:12,239 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-27 09:01:12,239 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-27 09:01:12,239 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-27 09:01:12,240 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-27 09:01:12,240 INFO sqlalchemy.engine.base.Engine Thread-132 : (66,)
2020-01-27 09:01:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-27 09:01:12,241 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:12,245 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:12,245 INFO sqlalchemy.engine.base.Engine Thread-132 : ('philip', 1, 1)
2020-01-27 09:01:12,245 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:12,246 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:12,250 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-01-27 09:01:14,263 INFO sqlalchemy.engine.base.Engine Thread-139 : BEGIN (implicit)
2020-01-27 09:01:14,264 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:14,264 INFO sqlalchemy.engine.base.Engine Thread-139 : (1, 1)
2020-01-27 09:01:14,264 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:14,264 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:14,266 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:14,267 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-01-27 09:01:14,267 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:14,267 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:14,278 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-27 09:01:14,278 INFO sqlalchemy.engine.base.Engine Thread-139 : ()
2020-01-27 09:01:14,279 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-27 09:01:14,281 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:14,282 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-27 09:01:14,286 INFO sqlalchemy.engine.base.Engine Thread-139 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:14,286 INFO sqlalchemy.engine.base.Engine Thread-139 : ('philip', 1, 1)
2020-01-27 09:01:14,286 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:14,287 DEBUG sqlalchemy.engine.base.Engine Thread-139 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:14,288 INFO sqlalchemy.engine.base.Engine Thread-139 : ROLLBACK
2020-01-27 09:01:22,416 INFO sqlalchemy.engine.base.Engine Thread-146 : BEGIN (implicit)
2020-01-27 09:01:22,417 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 09:01:22,418 INFO sqlalchemy.engine.base.Engine Thread-146 : ()
2020-01-27 09:01:22,419 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:22,419 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 09:01:22,419 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 09:01:22,421 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:22,421 INFO sqlalchemy.engine.base.Engine Thread-146 : (1, 1)
2020-01-27 09:01:22,422 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:22,422 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:22,425 INFO sqlalchemy.engine.base.Engine Thread-146 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:22,426 INFO sqlalchemy.engine.base.Engine Thread-146 : ('philip', 1, 1)
2020-01-27 09:01:22,426 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:22,426 DEBUG sqlalchemy.engine.base.Engine Thread-146 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:22,428 INFO sqlalchemy.engine.base.Engine Thread-146 : ROLLBACK
2020-01-27 09:01:22,804 INFO sqlalchemy.engine.base.Engine Thread-153 : BEGIN (implicit)
2020-01-27 09:01:22,805 INFO sqlalchemy.engine.base.Engine Thread-153 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:01:22,805 INFO sqlalchemy.engine.base.Engine Thread-153 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 09:01:22,806 DEBUG sqlalchemy.engine.base.Engine Thread-153 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:01:22,807 INFO sqlalchemy.engine.base.Engine Thread-153 : ROLLBACK
2020-01-27 09:01:26,306 INFO sqlalchemy.engine.base.Engine Thread-154 : BEGIN (implicit)
2020-01-27 09:01:26,308 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 09:01:26,308 INFO sqlalchemy.engine.base.Engine Thread-154 : ('0', 1)
2020-01-27 09:01:26,308 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 09:01:26,312 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 09:01:26,313 INFO sqlalchemy.engine.base.Engine Thread-154 : ()
2020-01-27 09:01:26,313 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:26,314 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 09:01:26,314 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 09:01:26,315 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:26,315 INFO sqlalchemy.engine.base.Engine Thread-154 : (97,)
2020-01-27 09:01:26,316 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:26,316 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 09:01:26,316 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 09:01:26,317 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:01:26,317 INFO sqlalchemy.engine.base.Engine Thread-154 : (105,)
2020-01-27 09:01:26,318 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:01:26,318 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 09:01:26,318 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 09:01:26,321 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 09:01:26,321 INFO sqlalchemy.engine.base.Engine Thread-154 : (1, 1)
2020-01-27 09:01:26,322 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:01:26,323 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 09:01:26,325 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:01:26,325 INFO sqlalchemy.engine.base.Engine Thread-154 : (1, 1)
2020-01-27 09:01:26,325 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:26,326 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:26,329 INFO sqlalchemy.engine.base.Engine Thread-154 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:01:26,329 INFO sqlalchemy.engine.base.Engine Thread-154 : ('philip', 1, 1)
2020-01-27 09:01:26,330 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:01:26,330 DEBUG sqlalchemy.engine.base.Engine Thread-154 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:01:26,333 INFO sqlalchemy.engine.base.Engine Thread-154 : ROLLBACK
2020-01-27 09:17:14,553 INFO sqlalchemy.engine.base.Engine Thread-161 : BEGIN (implicit)
2020-01-27 09:17:14,555 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 09:17:14,556 INFO sqlalchemy.engine.base.Engine Thread-161 : ()
2020-01-27 09:17:14,559 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 09:17:14,560 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 09:17:14,560 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 09:17:14,562 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:17:14,562 INFO sqlalchemy.engine.base.Engine Thread-161 : (1, 1)
2020-01-27 09:17:14,563 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:17:14,563 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:17:14,567 INFO sqlalchemy.engine.base.Engine Thread-161 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:17:14,567 INFO sqlalchemy.engine.base.Engine Thread-161 : ('philip', 1, 1)
2020-01-27 09:17:14,568 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:17:14,568 DEBUG sqlalchemy.engine.base.Engine Thread-161 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:17:14,570 INFO sqlalchemy.engine.base.Engine Thread-161 : ROLLBACK
2020-01-27 09:17:15,106 INFO sqlalchemy.engine.base.Engine Thread-168 : BEGIN (implicit)
2020-01-27 09:17:15,106 INFO sqlalchemy.engine.base.Engine Thread-168 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:17:15,107 INFO sqlalchemy.engine.base.Engine Thread-168 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 09:17:15,107 DEBUG sqlalchemy.engine.base.Engine Thread-168 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:17:15,108 INFO sqlalchemy.engine.base.Engine Thread-168 : ROLLBACK
2020-01-27 09:17:16,936 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-01-27 09:17:16,936 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:17:16,936 INFO sqlalchemy.engine.base.Engine Thread-169 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:17:16,937 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:17:16,937 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:17:16,938 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-01-27 09:17:18,532 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-01-27 09:17:18,533 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:17:18,533 INFO sqlalchemy.engine.base.Engine Thread-170 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:17:18,534 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:17:18,534 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-01-27 09:17:21,289 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-01-27 09:17:21,289 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:17:21,289 INFO sqlalchemy.engine.base.Engine Thread-171 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:17:21,290 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:17:21,290 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:17:21,291 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-01-27 09:17:21,815 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-01-27 09:17:21,816 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:17:21,816 INFO sqlalchemy.engine.base.Engine Thread-172 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:17:21,817 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:17:21,818 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-01-27 09:17:23,537 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-01-27 09:17:23,538 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:17:23,538 INFO sqlalchemy.engine.base.Engine Thread-173 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:17:23,539 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:17:23,539 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:17:23,540 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-01-27 09:34:01,793 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-01-27 09:34:01,794 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:01,794 INFO sqlalchemy.engine.base.Engine Thread-174 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 09:34:01,797 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:01,798 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-01-27 09:34:02,781 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-01-27 09:34:02,781 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:02,782 INFO sqlalchemy.engine.base.Engine Thread-175 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:34:02,782 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:02,782 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:34:02,783 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-01-27 09:34:05,293 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-01-27 09:34:05,294 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:05,294 INFO sqlalchemy.engine.base.Engine Thread-176 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:34:05,295 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:05,296 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-01-27 09:34:11,182 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-01-27 09:34:11,183 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:11,183 INFO sqlalchemy.engine.base.Engine Thread-177 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 09:34:11,184 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:11,184 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 09:34:11,184 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:34:11,185 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-01-27 09:34:14,540 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-01-27 09:34:14,541 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:14,541 INFO sqlalchemy.engine.base.Engine Thread-178 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 09:34:14,541 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:14,542 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:34:14,542 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 09:34:14,542 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-01-27 09:34:16,578 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-01-27 09:34:16,578 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:16,578 INFO sqlalchemy.engine.base.Engine Thread-179 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 09:34:16,579 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:16,579 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 09:34:16,579 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:34:16,580 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-01-27 09:34:17,872 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-01-27 09:34:17,873 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:17,873 INFO sqlalchemy.engine.base.Engine Thread-180 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 09:34:17,874 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:17,874 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:34:17,874 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 09:34:17,875 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-01-27 09:34:19,773 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-01-27 09:34:19,774 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:19,774 INFO sqlalchemy.engine.base.Engine Thread-181 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 09:34:19,775 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:19,775 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 09:34:19,775 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 09:34:19,776 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-01-27 09:34:19,999 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-01-27 09:34:19,999 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:19,999 INFO sqlalchemy.engine.base.Engine Thread-182 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:34:20,000 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:20,001 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-01-27 09:34:20,241 INFO sqlalchemy.engine.base.Engine Thread-183 : BEGIN (implicit)
2020-01-27 09:34:20,242 INFO sqlalchemy.engine.base.Engine Thread-183 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:20,242 INFO sqlalchemy.engine.base.Engine Thread-183 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:34:20,243 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:20,243 DEBUG sqlalchemy.engine.base.Engine Thread-183 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:34:20,244 INFO sqlalchemy.engine.base.Engine Thread-183 : ROLLBACK
2020-01-27 09:34:21,352 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-01-27 09:34:21,353 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:21,353 INFO sqlalchemy.engine.base.Engine Thread-184 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:34:21,354 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:21,354 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-01-27 09:34:22,753 INFO sqlalchemy.engine.base.Engine Thread-185 : BEGIN (implicit)
2020-01-27 09:34:22,754 INFO sqlalchemy.engine.base.Engine Thread-185 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:22,754 INFO sqlalchemy.engine.base.Engine Thread-185 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:34:22,754 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:22,755 DEBUG sqlalchemy.engine.base.Engine Thread-185 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:34:22,755 INFO sqlalchemy.engine.base.Engine Thread-185 : ROLLBACK
2020-01-27 09:34:23,512 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-01-27 09:34:23,513 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:23,513 INFO sqlalchemy.engine.base.Engine Thread-186 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:34:23,514 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:23,514 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-01-27 09:34:24,775 INFO sqlalchemy.engine.base.Engine Thread-187 : BEGIN (implicit)
2020-01-27 09:34:24,775 INFO sqlalchemy.engine.base.Engine Thread-187 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:24,776 INFO sqlalchemy.engine.base.Engine Thread-187 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:34:24,776 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:24,776 DEBUG sqlalchemy.engine.base.Engine Thread-187 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:34:24,777 INFO sqlalchemy.engine.base.Engine Thread-187 : ROLLBACK
2020-01-27 09:34:26,024 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-01-27 09:34:26,025 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:26,025 INFO sqlalchemy.engine.base.Engine Thread-188 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:34:26,025 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:26,026 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-01-27 09:34:27,258 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-01-27 09:34:27,258 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:34:27,258 INFO sqlalchemy.engine.base.Engine Thread-189 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 09:34:27,259 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:34:27,259 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 09:34:27,260 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-01-27 09:36:05,514 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-01-27 09:36:05,515 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:36:05,515 INFO sqlalchemy.engine.base.Engine Thread-190 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:36:05,517 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:36:05,518 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-01-27 09:36:18,104 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-01-27 09:36:18,105 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:36:18,105 INFO sqlalchemy.engine.base.Engine Thread-191 : (1, 1)
2020-01-27 09:36:18,106 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:36:18,106 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:36:18,109 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:36:18,109 INFO sqlalchemy.engine.base.Engine Thread-191 : ('philip', 1, 1)
2020-01-27 09:36:18,110 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:36:18,110 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:36:18,112 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:36:18,112 INFO sqlalchemy.engine.base.Engine Thread-191 : (75,)
2020-01-27 09:36:18,113 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:36:18,113 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 09:36:18,113 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 09:36:18,115 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 09:36:18,115 INFO sqlalchemy.engine.base.Engine Thread-191 : (78,)
2020-01-27 09:36:18,115 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 09:36:18,115 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 09:36:18,116 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 09:36:18,116 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 09:36:18,132 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 09:36:18,132 INFO sqlalchemy.engine.base.Engine Thread-191 : ('philip', 1, 1)
2020-01-27 09:36:18,132 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:36:18,132 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:36:19,646 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-01-27 09:36:54,094 INFO sqlalchemy.engine.base.Engine Thread-198 : BEGIN (implicit)
2020-01-27 09:36:54,094 INFO sqlalchemy.engine.base.Engine Thread-198 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 09:36:54,094 INFO sqlalchemy.engine.base.Engine Thread-198 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 09:36:54,095 DEBUG sqlalchemy.engine.base.Engine Thread-198 : Col ('start', 'end', 'title', 'description')
2020-01-27 09:36:54,096 INFO sqlalchemy.engine.base.Engine Thread-198 : ROLLBACK
2020-01-27 09:36:54,454 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-01-27 09:36:54,455 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 09:36:54,456 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-01-27 09:36:54,456 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 09:36:54,457 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 09:36:54,467 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-01-27 11:20:35,947 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 11:20:35,948 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 6, 1, 0, 0))
2020-01-27 11:22:22,367 INFO sqlalchemy.engine.base.Engine MainThread : BEGIN (implicit)
2020-01-27 11:22:22,369 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 11:22:22,369 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 6, 1, 0, 0))
2020-01-27 11:22:22,370 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 11:22:22,370 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 11:22:22,370 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND')
2020-01-27 11:22:22,370 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 11:22:22,371 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 11:27:31,022 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 11:27:31,022 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 6, 1, 0, 0))
2020-01-27 11:27:31,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 11:27:31,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 11:27:31,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND')
2020-01-27 11:27:31,025 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 11:27:31,026 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 11:27:48,601 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 11:27:48,601 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 2, 1, 0, 0), datetime.datetime(2020, 1, 1, 0, 0), datetime.datetime(2020, 2, 1, 0, 0))
2020-01-27 11:27:48,602 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 11:28:10,890 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 11:28:10,890 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 11:28:10,892 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 11:28:10,892 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 11:28:10,892 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 11:29:31,514 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 11:29:31,514 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 11:29:31,515 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 11:29:31,515 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 11:29:31,515 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 12:50:09,475 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 12:50:09,476 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 12:50:09,479 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 12:50:09,479 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 12:50:09,479 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND')
2020-01-27 12:50:09,480 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 12:50:09,480 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 13:17:38,031 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 13:17:38,031 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 13:17:38,034 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 13:17:38,035 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 13:17:38,035 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND')
2020-01-27 13:17:38,035 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 13:17:38,035 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 13:19:04,952 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 13:19:04,952 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,953 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 13:19:04,954 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 13:19:04,954 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 13:19:04,954 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,955 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 13:19:04,955 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 13:19:04,955 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 13:19:04,955 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,956 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 13:19:04,956 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 13:19:04,956 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 13:19:04,956 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,957 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 13:19:04,958 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 13:19:04,959 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 13:19:04,959 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,959 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 13:19:04,959 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,960 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 13:19:04,960 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 13:19:04,961 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 13:19:04,963 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 13:19:04,963 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-27 13:19:04,964 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:04,965 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:04,967 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 13:19:04,968 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-27 13:19:04,968 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:04,969 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:04,972 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 13:19:04,972 INFO sqlalchemy.engine.base.Engine Thread-2 : (75,)
2020-01-27 13:19:04,972 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 13:19:04,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 13:19:04,973 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 13:19:04,974 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 13:19:04,974 INFO sqlalchemy.engine.base.Engine Thread-2 : (78,)
2020-01-27 13:19:04,974 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 13:19:04,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 13:19:04,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 13:19:04,975 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 13:19:05,037 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 13:19:05,037 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-27 13:19:05,037 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:05,038 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:05,239 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 13:19:20,728 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 13:19:20,728 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 13:19:20,729 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 13:19:20,730 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 13:19:20,730 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND')
2020-01-27 13:19:20,730 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 13:19:20,730 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 13:19:28,366 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-27 13:19:28,367 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 13:19:28,367 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-27 13:19:28,368 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:28,368 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:28,370 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 13:19:28,370 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-27 13:19:28,371 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:28,371 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:28,373 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 13:19:28,373 INFO sqlalchemy.engine.base.Engine Thread-9 : (75,)
2020-01-27 13:19:28,374 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 13:19:28,374 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 13:19:28,374 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 13:19:28,375 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 13:19:28,375 INFO sqlalchemy.engine.base.Engine Thread-9 : (78,)
2020-01-27 13:19:28,376 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 13:19:28,376 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 13:19:28,376 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 13:19:28,376 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 13:19:28,380 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 13:19:28,380 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-27 13:19:28,381 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:28,381 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:28,594 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-27 13:19:32,625 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-27 13:19:32,626 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 13:19:32,626 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-27 13:19:32,627 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:32,627 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:32,630 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 13:19:32,630 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-27 13:19:32,631 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:32,631 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:32,633 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 13:19:32,633 INFO sqlalchemy.engine.base.Engine Thread-16 : (75,)
2020-01-27 13:19:32,634 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 13:19:32,634 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 13:19:32,634 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 13:19:32,636 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 13:19:32,636 INFO sqlalchemy.engine.base.Engine Thread-16 : (78,)
2020-01-27 13:19:32,636 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 13:19:32,636 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 13:19:32,636 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 13:19:32,636 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 13:19:32,640 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 13:19:32,640 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-27 13:19:32,641 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 13:19:32,641 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 13:19:32,848 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-27 13:33:57,280 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 13:33:57,281 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 13:33:57,284 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 15:14:16,905 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 15:14:16,906 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 15:14:16,908 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 15:14:16,909 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 15:14:16,909 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 15:15:47,014 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s
2020-01-27 15:15:47,014 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 15:15:47,016 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 15:15:47,016 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 15:15:47,016 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 15:22:43,189 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 15:22:43,190 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 15:22:43,192 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 16:35:01,833 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 16:35:01,833 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 16:35:01,836 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 16:37:43,366 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 16:37:43,366 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 16:37:43,369 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 18:44:18,255 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 18:44:18,255 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 18:44:18,258 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 18:47:47,690 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND (datesofinterest_1.doi_start_dt < %s OR datesofinterest_1.doi_end_dt < %s)
2020-01-27 18:47:47,690 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0), datetime.datetime(2020, 5, 1, 0, 0), datetime.datetime(2020, 5, 31, 0, 0))
2020-01-27 18:47:47,692 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 18:47:47,693 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND')
2020-01-27 18:47:47,693 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND')
2020-01-27 18:49:17,059 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-27 18:49:17,067 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 18:49:17,067 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-01-27 18:49:17,070 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 18:49:17,070 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 18:49:17,071 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 18:49:17,073 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 18:49:17,073 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-27 18:49:17,073 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:49:17,074 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:49:17,087 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 18:49:17,087 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-27 18:49:17,088 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:49:17,088 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:49:17,090 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-27 18:49:17,743 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-27 18:49:17,744 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 18:49:17,744 INFO sqlalchemy.engine.base.Engine Thread-31 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 18:49:17,745 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:49:17,746 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-27 18:49:19,457 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-27 18:49:19,458 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 18:49:19,458 INFO sqlalchemy.engine.base.Engine Thread-32 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 18:49:19,459 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:49:19,459 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 18:49:19,460 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-27 18:49:20,714 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-01-27 18:49:20,715 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt >= %s AND datesofinterest_1.doi_end_dt <= %s
2020-01-27 18:49:20,715 INFO sqlalchemy.engine.base.Engine Thread-33 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 18:49:20,716 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:49:20,717 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-01-27 18:49:24,446 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-27 18:49:24,447 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 18:49:24,447 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-01-27 18:49:24,448 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:49:24,448 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:49:24,450 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 18:49:24,451 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-01-27 18:49:24,451 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:49:24,452 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:49:24,454 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 18:49:24,454 INFO sqlalchemy.engine.base.Engine Thread-34 : (75,)
2020-01-27 18:49:24,455 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 18:49:24,455 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-27 18:49:24,455 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-27 18:49:24,456 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 18:49:24,457 INFO sqlalchemy.engine.base.Engine Thread-34 : (78,)
2020-01-27 18:49:24,457 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 18:49:24,457 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-27 18:49:24,457 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-27 18:49:24,458 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-27 18:49:24,462 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 18:49:24,462 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-01-27 18:49:24,463 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:49:24,463 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:49:25,927 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-27 18:51:38,994 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:51:38,994 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 18:51:38,996 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 18:51:38,996 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 18:53:14,925 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 18:53:14,926 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,927 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 18:53:14,928 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 18:53:14,928 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 18:53:14,928 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,929 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 18:53:14,929 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 18:53:14,929 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 18:53:14,929 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,930 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 18:53:14,930 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 18:53:14,930 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 18:53:14,930 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,931 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 18:53:14,931 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 18:53:14,931 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 18:53:14,931 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,932 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 18:53:14,932 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,933 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 18:53:14,933 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,933 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 18:53:14,939 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 18:53:14,939 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 18:53:14,941 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 18:53:14,941 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 18:53:14,941 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 18:53:14,945 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 18:53:14,945 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-27 18:53:14,945 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:53:14,946 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:53:15,005 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 18:53:15,006 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-27 18:53:15,006 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 18:53:15,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 18:53:15,008 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 18:53:15,502 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-27 18:53:15,503 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:15,503 INFO sqlalchemy.engine.base.Engine Thread-9 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 18:53:15,504 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:15,505 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-27 18:53:17,193 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-27 18:53:17,194 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:17,194 INFO sqlalchemy.engine.base.Engine Thread-10 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 18:53:17,195 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:17,196 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-27 18:53:18,124 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-27 18:53:18,125 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:18,125 INFO sqlalchemy.engine.base.Engine Thread-11 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 18:53:18,126 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:18,126 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 18:53:18,127 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-27 18:53:19,893 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-27 18:53:19,893 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:19,894 INFO sqlalchemy.engine.base.Engine Thread-12 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 18:53:19,894 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:19,895 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-27 18:53:20,519 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-27 18:53:20,520 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:20,520 INFO sqlalchemy.engine.base.Engine Thread-13 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 18:53:20,521 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:20,522 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-27 18:53:21,246 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-27 18:53:21,247 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:21,247 INFO sqlalchemy.engine.base.Engine Thread-14 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 18:53:21,248 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:21,249 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-27 18:53:21,597 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-27 18:53:21,598 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:21,598 INFO sqlalchemy.engine.base.Engine Thread-15 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 18:53:21,599 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:21,599 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 18:53:21,600 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-27 18:53:21,886 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-27 18:53:21,887 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:21,887 INFO sqlalchemy.engine.base.Engine Thread-16 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 18:53:21,888 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:21,889 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-27 18:53:23,096 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-27 18:53:23,097 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:23,098 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 18:53:23,098 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:23,099 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 18:53:23,100 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-27 18:53:24,008 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-27 18:53:24,010 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:53:24,010 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 18:53:24,011 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:53:24,011 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-27 18:55:30,201 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-27 18:55:30,203 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:55:30,203 INFO sqlalchemy.engine.base.Engine Thread-19 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 18:55:30,204 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:55:30,205 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-27 18:55:34,944 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-27 18:55:34,945 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:55:34,946 INFO sqlalchemy.engine.base.Engine Thread-20 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 18:55:34,946 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('start', 'end', 'title', 'description')
2020-01-27 18:55:34,947 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-27 18:56:17,983 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s AND (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s)
2020-01-27 18:56:17,983 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 18:56:17,984 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 19:11:42,871 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt < %s
2020-01-27 19:11:42,872 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:11:42,875 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 19:14:09,694 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s) AND datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:14:09,694 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:14:09,695 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 19:32:19,820 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:32:19,820 INFO sqlalchemy.engine.base.Engine MainThread : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:32:19,823 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions')
2020-01-27 19:32:19,824 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze RED', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND')
2020-01-27 19:34:13,339 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 19:34:13,340 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,341 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 19:34:13,341 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 19:34:13,342 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 19:34:13,342 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,342 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 19:34:13,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 19:34:13,343 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 19:34:13,343 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 19:34:13,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 19:34:13,344 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 19:34:13,344 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,345 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 19:34:13,345 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 19:34:13,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 19:34:13,345 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,346 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 19:34:13,346 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,347 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 19:34:13,347 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,347 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 19:34:13,354 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 19:34:13,354 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:34:13,355 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:34:13,356 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:34:13,356 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 19:34:13,360 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 19:34:13,360 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-27 19:34:13,361 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:34:13,361 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:34:13,418 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 19:34:13,419 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-27 19:34:13,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:34:13,420 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:34:13,421 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 19:34:13,927 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-27 19:34:13,928 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:13,928 INFO sqlalchemy.engine.base.Engine Thread-9 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 19:34:13,929 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:13,930 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-27 19:34:15,353 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-27 19:34:15,354 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:15,354 INFO sqlalchemy.engine.base.Engine Thread-11 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:34:15,355 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:15,356 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:15,356 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-27 19:34:17,037 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-27 19:34:17,038 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:17,038 INFO sqlalchemy.engine.base.Engine Thread-12 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:17,039 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:17,039 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:17,040 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-27 19:34:18,795 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-27 19:34:18,796 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:18,796 INFO sqlalchemy.engine.base.Engine Thread-13 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:34:18,797 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:18,797 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:18,798 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-27 19:34:19,395 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-27 19:34:19,396 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:19,396 INFO sqlalchemy.engine.base.Engine Thread-14 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:19,397 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:19,398 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:19,398 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-27 19:34:20,005 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-27 19:34:20,006 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:20,006 INFO sqlalchemy.engine.base.Engine Thread-15 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 19:34:20,006 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:20,007 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 19:34:20,007 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:20,008 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-27 19:34:21,103 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-27 19:34:21,104 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:21,104 INFO sqlalchemy.engine.base.Engine Thread-16 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 19:34:21,105 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:21,105 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:21,105 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 19:34:21,106 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-27 19:34:21,829 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-27 19:34:21,831 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:21,831 INFO sqlalchemy.engine.base.Engine Thread-17 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 19:34:21,832 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:21,832 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 19:34:21,832 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:21,833 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-27 19:34:22,096 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-27 19:34:22,097 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:22,097 INFO sqlalchemy.engine.base.Engine Thread-18 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:22,098 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:22,098 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:22,099 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-27 19:34:22,544 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-27 19:34:22,545 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:22,545 INFO sqlalchemy.engine.base.Engine Thread-19 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:34:22,546 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:22,546 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:22,547 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-27 19:34:26,247 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-27 19:34:26,248 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:26,248 INFO sqlalchemy.engine.base.Engine Thread-20 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:26,249 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:26,249 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:26,250 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-27 19:34:29,815 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-27 19:34:29,816 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:29,816 INFO sqlalchemy.engine.base.Engine Thread-21 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 19:34:29,817 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:29,817 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 19:34:29,817 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:29,818 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-27 19:34:34,427 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-01-27 19:34:34,428 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:34,428 INFO sqlalchemy.engine.base.Engine Thread-22 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:34,429 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:34,429 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:34,430 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-01-27 19:34:34,832 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-27 19:34:34,833 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:34,833 INFO sqlalchemy.engine.base.Engine Thread-23 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:34:34,834 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:34,835 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:34,835 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-27 19:34:36,901 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-27 19:34:36,902 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:36,902 INFO sqlalchemy.engine.base.Engine Thread-24 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:36,903 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:36,903 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:36,904 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-27 19:34:40,901 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-27 19:34:40,903 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:40,903 INFO sqlalchemy.engine.base.Engine Thread-25 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 19:34:40,904 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:40,904 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 19:34:40,904 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:40,905 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-27 19:34:43,888 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-01-27 19:34:43,889 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:43,889 INFO sqlalchemy.engine.base.Engine Thread-26 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 19:34:43,889 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:43,890 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:43,890 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 19:34:43,891 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-01-27 19:34:45,099 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-01-27 19:34:45,100 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:45,100 INFO sqlalchemy.engine.base.Engine Thread-27 : (datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0), datetime.datetime(2020, 6, 1, 0, 0), datetime.datetime(2020, 7, 13, 0, 0))
2020-01-27 19:34:45,101 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:45,102 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-01-27 19:34:46,038 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-01-27 19:34:46,039 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:46,039 INFO sqlalchemy.engine.base.Engine Thread-28 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-27 19:34:46,040 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:46,040 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:46,040 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-27 19:34:46,041 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-01-27 19:34:46,187 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-27 19:34:46,188 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:46,188 INFO sqlalchemy.engine.base.Engine Thread-29 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 19:34:46,189 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:46,189 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 19:34:46,190 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:34:46,190 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-27 19:34:46,352 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-27 19:34:46,353 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:46,353 INFO sqlalchemy.engine.base.Engine Thread-30 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:34:46,354 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:46,354 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:46,355 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-27 19:34:47,682 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-27 19:34:47,684 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:47,684 INFO sqlalchemy.engine.base.Engine Thread-31 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:34:47,684 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:47,685 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:34:47,685 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-27 19:34:49,631 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-27 19:34:49,631 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:34:49,631 INFO sqlalchemy.engine.base.Engine Thread-32 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-27 19:34:49,632 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:34:49,633 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-27 19:43:28,941 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-27 19:43:28,942 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,943 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 19:43:28,944 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-27 19:43:28,944 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-27 19:43:28,944 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,945 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-27 19:43:28,945 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-27 19:43:28,945 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-27 19:43:28,946 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,946 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-27 19:43:28,946 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-27 19:43:28,946 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-27 19:43:28,946 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,947 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-27 19:43:28,947 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-27 19:43:28,948 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-27 19:43:28,948 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,949 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-27 19:43:28,949 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,950 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-27 19:43:28,950 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-27 19:43:28,950 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-27 19:43:28,952 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:43:28,952 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-27 19:43:28,953 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:43:28,953 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:43:28,954 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-27 19:43:33,826 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-27 19:43:33,827 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:43:33,827 INFO sqlalchemy.engine.base.Engine Thread-3 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-27 19:43:33,828 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:43:33,828 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED', 'Change Freeze RED')
2020-01-27 19:43:33,829 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-27 19:43:39,831 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-27 19:43:39,832 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-27 19:43:39,832 INFO sqlalchemy.engine.base.Engine Thread-4 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-27 19:43:39,833 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('start', 'end', 'title', 'description')
2020-01-27 19:43:39,833 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-27 19:43:39,833 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-27 19:43:39,834 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-27 19:43:48,501 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-27 19:43:48,504 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 19:43:48,505 INFO sqlalchemy.engine.base.Engine Thread-5 : ('0', 1)
2020-01-27 19:43:48,506 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 19:43:48,516 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 19:43:48,517 INFO sqlalchemy.engine.base.Engine Thread-5 : ()
2020-01-27 19:43:48,518 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:43:48,518 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:43:48,518 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 19:43:48,521 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:43:48,521 INFO sqlalchemy.engine.base.Engine Thread-5 : (97,)
2020-01-27 19:43:48,521 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:43:48,522 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 19:43:48,522 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 19:43:48,523 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:43:48,523 INFO sqlalchemy.engine.base.Engine Thread-5 : (105,)
2020-01-27 19:43:48,523 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:43:48,524 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 19:43:48,524 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 19:43:48,527 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 19:43:48,527 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-27 19:43:48,528 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:43:48,530 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:43:48,535 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 19:43:48,535 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-27 19:43:48,536 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:43:48,536 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:43:48,620 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 19:43:48,620 INFO sqlalchemy.engine.base.Engine Thread-5 : ('philip', 1, 1)
2020-01-27 19:43:48,620 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:43:48,621 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:43:48,623 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-27 19:44:32,616 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-27 19:44:32,617 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 19:44:32,617 INFO sqlalchemy.engine.base.Engine Thread-13 : ('0', 1)
2020-01-27 19:44:32,618 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 19:44:32,622 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 19:44:32,622 INFO sqlalchemy.engine.base.Engine Thread-13 : ()
2020-01-27 19:44:32,624 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:44:32,624 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:44:32,624 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 19:44:32,626 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:44:32,626 INFO sqlalchemy.engine.base.Engine Thread-13 : (97,)
2020-01-27 19:44:32,626 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:44:32,627 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 19:44:32,627 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 19:44:32,628 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:44:32,628 INFO sqlalchemy.engine.base.Engine Thread-13 : (105,)
2020-01-27 19:44:32,629 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:44:32,629 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 19:44:32,629 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 19:44:32,632 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 19:44:32,633 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-01-27 19:44:32,633 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:44:32,634 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:44:32,636 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 19:44:32,636 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-01-27 19:44:32,637 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:44:32,637 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:44:32,677 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 19:44:32,678 INFO sqlalchemy.engine.base.Engine Thread-13 : ('philip', 1, 1)
2020-01-27 19:44:32,678 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:44:32,678 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:44:32,681 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-27 19:44:53,405 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-27 19:44:53,406 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 19:44:53,406 INFO sqlalchemy.engine.base.Engine Thread-21 : ('0', 1)
2020-01-27 19:44:53,407 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 19:44:53,411 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 19:44:53,411 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-01-27 19:44:53,412 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:44:53,412 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:44:53,413 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 19:44:53,414 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:44:53,414 INFO sqlalchemy.engine.base.Engine Thread-21 : (97,)
2020-01-27 19:44:53,414 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:44:53,415 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 19:44:53,415 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 19:44:53,416 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:44:53,416 INFO sqlalchemy.engine.base.Engine Thread-21 : (105,)
2020-01-27 19:44:53,417 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:44:53,417 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 19:44:53,417 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 19:44:53,420 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 19:44:53,420 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-01-27 19:44:53,421 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:44:53,421 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:44:53,423 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 19:44:53,423 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-01-27 19:44:53,424 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:44:53,424 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:44:53,463 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 19:44:53,464 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-01-27 19:44:53,464 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:44:53,465 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:44:53,467 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-27 19:45:07,158 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-27 19:45:07,159 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 19:45:07,160 INFO sqlalchemy.engine.base.Engine Thread-29 : ('0', 1)
2020-01-27 19:45:07,160 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 19:45:07,165 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 19:45:07,165 INFO sqlalchemy.engine.base.Engine Thread-29 : ()
2020-01-27 19:45:07,166 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:45:07,166 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:45:07,166 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 19:45:07,168 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:45:07,168 INFO sqlalchemy.engine.base.Engine Thread-29 : (97,)
2020-01-27 19:45:07,168 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:45:07,168 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 19:45:07,169 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 19:45:07,170 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 19:45:07,170 INFO sqlalchemy.engine.base.Engine Thread-29 : (105,)
2020-01-27 19:45:07,170 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 19:45:07,171 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 19:45:07,171 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 19:45:07,173 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 19:45:07,174 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-01-27 19:45:07,174 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 19:45:07,175 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 19:45:07,177 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 19:45:07,177 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-01-27 19:45:07,177 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:45:07,178 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:45:07,218 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 19:45:07,218 INFO sqlalchemy.engine.base.Engine Thread-29 : ('philip', 1, 1)
2020-01-27 19:45:07,219 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 19:45:07,219 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 19:45:07,222 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-27 20:17:05,183 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-27 20:17:05,185 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 20:17:05,185 INFO sqlalchemy.engine.base.Engine Thread-37 : ('0', 1)
2020-01-27 20:17:05,187 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 20:17:05,192 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 20:17:05,192 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-01-27 20:17:05,194 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 20:17:05,194 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 20:17:05,194 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 20:17:05,196 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 20:17:05,196 INFO sqlalchemy.engine.base.Engine Thread-37 : (97,)
2020-01-27 20:17:05,196 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 20:17:05,197 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 20:17:05,197 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 20:17:05,198 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 20:17:05,198 INFO sqlalchemy.engine.base.Engine Thread-37 : (105,)
2020-01-27 20:17:05,199 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 20:17:05,199 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 20:17:05,199 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 20:17:05,202 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 20:17:05,202 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-01-27 20:17:05,203 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 20:17:05,203 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 20:17:05,205 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 20:17:05,206 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-01-27 20:17:05,206 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 20:17:05,206 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 20:17:05,246 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 20:17:05,246 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-27 20:17:05,247 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 20:17:05,247 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 20:17:05,250 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-27 20:18:02,305 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-27 20:18:02,306 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-27 20:18:02,306 INFO sqlalchemy.engine.base.Engine Thread-46 : ('0', 1)
2020-01-27 20:18:02,307 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-27 20:18:02,311 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-27 20:18:02,311 INFO sqlalchemy.engine.base.Engine Thread-46 : ()
2020-01-27 20:18:02,312 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 20:18:02,312 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 20:18:02,313 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-27 20:18:02,314 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 20:18:02,314 INFO sqlalchemy.engine.base.Engine Thread-46 : (97,)
2020-01-27 20:18:02,314 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 20:18:02,315 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-27 20:18:02,315 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-27 20:18:02,316 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-27 20:18:02,316 INFO sqlalchemy.engine.base.Engine Thread-46 : (105,)
2020-01-27 20:18:02,316 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-27 20:18:02,317 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-27 20:18:02,317 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-27 20:18:02,320 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-27 20:18:02,320 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-01-27 20:18:02,321 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-27 20:18:02,321 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-27 20:18:02,323 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-27 20:18:02,323 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-01-27 20:18:02,324 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 20:18:02,324 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 20:18:02,365 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-27 20:18:02,365 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip', 1, 1)
2020-01-27 20:18:02,365 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-27 20:18:02,366 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-27 20:18:02,368 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
