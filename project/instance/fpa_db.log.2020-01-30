2020-01-30 00:00:53,211 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:00:53,211 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,212 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:00:53,213 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:00:53,214 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:00:53,214 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,214 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:00:53,214 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:00:53,215 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:00:53,215 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:00:53,215 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:00:53,215 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:00:53,216 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:00:53,216 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:00:53,217 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:00:53,217 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,218 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:00:53,218 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,219 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:00:53,219 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,219 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:00:53,222 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:00:53,222 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:00:53,222 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:00:53,223 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:00:53,226 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:00:53,226 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:00:53,226 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:00:53,227 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:00:53,301 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:00:53,301 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:00:53,301 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:00:53,302 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:00:53,305 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.param_value AS priority, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:00:53,305 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:00:53,306 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap', 'priority', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,307 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:53,310 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:00:57,766 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 00:00:57,767 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:00:57,767 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 00:00:57,768 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:00:57,768 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:00:57,770 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:00:57,770 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:00:57,771 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:00:57,771 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:00:57,782 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:00:57,782 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:00:57,783 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:00:57,783 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:00:57,787 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.param_value AS priority, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:00:57,788 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 00:00:57,788 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap', 'priority', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,789 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:00:57,791 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 00:04:20,977 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:04:20,978 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:04:20,979 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:04:20,980 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:04:20,980 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,981 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:04:20,981 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:04:20,981 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:04:20,981 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:04:20,982 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:04:20,982 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:04:20,982 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:04:20,983 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:04:20,984 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:04:20,984 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,984 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:04:20,985 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,985 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:04:20,985 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:20,986 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:04:20,988 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:04:20,988 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:04:20,989 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:20,990 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:20,993 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:20,993 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:04:20,994 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:20,994 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:21,005 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.param_value AS priority, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:04:21,005 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:21,006 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap', 'priority', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,007 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:21,076 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:21,076 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:04:21,077 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:21,077 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:21,080 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:04:24,424 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 00:04:24,425 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:04:24,425 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 00:04:24,426 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:24,427 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:24,429 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:24,429 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:04:24,430 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:24,430 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:24,432 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:04:24,432 INFO sqlalchemy.engine.base.Engine Thread-10 : ('8', 1)
2020-01-30 00:04:24,433 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:04:24,433 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:04:24,436 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:04:24,436 INFO sqlalchemy.engine.base.Engine Thread-10 : (82,)
2020-01-30 00:04:24,437 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:04:24,437 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:04:24,437 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:04:24,437 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:04:24,438 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:04:24,438 INFO sqlalchemy.engine.base.Engine Thread-10 : (1,)
2020-01-30 00:04:24,439 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:04:24,439 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:04:24,439 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:04:24,440 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:04:24,440 INFO sqlalchemy.engine.base.Engine Thread-10 : (105,)
2020-01-30 00:04:24,441 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:04:24,441 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:04:24,441 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:04:24,443 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:04:24,443 INFO sqlalchemy.engine.base.Engine Thread-10 : (105,)
2020-01-30 00:04:24,443 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:04:24,444 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:04:24,444 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:04:24,480 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:24,480 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:04:24,481 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:24,481 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:24,483 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 00:04:27,061 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 00:04:27,062 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:04:27,062 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-30 00:04:27,063 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:27,063 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:27,067 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:27,067 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-30 00:04:27,068 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:27,068 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:27,076 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.param_value AS priority, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:04:27,077 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 00:04:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap', 'priority', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:04:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,078 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,079 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,079 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:27,083 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:27,083 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-30 00:04:27,084 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:27,084 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:27,086 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 00:04:51,837 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:04:51,837 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,838 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:04:51,839 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:04:51,839 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:04:51,839 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:04:51,840 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:04:51,840 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:04:51,840 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:04:51,841 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:04:51,841 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:04:51,841 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,842 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:04:51,842 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:04:51,843 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:04:51,843 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,843 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:04:51,843 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,844 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:04:51,844 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,845 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:04:51,847 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:04:51,847 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:04:51,848 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:51,848 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:51,851 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:51,852 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:04:51,852 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:51,853 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:51,861 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.param_value AS priority, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:04:51,861 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:04:51,862 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap', 'priority', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,863 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:04:51,937 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:04:51,937 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:04:51,938 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:04:51,938 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:04:51,941 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:05:08,842 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 00:05:08,843 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:05:08,843 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 00:05:08,844 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:05:08,844 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:05:08,847 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:05:08,847 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:05:08,848 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:05:08,848 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:05:08,857 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_priority AS datesofinterest_1_doi_priority, datesofinterest_1.doi_comment AS datesofinterest_1_doi_comment, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_locked AS datesofinterest_1_doi_locked, datesofinterest_1.doi_hap AS datesofinterest_1_doi_hap, parameters_1.param_value AS priority, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:05:08,857 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 00:05:08,858 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_priority', 'datesofinterest_1_doi_comment', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_locked', 'datesofinterest_1_doi_hap', 'priority', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:05:08,858 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,858 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107, 'High', '0', '0')
2020-01-30 00:05:08,864 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:05:08,864 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:05:08,865 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:05:08,865 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:05:08,867 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 00:11:16,153 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:11:16,153 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,154 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:11:16,155 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:11:16,156 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:11:16,156 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,156 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:11:16,156 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:11:16,157 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:11:16,157 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,157 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:11:16,157 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:11:16,157 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:11:16,158 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,158 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:11:16,158 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:11:16,159 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:11:16,159 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,160 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:11:16,160 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,160 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:11:16,161 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,161 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:11:16,163 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:11:16,163 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:11:16,164 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:11:16,165 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:11:16,167 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:11:16,167 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:11:16,168 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:11:16,168 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:11:16,177 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:11:16,177 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:11:16,178 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze RED ', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,179 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:16,251 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:11:16,251 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:11:16,252 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:11:16,252 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:11:16,255 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:11:49,357 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 00:11:49,358 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:11:49,358 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 00:11:49,360 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:11:49,360 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:11:49,363 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:11:49,363 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:11:49,364 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:11:49,364 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:11:49,372 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_value AS parameters_2_param_value, parameters_3.param_value AS parameters_3_param_value 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:11:49,372 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 00:11:49,373 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'parameters_1_param_value', 'parameters_2_param_value', 'parameters_3_param_value')
2020-01-30 00:11:49,374 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Change Freeze RED ', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,374 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,374 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (9, 'May Day', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,374 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (10, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,374 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (11, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,374 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (12, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,375 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (13, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 'High', '0', '0')
2020-01-30 00:11:49,380 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:11:49,381 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:11:49,381 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:11:49,381 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:11:49,384 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 00:12:54,494 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:12:54,494 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:12:54,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:12:54,496 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:12:54,496 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:12:54,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:12:54,497 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:12:54,497 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,498 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:12:54,498 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:12:54,498 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:12:54,498 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,499 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:12:54,499 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:12:54,500 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:12:54,500 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,500 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:12:54,500 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,501 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:12:54,501 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,502 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:12:54,504 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:12:54,504 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:12:54,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:12:54,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:12:54,508 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:12:54,508 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:12:54,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:12:54,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:12:54,519 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:12:54,519 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:12:54,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:12:54,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze RED ', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:12:54,589 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:12:54,590 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:12:54,591 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:12:54,591 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:12:54,594 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:13:51,016 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 00:13:51,017 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:13:51,018 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 00:13:51,019 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:13:51,019 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:13:51,022 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:13:51,022 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:13:51,023 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:13:51,023 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:13:51,032 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:13:51,032 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Change Freeze RED ', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (9, 'May Day', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (10, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (11, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (12, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (13, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:13:51,052 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:13:51,052 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:13:51,053 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:13:51,053 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:13:51,055 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 00:13:58,144 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-30 00:13:58,145 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:13:58,145 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-01-30 00:13:58,146 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:13:58,146 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:13:58,150 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:13:58,150 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-01-30 00:13:58,151 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:13:58,151 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:13:58,154 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:13:58,154 INFO sqlalchemy.engine.base.Engine Thread-18 : ('10', 1)
2020-01-30 00:13:58,155 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:13:58,155 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:13:58,158 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:13:58,158 INFO sqlalchemy.engine.base.Engine Thread-18 : (82,)
2020-01-30 00:13:58,159 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:13:58,159 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:13:58,159 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:13:58,159 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:13:58,161 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:13:58,161 INFO sqlalchemy.engine.base.Engine Thread-18 : (1,)
2020-01-30 00:13:58,161 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:13:58,162 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:13:58,162 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:13:58,163 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:13:58,163 INFO sqlalchemy.engine.base.Engine Thread-18 : (105,)
2020-01-30 00:13:58,164 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:13:58,164 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:13:58,164 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:13:58,166 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:13:58,166 INFO sqlalchemy.engine.base.Engine Thread-18 : (105,)
2020-01-30 00:13:58,166 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:13:58,167 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:13:58,167 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:13:58,202 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:13:58,202 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-01-30 00:13:58,203 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:13:58,203 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:13:58,205 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-30 00:14:02,439 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-30 00:14:02,440 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:14:02,440 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-01-30 00:14:02,441 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:14:02,441 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:14:02,443 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:14:02,443 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-01-30 00:14:02,444 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:14:02,444 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:14:02,453 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:14:02,453 INFO sqlalchemy.engine.base.Engine Thread-25 : ()
2020-01-30 00:14:02,454 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:14:02,454 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Change Freeze RED ', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (8, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (9, 'May Day', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (10, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (11, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (12, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (13, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:14:02,459 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:14:02,459 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-01-30 00:14:02,460 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:14:02,460 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:14:02,462 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-30 00:16:34,260 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 00:16:34,262 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:16:34,262 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-01-30 00:16:34,264 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:16:34,264 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:16:34,267 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:16:34,267 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-01-30 00:16:34,267 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:16:34,268 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:16:34,276 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:16:34,276 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'datesofinterest_1_doi_regions', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Change Freeze RED ', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (8, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (9, 'May Day', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (10, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (11, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,277 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (12, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,278 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (13, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 'High', 'No', 'No')
2020-01-30 00:16:34,292 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:16:34,293 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-01-30 00:16:34,293 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:16:34,294 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:16:34,296 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 00:17:32,492 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:17:32,493 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,494 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:17:32,494 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:17:32,495 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:17:32,495 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:17:32,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:17:32,496 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:17:32,496 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:17:32,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:17:32,497 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:17:32,497 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,498 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:17:32,498 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:17:32,499 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:17:32,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,500 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:17:32,500 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,501 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:17:32,501 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,502 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:17:32,504 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:17:32,504 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:17:32,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:17:32,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:17:32,508 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:17:32,508 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:17:32,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:17:32,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:17:32,519 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:17:32,520 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:17:32,520 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:17:32,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,521 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:17:32,591 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:17:32,591 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:17:32,592 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:17:32,592 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:17:32,594 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:17:56,942 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 00:17:56,943 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:17:56,943 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 00:17:56,944 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:17:56,944 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:17:56,946 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:17:56,946 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:17:56,947 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:17:56,947 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:17:56,949 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:17:56,950 INFO sqlalchemy.engine.base.Engine Thread-10 : ('8', 1)
2020-01-30 00:17:56,950 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:17:56,950 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:17:56,953 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:17:56,953 INFO sqlalchemy.engine.base.Engine Thread-10 : (82,)
2020-01-30 00:17:56,954 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:17:56,954 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:17:56,954 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:17:56,954 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:17:56,955 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:17:56,956 INFO sqlalchemy.engine.base.Engine Thread-10 : (1,)
2020-01-30 00:17:56,956 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:17:56,957 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:17:56,957 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:17:56,958 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:17:56,958 INFO sqlalchemy.engine.base.Engine Thread-10 : (105,)
2020-01-30 00:17:56,959 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:17:56,959 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:17:56,959 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:17:56,960 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:17:56,960 INFO sqlalchemy.engine.base.Engine Thread-10 : (105,)
2020-01-30 00:17:56,961 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:17:56,961 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:17:56,961 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:17:56,996 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:17:56,997 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 00:17:56,997 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:17:56,997 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:17:57,000 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 00:18:00,779 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 00:18:00,780 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:00,780 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-30 00:18:00,781 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:00,781 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:00,783 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:00,783 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-30 00:18:00,784 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:00,784 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:00,792 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:18:00,792 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,793 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:00,797 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:00,797 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-30 00:18:00,798 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:00,798 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:00,800 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 00:18:03,658 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 00:18:03,660 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:03,660 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-30 00:18:03,661 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:03,661 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:03,663 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:03,663 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-30 00:18:03,664 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:03,664 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:03,666 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:18:03,666 INFO sqlalchemy.engine.base.Engine Thread-24 : ('1', 1)
2020-01-30 00:18:03,666 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:18:03,666 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:18:03,668 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:03,669 INFO sqlalchemy.engine.base.Engine Thread-24 : (82,)
2020-01-30 00:18:03,669 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:03,669 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:18:03,669 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:18:03,669 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:18:03,671 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:18:03,671 INFO sqlalchemy.engine.base.Engine Thread-24 : (1,)
2020-01-30 00:18:03,671 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:03,671 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:18:03,672 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:18:03,673 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:03,673 INFO sqlalchemy.engine.base.Engine Thread-24 : (105,)
2020-01-30 00:18:03,673 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:03,674 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:03,674 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:03,675 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:03,675 INFO sqlalchemy.engine.base.Engine Thread-24 : (105,)
2020-01-30 00:18:03,676 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:03,676 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:03,676 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:03,680 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:03,680 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-30 00:18:03,680 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:03,681 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:03,683 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 00:18:07,441 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 00:18:07,442 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:07,442 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-01-30 00:18:07,443 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:07,443 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:07,446 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:07,446 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-30 00:18:07,447 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:07,447 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:07,448 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:18:07,448 INFO sqlalchemy.engine.base.Engine Thread-31 : ('1', 1)
2020-01-30 00:18:07,449 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:18:07,449 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:18:07,452 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:07,452 INFO sqlalchemy.engine.base.Engine Thread-31 : (82,)
2020-01-30 00:18:07,453 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:07,453 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:18:07,453 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:18:07,453 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:18:07,454 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:18:07,454 INFO sqlalchemy.engine.base.Engine Thread-31 : (1,)
2020-01-30 00:18:07,455 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:07,455 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:18:07,455 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:18:07,456 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:07,456 INFO sqlalchemy.engine.base.Engine Thread-31 : (105,)
2020-01-30 00:18:07,457 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:07,457 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:07,457 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:07,458 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:07,458 INFO sqlalchemy.engine.base.Engine Thread-31 : (105,)
2020-01-30 00:18:07,459 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:07,459 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:07,459 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:07,463 INFO sqlalchemy.engine.base.Engine Thread-31 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_locked=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:18:07,463 INFO sqlalchemy.engine.base.Engine Thread-31 : ('1', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 106, 106, 1)
2020-01-30 00:18:07,464 INFO sqlalchemy.engine.base.Engine Thread-31 : COMMIT
2020-01-30 00:18:07,559 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 00:18:07,561 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:07,561 INFO sqlalchemy.engine.base.Engine Thread-32 : (1, 1)
2020-01-30 00:18:07,562 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:07,562 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:07,564 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:07,564 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-01-30 00:18:07,565 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:07,565 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:07,572 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:18:07,573 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-01-30 00:18:07,573 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:18:07,573 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:18:07,573 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:07,574 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:07,578 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:07,578 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip', 1, 1)
2020-01-30 00:18:07,578 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:07,579 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:07,581 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 00:18:21,275 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-30 00:18:21,276 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:21,276 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-01-30 00:18:21,277 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:21,277 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:21,279 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:21,279 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-30 00:18:21,280 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:21,280 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:21,281 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:18:21,281 INFO sqlalchemy.engine.base.Engine Thread-39 : ('8', 1)
2020-01-30 00:18:21,282 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:18:21,282 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:18:21,284 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:21,284 INFO sqlalchemy.engine.base.Engine Thread-39 : (82,)
2020-01-30 00:18:21,285 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:21,285 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:18:21,285 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:18:21,285 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:18:21,287 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:18:21,287 INFO sqlalchemy.engine.base.Engine Thread-39 : (1,)
2020-01-30 00:18:21,287 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:21,287 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:18:21,287 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:18:21,289 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:21,289 INFO sqlalchemy.engine.base.Engine Thread-39 : (105,)
2020-01-30 00:18:21,289 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:21,289 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:21,290 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:21,291 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:21,291 INFO sqlalchemy.engine.base.Engine Thread-39 : (105,)
2020-01-30 00:18:21,291 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:21,291 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:21,292 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:21,295 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:21,295 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-30 00:18:21,296 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:21,296 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:21,299 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-30 00:18:24,024 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-30 00:18:24,025 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:24,025 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-01-30 00:18:24,026 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:24,026 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:24,028 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:24,029 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip', 1, 1)
2020-01-30 00:18:24,029 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:24,030 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:24,031 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:18:24,031 INFO sqlalchemy.engine.base.Engine Thread-46 : ('8', 1)
2020-01-30 00:18:24,032 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:18:24,032 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (8, 'Easter Holiday', 83, 'Easter Holiday', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:18:24,035 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:24,035 INFO sqlalchemy.engine.base.Engine Thread-46 : (82,)
2020-01-30 00:18:24,035 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:24,036 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:18:24,036 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:18:24,036 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:18:24,037 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:18:24,037 INFO sqlalchemy.engine.base.Engine Thread-46 : (1,)
2020-01-30 00:18:24,038 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:24,038 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:18:24,038 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:18:24,039 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:24,039 INFO sqlalchemy.engine.base.Engine Thread-46 : (105,)
2020-01-30 00:18:24,040 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:24,040 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:24,040 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:24,042 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:24,042 INFO sqlalchemy.engine.base.Engine Thread-46 : (105,)
2020-01-30 00:18:24,042 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:24,043 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:24,043 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:24,045 INFO sqlalchemy.engine.base.Engine Thread-46 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:18:24,045 INFO sqlalchemy.engine.base.Engine Thread-46 : ('8', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 106, 8)
2020-01-30 00:18:24,046 INFO sqlalchemy.engine.base.Engine Thread-46 : COMMIT
2020-01-30 00:18:24,143 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-01-30 00:18:24,144 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:24,144 INFO sqlalchemy.engine.base.Engine Thread-47 : (1, 1)
2020-01-30 00:18:24,145 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:24,145 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:24,147 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:24,147 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-01-30 00:18:24,148 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:24,148 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:24,156 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:18:24,156 INFO sqlalchemy.engine.base.Engine Thread-47 : ()
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:24,157 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:24,161 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:24,161 INFO sqlalchemy.engine.base.Engine Thread-47 : ('philip', 1, 1)
2020-01-30 00:18:24,162 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:24,162 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:24,165 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-01-30 00:18:55,821 INFO sqlalchemy.engine.base.Engine Thread-54 : BEGIN (implicit)
2020-01-30 00:18:55,822 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:55,822 INFO sqlalchemy.engine.base.Engine Thread-54 : (1, 1)
2020-01-30 00:18:55,823 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:55,824 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:55,826 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:55,826 INFO sqlalchemy.engine.base.Engine Thread-54 : ('philip', 1, 1)
2020-01-30 00:18:55,827 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:55,827 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:55,829 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:18:55,829 INFO sqlalchemy.engine.base.Engine Thread-54 : ('11', 1)
2020-01-30 00:18:55,829 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:18:55,830 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:18:55,832 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:55,832 INFO sqlalchemy.engine.base.Engine Thread-54 : (82,)
2020-01-30 00:18:55,832 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:55,832 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:18:55,833 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:18:55,833 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:18:55,834 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:18:55,834 INFO sqlalchemy.engine.base.Engine Thread-54 : (1,)
2020-01-30 00:18:55,834 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:55,835 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:18:55,835 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:18:55,836 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:55,836 INFO sqlalchemy.engine.base.Engine Thread-54 : (105,)
2020-01-30 00:18:55,836 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:55,836 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:55,837 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:55,838 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:55,838 INFO sqlalchemy.engine.base.Engine Thread-54 : (105,)
2020-01-30 00:18:55,839 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:55,839 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:55,839 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:55,843 INFO sqlalchemy.engine.base.Engine Thread-54 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:55,843 INFO sqlalchemy.engine.base.Engine Thread-54 : ('philip', 1, 1)
2020-01-30 00:18:55,844 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:55,844 DEBUG sqlalchemy.engine.base.Engine Thread-54 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:55,847 INFO sqlalchemy.engine.base.Engine Thread-54 : ROLLBACK
2020-01-30 00:18:59,189 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-01-30 00:18:59,190 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:59,191 INFO sqlalchemy.engine.base.Engine Thread-61 : (1, 1)
2020-01-30 00:18:59,191 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:59,191 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:59,194 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:59,194 INFO sqlalchemy.engine.base.Engine Thread-61 : ('philip', 1, 1)
2020-01-30 00:18:59,195 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:59,195 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:59,196 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:18:59,197 INFO sqlalchemy.engine.base.Engine Thread-61 : ('11', 1)
2020-01-30 00:18:59,197 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:18:59,197 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (11, 'Christmas Day', 83, 'Christmas Day', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:18:59,201 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:59,201 INFO sqlalchemy.engine.base.Engine Thread-61 : (82,)
2020-01-30 00:18:59,201 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:59,201 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:18:59,202 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:18:59,202 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:18:59,203 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:18:59,203 INFO sqlalchemy.engine.base.Engine Thread-61 : (1,)
2020-01-30 00:18:59,204 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:59,204 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:18:59,204 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:18:59,205 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:59,205 INFO sqlalchemy.engine.base.Engine Thread-61 : (105,)
2020-01-30 00:18:59,205 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:59,206 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:59,206 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:59,207 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:18:59,207 INFO sqlalchemy.engine.base.Engine Thread-61 : (105,)
2020-01-30 00:18:59,207 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:18:59,208 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:18:59,208 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:18:59,209 INFO sqlalchemy.engine.base.Engine Thread-61 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:18:59,209 INFO sqlalchemy.engine.base.Engine Thread-61 : ('11', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 106, 11)
2020-01-30 00:18:59,210 INFO sqlalchemy.engine.base.Engine Thread-61 : COMMIT
2020-01-30 00:18:59,283 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-01-30 00:18:59,284 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:18:59,284 INFO sqlalchemy.engine.base.Engine Thread-62 : (1, 1)
2020-01-30 00:18:59,285 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:59,285 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:59,287 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:59,287 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-01-30 00:18:59,288 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:59,288 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:59,296 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:18:59,296 INFO sqlalchemy.engine.base.Engine Thread-62 : ()
2020-01-30 00:18:59,297 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:18:59,297 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:18:59,297 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:18:59,298 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:59,298 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:59,298 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:18:59,298 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:59,298 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:18:59,315 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:18:59,316 INFO sqlalchemy.engine.base.Engine Thread-62 : ('philip', 1, 1)
2020-01-30 00:18:59,316 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:18:59,316 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:18:59,320 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-01-30 00:19:04,941 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-01-30 00:19:04,942 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:04,942 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-01-30 00:19:04,943 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:04,943 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:04,946 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:04,946 INFO sqlalchemy.engine.base.Engine Thread-69 : ('philip', 1, 1)
2020-01-30 00:19:04,946 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:04,947 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:04,948 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:04,948 INFO sqlalchemy.engine.base.Engine Thread-69 : ('10', 1)
2020-01-30 00:19:04,949 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:04,949 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:04,952 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:04,952 INFO sqlalchemy.engine.base.Engine Thread-69 : (82,)
2020-01-30 00:19:04,952 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:04,952 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:04,953 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:04,953 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:04,954 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:04,954 INFO sqlalchemy.engine.base.Engine Thread-69 : (1,)
2020-01-30 00:19:04,954 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:04,955 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:04,955 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:04,956 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:04,956 INFO sqlalchemy.engine.base.Engine Thread-69 : (105,)
2020-01-30 00:19:04,956 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:04,956 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:04,957 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:04,958 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:04,958 INFO sqlalchemy.engine.base.Engine Thread-69 : (105,)
2020-01-30 00:19:04,958 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:04,959 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:04,959 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:04,964 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:04,964 INFO sqlalchemy.engine.base.Engine Thread-69 : ('philip', 1, 1)
2020-01-30 00:19:04,964 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:04,965 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:04,967 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-01-30 00:19:08,766 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-01-30 00:19:08,767 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:08,767 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-01-30 00:19:08,768 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:08,768 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:08,771 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:08,771 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip', 1, 1)
2020-01-30 00:19:08,772 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:08,772 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:08,773 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:08,774 INFO sqlalchemy.engine.base.Engine Thread-76 : ('10', 1)
2020-01-30 00:19:08,774 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:08,774 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (10, 'Late May Holiday', 83, 'Late May Holiday', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:08,778 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:08,778 INFO sqlalchemy.engine.base.Engine Thread-76 : (82,)
2020-01-30 00:19:08,778 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:08,779 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:08,779 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:08,779 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:08,780 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:08,780 INFO sqlalchemy.engine.base.Engine Thread-76 : (1,)
2020-01-30 00:19:08,781 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:08,781 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:08,781 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:08,783 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:08,783 INFO sqlalchemy.engine.base.Engine Thread-76 : (105,)
2020-01-30 00:19:08,783 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:08,784 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:08,784 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:08,786 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:08,786 INFO sqlalchemy.engine.base.Engine Thread-76 : (105,)
2020-01-30 00:19:08,786 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:08,786 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:08,787 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:08,788 INFO sqlalchemy.engine.base.Engine Thread-76 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:19:08,788 INFO sqlalchemy.engine.base.Engine Thread-76 : ('10', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 106, 10)
2020-01-30 00:19:08,789 INFO sqlalchemy.engine.base.Engine Thread-76 : COMMIT
2020-01-30 00:19:08,843 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-01-30 00:19:08,844 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:08,844 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-01-30 00:19:08,845 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:08,845 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:08,848 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:08,848 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-01-30 00:19:08,849 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:08,849 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:08,858 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:19:08,858 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-01-30 00:19:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:19:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:19:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'No', 'No')
2020-01-30 00:19:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:08,860 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:08,860 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:19:08,860 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:19:08,864 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:08,864 INFO sqlalchemy.engine.base.Engine Thread-77 : ('philip', 1, 1)
2020-01-30 00:19:08,865 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:08,865 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:08,868 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-01-30 00:19:12,752 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-01-30 00:19:12,753 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:12,753 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-01-30 00:19:12,754 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:12,754 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:12,756 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:12,756 INFO sqlalchemy.engine.base.Engine Thread-84 : ('philip', 1, 1)
2020-01-30 00:19:12,757 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:12,757 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:12,758 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:12,759 INFO sqlalchemy.engine.base.Engine Thread-84 : ('9', 1)
2020-01-30 00:19:12,759 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:12,759 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:12,762 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:12,762 INFO sqlalchemy.engine.base.Engine Thread-84 : (82,)
2020-01-30 00:19:12,763 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:12,763 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:12,763 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:12,763 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:12,764 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:12,764 INFO sqlalchemy.engine.base.Engine Thread-84 : (1,)
2020-01-30 00:19:12,765 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:12,765 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:12,765 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:12,766 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:12,766 INFO sqlalchemy.engine.base.Engine Thread-84 : (105,)
2020-01-30 00:19:12,767 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:12,767 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:12,767 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:12,768 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:12,768 INFO sqlalchemy.engine.base.Engine Thread-84 : (105,)
2020-01-30 00:19:12,769 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:12,769 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:12,769 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:12,773 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:12,773 INFO sqlalchemy.engine.base.Engine Thread-84 : ('philip', 1, 1)
2020-01-30 00:19:12,774 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:12,774 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:12,776 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-01-30 00:19:15,415 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-01-30 00:19:15,416 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:15,417 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-01-30 00:19:15,417 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:15,418 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:15,420 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:15,420 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-01-30 00:19:15,421 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:15,421 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:15,423 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:15,423 INFO sqlalchemy.engine.base.Engine Thread-91 : ('9', 1)
2020-01-30 00:19:15,424 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:15,424 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (9, 'May Day', 83, 'May Day Holiday', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:15,427 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:15,427 INFO sqlalchemy.engine.base.Engine Thread-91 : (82,)
2020-01-30 00:19:15,428 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:15,428 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:15,428 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:15,428 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:15,430 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:15,430 INFO sqlalchemy.engine.base.Engine Thread-91 : (1,)
2020-01-30 00:19:15,430 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:15,431 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:15,431 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:15,432 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:15,432 INFO sqlalchemy.engine.base.Engine Thread-91 : (105,)
2020-01-30 00:19:15,433 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:15,433 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:15,433 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:15,434 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:15,435 INFO sqlalchemy.engine.base.Engine Thread-91 : (105,)
2020-01-30 00:19:15,435 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:15,435 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:15,435 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:15,436 INFO sqlalchemy.engine.base.Engine Thread-91 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:19:15,437 INFO sqlalchemy.engine.base.Engine Thread-91 : ('9', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 106, 9)
2020-01-30 00:19:15,437 INFO sqlalchemy.engine.base.Engine Thread-91 : COMMIT
2020-01-30 00:19:15,544 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-01-30 00:19:15,545 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:15,545 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-01-30 00:19:15,546 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:15,546 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:15,549 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:15,549 INFO sqlalchemy.engine.base.Engine Thread-92 : ('philip', 1, 1)
2020-01-30 00:19:15,549 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:15,550 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:15,558 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:19:15,558 INFO sqlalchemy.engine.base.Engine Thread-92 : ()
2020-01-30 00:19:15,559 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:19:15,559 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:19:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'No', 'No')
2020-01-30 00:19:15,560 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:19:15,565 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:15,565 INFO sqlalchemy.engine.base.Engine Thread-92 : ('philip', 1, 1)
2020-01-30 00:19:15,566 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:15,566 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:15,570 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-01-30 00:19:18,840 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-01-30 00:19:18,841 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:18,842 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-01-30 00:19:18,842 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:18,843 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:18,845 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:18,845 INFO sqlalchemy.engine.base.Engine Thread-99 : ('philip', 1, 1)
2020-01-30 00:19:18,846 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:18,846 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:18,848 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:18,848 INFO sqlalchemy.engine.base.Engine Thread-99 : ('12', 1)
2020-01-30 00:19:18,848 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:18,849 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:18,852 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:18,852 INFO sqlalchemy.engine.base.Engine Thread-99 : (82,)
2020-01-30 00:19:18,852 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:18,853 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:18,853 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:18,853 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:18,854 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:18,854 INFO sqlalchemy.engine.base.Engine Thread-99 : (1,)
2020-01-30 00:19:18,855 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:18,855 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:18,855 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:18,856 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:18,856 INFO sqlalchemy.engine.base.Engine Thread-99 : (105,)
2020-01-30 00:19:18,857 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:18,857 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:18,857 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:18,858 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:18,858 INFO sqlalchemy.engine.base.Engine Thread-99 : (105,)
2020-01-30 00:19:18,859 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:18,859 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:18,859 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:18,863 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:18,863 INFO sqlalchemy.engine.base.Engine Thread-99 : ('philip', 1, 1)
2020-01-30 00:19:18,864 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:18,864 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:18,867 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-01-30 00:19:21,792 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-01-30 00:19:21,793 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:21,793 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-01-30 00:19:21,794 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:21,794 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:21,796 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:21,796 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-01-30 00:19:21,797 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:21,797 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:21,799 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:21,799 INFO sqlalchemy.engine.base.Engine Thread-106 : ('12', 1)
2020-01-30 00:19:21,800 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:21,800 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:21,802 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:21,803 INFO sqlalchemy.engine.base.Engine Thread-106 : (82,)
2020-01-30 00:19:21,803 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:21,803 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:21,803 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:21,804 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:21,805 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:21,805 INFO sqlalchemy.engine.base.Engine Thread-106 : (1,)
2020-01-30 00:19:21,806 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:21,806 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:21,806 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:21,807 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:21,807 INFO sqlalchemy.engine.base.Engine Thread-106 : (105,)
2020-01-30 00:19:21,808 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:21,809 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:21,809 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:21,810 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:21,810 INFO sqlalchemy.engine.base.Engine Thread-106 : (105,)
2020-01-30 00:19:21,811 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:21,811 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:21,811 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:21,812 INFO sqlalchemy.engine.base.Engine Thread-106 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:19:21,812 INFO sqlalchemy.engine.base.Engine Thread-106 : ('12', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 106, 12)
2020-01-30 00:19:21,813 INFO sqlalchemy.engine.base.Engine Thread-106 : COMMIT
2020-01-30 00:19:21,880 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-01-30 00:19:21,881 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:21,881 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-01-30 00:19:21,882 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:21,882 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:21,884 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:21,884 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-01-30 00:19:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:21,885 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:21,894 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:19:21,894 INFO sqlalchemy.engine.base.Engine Thread-107 : ()
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:21,895 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'No', 'No')
2020-01-30 00:19:21,899 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:21,899 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-01-30 00:19:21,900 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:21,900 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:21,903 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-01-30 00:19:23,312 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-01-30 00:19:23,314 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:23,314 INFO sqlalchemy.engine.base.Engine Thread-114 : (1, 1)
2020-01-30 00:19:23,316 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:23,316 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:23,319 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:23,319 INFO sqlalchemy.engine.base.Engine Thread-114 : ('philip', 1, 1)
2020-01-30 00:19:23,320 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:23,320 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:23,322 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:23,322 INFO sqlalchemy.engine.base.Engine Thread-114 : ('13', 1)
2020-01-30 00:19:23,323 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:23,323 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:23,326 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:23,326 INFO sqlalchemy.engine.base.Engine Thread-114 : (82,)
2020-01-30 00:19:23,327 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:23,327 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:23,327 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:23,327 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:23,328 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:23,329 INFO sqlalchemy.engine.base.Engine Thread-114 : (1,)
2020-01-30 00:19:23,329 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:23,329 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:23,329 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:23,331 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:23,331 INFO sqlalchemy.engine.base.Engine Thread-114 : (105,)
2020-01-30 00:19:23,331 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:23,331 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:23,332 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:23,333 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:23,333 INFO sqlalchemy.engine.base.Engine Thread-114 : (105,)
2020-01-30 00:19:23,333 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:23,334 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:23,334 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:23,338 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:23,338 INFO sqlalchemy.engine.base.Engine Thread-114 : ('philip', 1, 1)
2020-01-30 00:19:23,339 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:23,339 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:23,341 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-01-30 00:19:26,814 INFO sqlalchemy.engine.base.Engine Thread-121 : BEGIN (implicit)
2020-01-30 00:19:26,815 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:26,815 INFO sqlalchemy.engine.base.Engine Thread-121 : (1, 1)
2020-01-30 00:19:26,816 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:26,816 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:26,818 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:26,818 INFO sqlalchemy.engine.base.Engine Thread-121 : ('philip', 1, 1)
2020-01-30 00:19:26,819 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:26,819 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:26,821 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:26,821 INFO sqlalchemy.engine.base.Engine Thread-121 : ('13', 1)
2020-01-30 00:19:26,821 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:26,822 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (13, 'Boxing Day Holiday', 83, 'Boxing Day Holiday', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'GBR,IND', 107, 107)
2020-01-30 00:19:26,825 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:26,825 INFO sqlalchemy.engine.base.Engine Thread-121 : (82,)
2020-01-30 00:19:26,825 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:26,825 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:26,825 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:26,826 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:26,827 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:26,827 INFO sqlalchemy.engine.base.Engine Thread-121 : (1,)
2020-01-30 00:19:26,827 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:26,828 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:26,828 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:26,829 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:26,829 INFO sqlalchemy.engine.base.Engine Thread-121 : (105,)
2020-01-30 00:19:26,830 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:26,830 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:26,831 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:26,832 INFO sqlalchemy.engine.base.Engine Thread-121 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:26,832 INFO sqlalchemy.engine.base.Engine Thread-121 : (105,)
2020-01-30 00:19:26,832 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:26,833 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:26,833 DEBUG sqlalchemy.engine.base.Engine Thread-121 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:26,834 INFO sqlalchemy.engine.base.Engine Thread-121 : UPDATE datesofinterest SET id=%s, doi_start_dt=%s, doi_end_dt=%s, doi_hap=%s WHERE datesofinterest.id = %s
2020-01-30 00:19:26,834 INFO sqlalchemy.engine.base.Engine Thread-121 : ('13', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 106, 13)
2020-01-30 00:19:26,835 INFO sqlalchemy.engine.base.Engine Thread-121 : COMMIT
2020-01-30 00:19:26,890 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-01-30 00:19:26,891 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:26,891 INFO sqlalchemy.engine.base.Engine Thread-122 : (1, 1)
2020-01-30 00:19:26,892 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:26,892 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:26,894 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:26,894 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-01-30 00:19:26,895 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:26,895 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:26,905 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:19:26,906 INFO sqlalchemy.engine.base.Engine Thread-122 : ()
2020-01-30 00:19:26,906 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:19:26,906 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:19:26,907 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:26,907 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:26,907 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:26,907 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:26,907 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:26,907 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:26,911 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:26,911 INFO sqlalchemy.engine.base.Engine Thread-122 : ('philip', 1, 1)
2020-01-30 00:19:26,912 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:26,912 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:26,915 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-01-30 00:19:33,238 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-01-30 00:19:33,239 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:33,239 INFO sqlalchemy.engine.base.Engine Thread-129 : (1, 1)
2020-01-30 00:19:33,240 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:33,240 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:33,243 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:33,243 INFO sqlalchemy.engine.base.Engine Thread-129 : ('philip', 1, 1)
2020-01-30 00:19:33,243 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:33,243 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:33,245 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:33,245 INFO sqlalchemy.engine.base.Engine Thread-129 : ('0', 1)
2020-01-30 00:19:33,245 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:33,248 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:33,248 INFO sqlalchemy.engine.base.Engine Thread-129 : (82,)
2020-01-30 00:19:33,248 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:33,249 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:33,249 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:33,249 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:33,250 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:33,250 INFO sqlalchemy.engine.base.Engine Thread-129 : (1,)
2020-01-30 00:19:33,251 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:33,251 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:33,251 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:33,252 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:33,252 INFO sqlalchemy.engine.base.Engine Thread-129 : (105,)
2020-01-30 00:19:33,253 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:33,253 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:33,253 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:33,254 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:33,254 INFO sqlalchemy.engine.base.Engine Thread-129 : (105,)
2020-01-30 00:19:33,255 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:33,255 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:33,255 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:33,258 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:33,259 INFO sqlalchemy.engine.base.Engine Thread-129 : ('philip', 1, 1)
2020-01-30 00:19:33,259 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:33,259 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:33,262 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-01-30 00:19:35,850 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-01-30 00:19:35,851 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:35,851 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-01-30 00:19:35,852 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:35,852 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:35,854 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:35,854 INFO sqlalchemy.engine.base.Engine Thread-136 : ('philip', 1, 1)
2020-01-30 00:19:35,855 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:35,855 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:35,856 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:19:35,856 INFO sqlalchemy.engine.base.Engine Thread-136 : ('0', 1)
2020-01-30 00:19:35,857 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:19:35,859 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:35,859 INFO sqlalchemy.engine.base.Engine Thread-136 : (82,)
2020-01-30 00:19:35,860 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:35,860 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:19:35,860 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:19:35,860 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:19:35,861 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:19:35,862 INFO sqlalchemy.engine.base.Engine Thread-136 : (1,)
2020-01-30 00:19:35,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:35,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:19:35,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:19:35,863 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:35,863 INFO sqlalchemy.engine.base.Engine Thread-136 : (105,)
2020-01-30 00:19:35,864 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:35,865 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:35,865 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:35,866 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:19:35,866 INFO sqlalchemy.engine.base.Engine Thread-136 : (105,)
2020-01-30 00:19:35,867 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:19:35,867 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:19:35,867 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:19:35,871 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:35,871 INFO sqlalchemy.engine.base.Engine Thread-136 : ('philip', 1, 1)
2020-01-30 00:19:35,872 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:35,872 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:35,875 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-01-30 00:19:50,234 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-01-30 00:19:50,235 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:19:50,235 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-01-30 00:19:50,236 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:50,236 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:50,238 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:50,238 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-01-30 00:19:50,239 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:50,239 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:50,247 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:19:50,247 INFO sqlalchemy.engine.base.Engine Thread-143 : ()
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:50,248 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:19:50,252 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:19:50,252 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-01-30 00:19:50,253 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:19:50,253 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:19:50,255 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-01-30 00:20:06,933 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-01-30 00:20:06,934 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:20:06,934 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-01-30 00:20:06,935 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:06,935 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:06,937 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:20:06,937 INFO sqlalchemy.engine.base.Engine Thread-150 : ('philip', 1, 1)
2020-01-30 00:20:06,938 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:06,939 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:06,940 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:20:06,940 INFO sqlalchemy.engine.base.Engine Thread-150 : ('1', 1)
2020-01-30 00:20:06,941 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:20:06,941 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 00:20:06,943 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:20:06,943 INFO sqlalchemy.engine.base.Engine Thread-150 : (82,)
2020-01-30 00:20:06,944 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:20:06,944 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:20:06,944 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:20:06,944 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:20:06,946 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:20:06,946 INFO sqlalchemy.engine.base.Engine Thread-150 : (1,)
2020-01-30 00:20:06,947 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:20:06,947 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:20:06,947 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:20:06,948 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:20:06,949 INFO sqlalchemy.engine.base.Engine Thread-150 : (105,)
2020-01-30 00:20:06,949 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:20:06,949 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:20:06,949 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:20:06,951 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:20:06,951 INFO sqlalchemy.engine.base.Engine Thread-150 : (105,)
2020-01-30 00:20:06,951 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:20:06,952 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:20:06,952 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:20:06,956 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:20:06,956 INFO sqlalchemy.engine.base.Engine Thread-150 : ('philip', 1, 1)
2020-01-30 00:20:06,956 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:06,956 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:06,959 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-01-30 00:20:13,070 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-01-30 00:20:13,071 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:20:13,071 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-01-30 00:20:13,071 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:13,072 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:13,074 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:20:13,074 INFO sqlalchemy.engine.base.Engine Thread-157 : ('philip', 1, 1)
2020-01-30 00:20:13,075 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:13,075 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:13,083 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:20:13,083 INFO sqlalchemy.engine.base.Engine Thread-157 : ()
2020-01-30 00:20:13,083 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:20:13,083 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:20:13,084 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:20:13,084 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:20:13,084 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:20:13,084 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:20:13,084 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:20:13,084 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:20:13,089 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:20:13,089 INFO sqlalchemy.engine.base.Engine Thread-157 : ('philip', 1, 1)
2020-01-30 00:20:13,089 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:13,090 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:13,092 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-01-30 00:20:14,817 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-01-30 00:20:14,823 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:20:14,823 INFO sqlalchemy.engine.base.Engine Thread-164 : ()
2020-01-30 00:20:14,825 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:20:14,825 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:20:14,825 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:20:14,827 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:20:14,827 INFO sqlalchemy.engine.base.Engine Thread-164 : (1, 1)
2020-01-30 00:20:14,828 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:14,828 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:14,839 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:20:14,840 INFO sqlalchemy.engine.base.Engine Thread-164 : ('philip', 1, 1)
2020-01-30 00:20:14,840 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:20:14,840 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:20:14,842 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-01-30 00:20:15,252 INFO sqlalchemy.engine.base.Engine Thread-171 : BEGIN (implicit)
2020-01-30 00:20:15,253 INFO sqlalchemy.engine.base.Engine Thread-171 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:20:15,253 INFO sqlalchemy.engine.base.Engine Thread-171 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:20:15,253 DEBUG sqlalchemy.engine.base.Engine Thread-171 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:20:15,254 INFO sqlalchemy.engine.base.Engine Thread-171 : ROLLBACK
2020-01-30 00:20:15,268 INFO sqlalchemy.engine.base.Engine Thread-172 : BEGIN (implicit)
2020-01-30 00:20:15,269 INFO sqlalchemy.engine.base.Engine Thread-172 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:20:15,269 INFO sqlalchemy.engine.base.Engine Thread-172 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:20:15,270 DEBUG sqlalchemy.engine.base.Engine Thread-172 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:20:15,270 INFO sqlalchemy.engine.base.Engine Thread-172 : ROLLBACK
2020-01-30 00:20:20,327 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-01-30 00:20:20,328 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:20:20,328 INFO sqlalchemy.engine.base.Engine Thread-173 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:20:20,329 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:20:20,329 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED ', 'Change Freeze RED')
2020-01-30 00:20:20,329 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-01-30 00:20:20,342 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-01-30 00:20:20,343 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:20:20,343 INFO sqlalchemy.engine.base.Engine Thread-174 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:20:20,344 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:20:20,344 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED ', 'Change Freeze RED')
2020-01-30 00:20:20,345 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-01-30 00:21:54,415 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-01-30 00:21:54,416 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:21:54,416 INFO sqlalchemy.engine.base.Engine Thread-175 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:21:54,417 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:21:54,418 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-01-30 00:21:54,433 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-01-30 00:21:54,434 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:21:54,434 INFO sqlalchemy.engine.base.Engine Thread-176 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:21:54,435 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:21:54,435 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-01-30 00:21:59,201 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-01-30 00:21:59,204 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 00:21:59,205 INFO sqlalchemy.engine.base.Engine Thread-177 : ('0', 1)
2020-01-30 00:21:59,205 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 00:21:59,211 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:21:59,211 INFO sqlalchemy.engine.base.Engine Thread-177 : ()
2020-01-30 00:21:59,213 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:21:59,215 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:21:59,215 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:21:59,216 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:21:59,216 INFO sqlalchemy.engine.base.Engine Thread-177 : (97,)
2020-01-30 00:21:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:21:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 00:21:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 00:21:59,218 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:21:59,218 INFO sqlalchemy.engine.base.Engine Thread-177 : (105,)
2020-01-30 00:21:59,219 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:21:59,219 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:21:59,219 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:21:59,222 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 00:21:59,222 INFO sqlalchemy.engine.base.Engine Thread-177 : (2, 1)
2020-01-30 00:21:59,223 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:21:59,223 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:21:59,225 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:21:59,226 INFO sqlalchemy.engine.base.Engine Thread-177 : (1, 1)
2020-01-30 00:21:59,226 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:21:59,226 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:21:59,271 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:21:59,272 INFO sqlalchemy.engine.base.Engine Thread-177 : ('philip', 1, 1)
2020-01-30 00:21:59,272 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:21:59,273 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:21:59,276 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-01-30 00:22:04,136 INFO sqlalchemy.engine.base.Engine Thread-184 : BEGIN (implicit)
2020-01-30 00:22:04,138 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:22:04,138 INFO sqlalchemy.engine.base.Engine Thread-184 : ()
2020-01-30 00:22:04,139 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:22:04,140 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:22:04,140 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:22:04,142 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:22:04,142 INFO sqlalchemy.engine.base.Engine Thread-184 : (1, 1)
2020-01-30 00:22:04,143 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:04,143 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:04,147 INFO sqlalchemy.engine.base.Engine Thread-184 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:22:04,147 INFO sqlalchemy.engine.base.Engine Thread-184 : ('philip', 1, 1)
2020-01-30 00:22:04,147 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:04,148 DEBUG sqlalchemy.engine.base.Engine Thread-184 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:04,149 INFO sqlalchemy.engine.base.Engine Thread-184 : ROLLBACK
2020-01-30 00:22:04,644 INFO sqlalchemy.engine.base.Engine Thread-191 : BEGIN (implicit)
2020-01-30 00:22:04,645 INFO sqlalchemy.engine.base.Engine Thread-191 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:22:04,645 INFO sqlalchemy.engine.base.Engine Thread-191 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:22:04,646 DEBUG sqlalchemy.engine.base.Engine Thread-191 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:22:04,647 INFO sqlalchemy.engine.base.Engine Thread-191 : ROLLBACK
2020-01-30 00:22:04,664 INFO sqlalchemy.engine.base.Engine Thread-192 : BEGIN (implicit)
2020-01-30 00:22:04,664 INFO sqlalchemy.engine.base.Engine Thread-192 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:22:04,665 INFO sqlalchemy.engine.base.Engine Thread-192 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:22:04,665 DEBUG sqlalchemy.engine.base.Engine Thread-192 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:22:04,666 INFO sqlalchemy.engine.base.Engine Thread-192 : ROLLBACK
2020-01-30 00:22:08,126 INFO sqlalchemy.engine.base.Engine Thread-193 : BEGIN (implicit)
2020-01-30 00:22:08,127 INFO sqlalchemy.engine.base.Engine Thread-193 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:22:08,127 INFO sqlalchemy.engine.base.Engine Thread-193 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:22:08,128 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:22:08,128 DEBUG sqlalchemy.engine.base.Engine Thread-193 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED ', 'Change Freeze RED')
2020-01-30 00:22:08,129 INFO sqlalchemy.engine.base.Engine Thread-193 : ROLLBACK
2020-01-30 00:22:08,144 INFO sqlalchemy.engine.base.Engine Thread-194 : BEGIN (implicit)
2020-01-30 00:22:08,145 INFO sqlalchemy.engine.base.Engine Thread-194 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:22:08,145 INFO sqlalchemy.engine.base.Engine Thread-194 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:22:08,146 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:22:08,146 DEBUG sqlalchemy.engine.base.Engine Thread-194 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED ', 'Change Freeze RED')
2020-01-30 00:22:08,147 INFO sqlalchemy.engine.base.Engine Thread-194 : ROLLBACK
2020-01-30 00:22:46,321 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-01-30 00:22:46,322 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:22:46,322 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-01-30 00:22:46,323 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:46,323 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:46,326 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:22:46,326 INFO sqlalchemy.engine.base.Engine Thread-195 : ('philip', 1, 1)
2020-01-30 00:22:46,326 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:46,327 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:46,335 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:22:46,335 INFO sqlalchemy.engine.base.Engine Thread-195 : ()
2020-01-30 00:22:46,336 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:22:46,336 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:22:46,336 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:22:46,336 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:22:46,336 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:22:46,336 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:22:46,337 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:22:46,337 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:22:46,341 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:22:46,341 INFO sqlalchemy.engine.base.Engine Thread-195 : ('philip', 1, 1)
2020-01-30 00:22:46,341 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:46,342 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:46,343 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-01-30 00:22:52,011 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-01-30 00:22:52,013 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:22:52,013 INFO sqlalchemy.engine.base.Engine Thread-202 : ()
2020-01-30 00:22:52,014 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:22:52,015 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:22:52,015 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:22:52,017 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:22:52,017 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-01-30 00:22:52,017 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:52,017 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:52,021 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:22:52,021 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-01-30 00:22:52,022 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:22:52,022 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:22:52,024 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-01-30 00:22:52,567 INFO sqlalchemy.engine.base.Engine Thread-209 : BEGIN (implicit)
2020-01-30 00:22:52,568 INFO sqlalchemy.engine.base.Engine Thread-209 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:22:52,568 INFO sqlalchemy.engine.base.Engine Thread-209 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:22:52,569 DEBUG sqlalchemy.engine.base.Engine Thread-209 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:22:52,570 INFO sqlalchemy.engine.base.Engine Thread-209 : ROLLBACK
2020-01-30 00:22:52,588 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-01-30 00:22:52,588 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:22:52,589 INFO sqlalchemy.engine.base.Engine Thread-210 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:22:52,589 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:22:52,590 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-01-30 00:23:04,208 INFO sqlalchemy.engine.base.Engine Thread-211 : BEGIN (implicit)
2020-01-30 00:23:04,210 INFO sqlalchemy.engine.base.Engine Thread-211 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:04,210 INFO sqlalchemy.engine.base.Engine Thread-211 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:23:04,211 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:04,211 DEBUG sqlalchemy.engine.base.Engine Thread-211 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED ', 'Change Freeze RED')
2020-01-30 00:23:04,212 INFO sqlalchemy.engine.base.Engine Thread-211 : ROLLBACK
2020-01-30 00:23:04,224 INFO sqlalchemy.engine.base.Engine Thread-212 : BEGIN (implicit)
2020-01-30 00:23:04,225 INFO sqlalchemy.engine.base.Engine Thread-212 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:04,225 INFO sqlalchemy.engine.base.Engine Thread-212 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:23:04,226 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:04,226 DEBUG sqlalchemy.engine.base.Engine Thread-212 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze RED ', 'Change Freeze RED')
2020-01-30 00:23:04,227 INFO sqlalchemy.engine.base.Engine Thread-212 : ROLLBACK
2020-01-30 00:23:15,603 INFO sqlalchemy.engine.base.Engine Thread-213 : BEGIN (implicit)
2020-01-30 00:23:15,604 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:23:15,604 INFO sqlalchemy.engine.base.Engine Thread-213 : (1, 1)
2020-01-30 00:23:15,604 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:15,605 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:15,607 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:15,607 INFO sqlalchemy.engine.base.Engine Thread-213 : ('philip', 1, 1)
2020-01-30 00:23:15,608 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:15,608 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:15,616 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:23:15,616 INFO sqlalchemy.engine.base.Engine Thread-213 : ()
2020-01-30 00:23:15,616 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (1, 'Change Freeze RED ', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:15,617 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:15,621 INFO sqlalchemy.engine.base.Engine Thread-213 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:15,621 INFO sqlalchemy.engine.base.Engine Thread-213 : ('philip', 1, 1)
2020-01-30 00:23:15,622 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:15,622 DEBUG sqlalchemy.engine.base.Engine Thread-213 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:15,624 INFO sqlalchemy.engine.base.Engine Thread-213 : ROLLBACK
2020-01-30 00:23:17,948 INFO sqlalchemy.engine.base.Engine Thread-220 : BEGIN (implicit)
2020-01-30 00:23:17,949 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:23:17,949 INFO sqlalchemy.engine.base.Engine Thread-220 : (1, 1)
2020-01-30 00:23:17,950 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:17,950 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:17,952 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:17,952 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-01-30 00:23:17,953 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:17,953 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:17,955 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:23:17,955 INFO sqlalchemy.engine.base.Engine Thread-220 : ('1', 1)
2020-01-30 00:23:17,955 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:23:17,955 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 00:23:17,957 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:23:17,957 INFO sqlalchemy.engine.base.Engine Thread-220 : (82,)
2020-01-30 00:23:17,958 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:17,958 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:23:17,958 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:23:17,958 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:23:17,959 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:23:17,960 INFO sqlalchemy.engine.base.Engine Thread-220 : (1,)
2020-01-30 00:23:17,960 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:17,960 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:23:17,960 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:23:17,961 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:23:17,962 INFO sqlalchemy.engine.base.Engine Thread-220 : (105,)
2020-01-30 00:23:17,962 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:17,963 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:23:17,963 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:23:17,964 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:23:17,964 INFO sqlalchemy.engine.base.Engine Thread-220 : (105,)
2020-01-30 00:23:17,964 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:17,965 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:23:17,965 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:23:17,969 INFO sqlalchemy.engine.base.Engine Thread-220 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:17,969 INFO sqlalchemy.engine.base.Engine Thread-220 : ('philip', 1, 1)
2020-01-30 00:23:17,969 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:17,969 DEBUG sqlalchemy.engine.base.Engine Thread-220 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:17,972 INFO sqlalchemy.engine.base.Engine Thread-220 : ROLLBACK
2020-01-30 00:23:44,854 INFO sqlalchemy.engine.base.Engine Thread-227 : BEGIN (implicit)
2020-01-30 00:23:44,855 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:23:44,855 INFO sqlalchemy.engine.base.Engine Thread-227 : (1, 1)
2020-01-30 00:23:44,856 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:44,857 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:44,859 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:44,859 INFO sqlalchemy.engine.base.Engine Thread-227 : ('philip', 1, 1)
2020-01-30 00:23:44,860 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:44,860 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:44,862 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:23:44,862 INFO sqlalchemy.engine.base.Engine Thread-227 : ('1', 1)
2020-01-30 00:23:44,862 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:23:44,862 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'Change Freeze RED ', 83, 'Change Freeze RED', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 00:23:44,865 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:23:44,865 INFO sqlalchemy.engine.base.Engine Thread-227 : (82,)
2020-01-30 00:23:44,866 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:44,866 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:23:44,866 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:23:44,867 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:23:44,868 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:23:44,868 INFO sqlalchemy.engine.base.Engine Thread-227 : (1,)
2020-01-30 00:23:44,869 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:44,869 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:23:44,869 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:23:44,870 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:23:44,870 INFO sqlalchemy.engine.base.Engine Thread-227 : (105,)
2020-01-30 00:23:44,871 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:44,871 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:23:44,872 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:23:44,873 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:23:44,873 INFO sqlalchemy.engine.base.Engine Thread-227 : (105,)
2020-01-30 00:23:44,873 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:23:44,874 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:23:44,874 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:23:44,876 INFO sqlalchemy.engine.base.Engine Thread-227 : UPDATE datesofinterest SET id=%s, doi_name=%s, doi_comment=%s, doi_start_dt=%s, doi_end_dt=%s WHERE datesofinterest.id = %s
2020-01-30 00:23:44,876 INFO sqlalchemy.engine.base.Engine Thread-227 : ('1', 'Change Freeze (Critical)', 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 1)
2020-01-30 00:23:44,877 INFO sqlalchemy.engine.base.Engine Thread-227 : COMMIT
2020-01-30 00:23:45,047 INFO sqlalchemy.engine.base.Engine Thread-228 : BEGIN (implicit)
2020-01-30 00:23:45,048 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:23:45,048 INFO sqlalchemy.engine.base.Engine Thread-228 : (1, 1)
2020-01-30 00:23:45,048 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:45,049 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:45,051 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:45,051 INFO sqlalchemy.engine.base.Engine Thread-228 : ('philip', 1, 1)
2020-01-30 00:23:45,052 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:45,052 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:45,062 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:23:45,062 INFO sqlalchemy.engine.base.Engine Thread-228 : ()
2020-01-30 00:23:45,063 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:23:45,063 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:23:45,063 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:45,063 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:45,064 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:45,064 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:45,064 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:45,064 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:23:45,068 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:45,069 INFO sqlalchemy.engine.base.Engine Thread-228 : ('philip', 1, 1)
2020-01-30 00:23:45,069 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:45,070 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:45,073 INFO sqlalchemy.engine.base.Engine Thread-228 : ROLLBACK
2020-01-30 00:23:50,866 INFO sqlalchemy.engine.base.Engine Thread-235 : BEGIN (implicit)
2020-01-30 00:23:50,868 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:23:50,868 INFO sqlalchemy.engine.base.Engine Thread-235 : ()
2020-01-30 00:23:50,869 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:23:50,870 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:23:50,870 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:23:50,872 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:23:50,872 INFO sqlalchemy.engine.base.Engine Thread-235 : (1, 1)
2020-01-30 00:23:50,873 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:50,873 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:50,877 INFO sqlalchemy.engine.base.Engine Thread-235 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:23:50,877 INFO sqlalchemy.engine.base.Engine Thread-235 : ('philip', 1, 1)
2020-01-30 00:23:50,878 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:23:50,878 DEBUG sqlalchemy.engine.base.Engine Thread-235 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:23:50,880 INFO sqlalchemy.engine.base.Engine Thread-235 : ROLLBACK
2020-01-30 00:23:51,525 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-01-30 00:23:51,526 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:51,526 INFO sqlalchemy.engine.base.Engine Thread-242 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:23:51,527 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:51,527 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-01-30 00:23:51,544 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-01-30 00:23:51,545 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:51,545 INFO sqlalchemy.engine.base.Engine Thread-243 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:23:51,546 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:51,546 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-01-30 00:23:54,148 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-01-30 00:23:54,149 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:54,149 INFO sqlalchemy.engine.base.Engine Thread-244 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:23:54,150 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:54,151 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-01-30 00:23:54,175 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-01-30 00:23:54,176 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:54,176 INFO sqlalchemy.engine.base.Engine Thread-245 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:23:54,177 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:54,178 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-01-30 00:23:54,496 INFO sqlalchemy.engine.base.Engine Thread-246 : BEGIN (implicit)
2020-01-30 00:23:54,497 INFO sqlalchemy.engine.base.Engine Thread-246 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:54,497 INFO sqlalchemy.engine.base.Engine Thread-246 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:23:54,498 DEBUG sqlalchemy.engine.base.Engine Thread-246 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:54,498 INFO sqlalchemy.engine.base.Engine Thread-246 : ROLLBACK
2020-01-30 00:23:54,515 INFO sqlalchemy.engine.base.Engine Thread-247 : BEGIN (implicit)
2020-01-30 00:23:54,516 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:54,516 INFO sqlalchemy.engine.base.Engine Thread-247 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:23:54,517 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:54,517 INFO sqlalchemy.engine.base.Engine Thread-247 : ROLLBACK
2020-01-30 00:23:58,049 INFO sqlalchemy.engine.base.Engine Thread-248 : BEGIN (implicit)
2020-01-30 00:23:58,050 INFO sqlalchemy.engine.base.Engine Thread-248 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:58,050 INFO sqlalchemy.engine.base.Engine Thread-248 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:23:58,051 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:58,051 DEBUG sqlalchemy.engine.base.Engine Thread-248 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:23:58,052 INFO sqlalchemy.engine.base.Engine Thread-248 : ROLLBACK
2020-01-30 00:23:58,063 INFO sqlalchemy.engine.base.Engine Thread-249 : BEGIN (implicit)
2020-01-30 00:23:58,064 INFO sqlalchemy.engine.base.Engine Thread-249 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:58,064 INFO sqlalchemy.engine.base.Engine Thread-249 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:23:58,066 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:58,066 DEBUG sqlalchemy.engine.base.Engine Thread-249 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:23:58,067 INFO sqlalchemy.engine.base.Engine Thread-249 : ROLLBACK
2020-01-30 00:23:58,072 INFO sqlalchemy.engine.base.Engine Thread-250 : BEGIN (implicit)
2020-01-30 00:23:58,073 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:58,073 INFO sqlalchemy.engine.base.Engine Thread-250 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:23:58,073 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:58,074 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:23:58,074 INFO sqlalchemy.engine.base.Engine Thread-250 : ROLLBACK
2020-01-30 00:23:58,093 INFO sqlalchemy.engine.base.Engine Thread-252 : BEGIN (implicit)
2020-01-30 00:23:58,096 INFO sqlalchemy.engine.base.Engine Thread-251 : BEGIN (implicit)
2020-01-30 00:23:58,101 INFO sqlalchemy.engine.base.Engine Thread-252 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:58,102 INFO sqlalchemy.engine.base.Engine Thread-251 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:58,102 INFO sqlalchemy.engine.base.Engine Thread-252 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:23:58,102 INFO sqlalchemy.engine.base.Engine Thread-251 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:23:58,103 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-01-30 00:23:58,103 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:58,104 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:23:58,104 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:23:58,105 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:58,106 DEBUG sqlalchemy.engine.base.Engine Thread-251 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:23:58,106 INFO sqlalchemy.engine.base.Engine Thread-252 : ROLLBACK
2020-01-30 00:23:58,105 INFO sqlalchemy.engine.base.Engine Thread-253 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:23:58,107 INFO sqlalchemy.engine.base.Engine Thread-251 : ROLLBACK
2020-01-30 00:23:58,109 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:23:58,109 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:23:58,110 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-01-30 00:24:00,650 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-01-30 00:24:00,651 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:00,651 INFO sqlalchemy.engine.base.Engine Thread-254 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:00,652 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:00,653 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-01-30 00:24:00,668 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-01-30 00:24:00,669 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:00,669 INFO sqlalchemy.engine.base.Engine Thread-255 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:00,670 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:00,670 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-01-30 00:24:03,185 INFO sqlalchemy.engine.base.Engine Thread-256 : BEGIN (implicit)
2020-01-30 00:24:03,187 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:24:03,187 INFO sqlalchemy.engine.base.Engine Thread-256 : ()
2020-01-30 00:24:03,188 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:24:03,189 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:24:03,189 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:24:03,191 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:24:03,191 INFO sqlalchemy.engine.base.Engine Thread-256 : (1, 1)
2020-01-30 00:24:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:24:03,192 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:24:03,196 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:24:03,196 INFO sqlalchemy.engine.base.Engine Thread-256 : ('philip', 1, 1)
2020-01-30 00:24:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:24:03,196 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:24:03,198 INFO sqlalchemy.engine.base.Engine Thread-256 : ROLLBACK
2020-01-30 00:24:03,725 INFO sqlalchemy.engine.base.Engine Thread-263 : BEGIN (implicit)
2020-01-30 00:24:03,726 INFO sqlalchemy.engine.base.Engine Thread-263 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:03,726 INFO sqlalchemy.engine.base.Engine Thread-263 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:03,727 DEBUG sqlalchemy.engine.base.Engine Thread-263 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:03,727 INFO sqlalchemy.engine.base.Engine Thread-263 : ROLLBACK
2020-01-30 00:24:03,744 INFO sqlalchemy.engine.base.Engine Thread-264 : BEGIN (implicit)
2020-01-30 00:24:03,745 INFO sqlalchemy.engine.base.Engine Thread-264 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:03,745 INFO sqlalchemy.engine.base.Engine Thread-264 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:03,745 DEBUG sqlalchemy.engine.base.Engine Thread-264 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:03,746 INFO sqlalchemy.engine.base.Engine Thread-264 : ROLLBACK
2020-01-30 00:24:05,368 INFO sqlalchemy.engine.base.Engine Thread-266 : BEGIN (implicit)
2020-01-30 00:24:05,369 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:05,369 INFO sqlalchemy.engine.base.Engine Thread-266 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:05,370 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:05,370 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:05,371 INFO sqlalchemy.engine.base.Engine Thread-266 : ROLLBACK
2020-01-30 00:24:05,386 INFO sqlalchemy.engine.base.Engine Thread-267 : BEGIN (implicit)
2020-01-30 00:24:05,386 INFO sqlalchemy.engine.base.Engine Thread-267 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:05,387 INFO sqlalchemy.engine.base.Engine Thread-267 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:05,387 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:05,387 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:05,388 INFO sqlalchemy.engine.base.Engine Thread-267 : ROLLBACK
2020-01-30 00:24:07,332 INFO sqlalchemy.engine.base.Engine Thread-268 : BEGIN (implicit)
2020-01-30 00:24:07,332 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:07,333 INFO sqlalchemy.engine.base.Engine Thread-268 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:07,333 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:07,334 INFO sqlalchemy.engine.base.Engine Thread-268 : ROLLBACK
2020-01-30 00:24:07,347 INFO sqlalchemy.engine.base.Engine Thread-269 : BEGIN (implicit)
2020-01-30 00:24:07,348 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:07,348 INFO sqlalchemy.engine.base.Engine Thread-269 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:07,349 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:07,350 INFO sqlalchemy.engine.base.Engine Thread-269 : ROLLBACK
2020-01-30 00:24:08,081 INFO sqlalchemy.engine.base.Engine Thread-270 : BEGIN (implicit)
2020-01-30 00:24:08,082 INFO sqlalchemy.engine.base.Engine Thread-270 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:08,082 INFO sqlalchemy.engine.base.Engine Thread-270 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:08,083 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:08,084 INFO sqlalchemy.engine.base.Engine Thread-270 : ROLLBACK
2020-01-30 00:24:08,095 INFO sqlalchemy.engine.base.Engine Thread-271 : BEGIN (implicit)
2020-01-30 00:24:08,096 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:08,096 INFO sqlalchemy.engine.base.Engine Thread-271 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:08,097 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:08,098 INFO sqlalchemy.engine.base.Engine Thread-271 : ROLLBACK
2020-01-30 00:24:08,990 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-01-30 00:24:08,991 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:08,991 INFO sqlalchemy.engine.base.Engine Thread-272 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:08,992 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:08,993 INFO sqlalchemy.engine.base.Engine Thread-272 : ROLLBACK
2020-01-30 00:24:09,005 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-01-30 00:24:09,006 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:09,006 INFO sqlalchemy.engine.base.Engine Thread-273 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:09,007 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:09,007 INFO sqlalchemy.engine.base.Engine Thread-273 : ROLLBACK
2020-01-30 00:24:09,533 INFO sqlalchemy.engine.base.Engine Thread-274 : BEGIN (implicit)
2020-01-30 00:24:09,534 INFO sqlalchemy.engine.base.Engine Thread-274 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:09,534 INFO sqlalchemy.engine.base.Engine Thread-274 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:09,535 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:09,535 DEBUG sqlalchemy.engine.base.Engine Thread-274 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:09,535 INFO sqlalchemy.engine.base.Engine Thread-274 : ROLLBACK
2020-01-30 00:24:09,548 INFO sqlalchemy.engine.base.Engine Thread-275 : BEGIN (implicit)
2020-01-30 00:24:09,549 INFO sqlalchemy.engine.base.Engine Thread-275 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:09,549 INFO sqlalchemy.engine.base.Engine Thread-275 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:09,550 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:09,550 DEBUG sqlalchemy.engine.base.Engine Thread-275 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:09,550 INFO sqlalchemy.engine.base.Engine Thread-275 : ROLLBACK
2020-01-30 00:24:14,802 INFO sqlalchemy.engine.base.Engine Thread-276 : BEGIN (implicit)
2020-01-30 00:24:14,803 INFO sqlalchemy.engine.base.Engine Thread-276 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:14,803 INFO sqlalchemy.engine.base.Engine Thread-276 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:14,804 DEBUG sqlalchemy.engine.base.Engine Thread-276 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:14,804 INFO sqlalchemy.engine.base.Engine Thread-276 : ROLLBACK
2020-01-30 00:24:14,817 INFO sqlalchemy.engine.base.Engine Thread-277 : BEGIN (implicit)
2020-01-30 00:24:14,818 INFO sqlalchemy.engine.base.Engine Thread-277 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:14,818 INFO sqlalchemy.engine.base.Engine Thread-277 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:14,818 DEBUG sqlalchemy.engine.base.Engine Thread-277 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:14,819 INFO sqlalchemy.engine.base.Engine Thread-277 : ROLLBACK
2020-01-30 00:24:15,439 INFO sqlalchemy.engine.base.Engine Thread-278 : BEGIN (implicit)
2020-01-30 00:24:15,440 INFO sqlalchemy.engine.base.Engine Thread-278 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:15,440 INFO sqlalchemy.engine.base.Engine Thread-278 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:15,441 DEBUG sqlalchemy.engine.base.Engine Thread-278 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:15,441 INFO sqlalchemy.engine.base.Engine Thread-278 : ROLLBACK
2020-01-30 00:24:15,454 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-01-30 00:24:15,455 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:15,455 INFO sqlalchemy.engine.base.Engine Thread-279 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:15,456 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:15,456 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-01-30 00:24:15,642 INFO sqlalchemy.engine.base.Engine Thread-280 : BEGIN (implicit)
2020-01-30 00:24:15,643 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:15,643 INFO sqlalchemy.engine.base.Engine Thread-280 : (datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0))
2020-01-30 00:24:15,643 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:15,644 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-01-30 00:24:15,657 INFO sqlalchemy.engine.base.Engine Thread-281 : BEGIN (implicit)
2020-01-30 00:24:15,658 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:15,658 INFO sqlalchemy.engine.base.Engine Thread-281 : (datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0))
2020-01-30 00:24:15,659 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:15,659 INFO sqlalchemy.engine.base.Engine Thread-281 : ROLLBACK
2020-01-30 00:24:15,836 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-01-30 00:24:15,837 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:15,837 INFO sqlalchemy.engine.base.Engine Thread-282 : (datetime.datetime(2019, 9, 30, 0, 0), datetime.datetime(2019, 11, 11, 0, 0), datetime.datetime(2019, 9, 30, 0, 0), datetime.datetime(2019, 11, 11, 0, 0), datetime.datetime(2019, 9, 30, 0, 0), datetime.datetime(2019, 11, 11, 0, 0))
2020-01-30 00:24:15,838 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:15,838 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-01-30 00:24:15,850 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-01-30 00:24:15,851 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:15,851 INFO sqlalchemy.engine.base.Engine Thread-283 : (datetime.datetime(2019, 9, 30, 0, 0), datetime.datetime(2019, 11, 11, 0, 0), datetime.datetime(2019, 9, 30, 0, 0), datetime.datetime(2019, 11, 11, 0, 0), datetime.datetime(2019, 9, 30, 0, 0), datetime.datetime(2019, 11, 11, 0, 0))
2020-01-30 00:24:15,852 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:15,852 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-01-30 00:24:16,885 INFO sqlalchemy.engine.base.Engine Thread-284 : BEGIN (implicit)
2020-01-30 00:24:16,885 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:16,885 INFO sqlalchemy.engine.base.Engine Thread-284 : (datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0))
2020-01-30 00:24:16,886 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:16,887 INFO sqlalchemy.engine.base.Engine Thread-284 : ROLLBACK
2020-01-30 00:24:16,902 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-01-30 00:24:16,903 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:16,903 INFO sqlalchemy.engine.base.Engine Thread-285 : (datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0))
2020-01-30 00:24:16,904 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:16,904 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-01-30 00:24:17,066 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-01-30 00:24:17,067 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:17,067 INFO sqlalchemy.engine.base.Engine Thread-286 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:17,068 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:17,069 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-01-30 00:24:17,081 INFO sqlalchemy.engine.base.Engine Thread-287 : BEGIN (implicit)
2020-01-30 00:24:17,082 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:17,082 INFO sqlalchemy.engine.base.Engine Thread-287 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:24:17,083 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:17,083 INFO sqlalchemy.engine.base.Engine Thread-287 : ROLLBACK
2020-01-30 00:24:17,259 INFO sqlalchemy.engine.base.Engine Thread-288 : BEGIN (implicit)
2020-01-30 00:24:17,260 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:17,260 INFO sqlalchemy.engine.base.Engine Thread-288 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:17,261 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:17,262 INFO sqlalchemy.engine.base.Engine Thread-288 : ROLLBACK
2020-01-30 00:24:17,274 INFO sqlalchemy.engine.base.Engine Thread-289 : BEGIN (implicit)
2020-01-30 00:24:17,275 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:17,275 INFO sqlalchemy.engine.base.Engine Thread-289 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:24:17,276 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:17,276 INFO sqlalchemy.engine.base.Engine Thread-289 : ROLLBACK
2020-01-30 00:24:17,472 INFO sqlalchemy.engine.base.Engine Thread-290 : BEGIN (implicit)
2020-01-30 00:24:17,472 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:17,473 INFO sqlalchemy.engine.base.Engine Thread-290 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:17,473 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:17,474 INFO sqlalchemy.engine.base.Engine Thread-290 : ROLLBACK
2020-01-30 00:24:17,487 INFO sqlalchemy.engine.base.Engine Thread-291 : BEGIN (implicit)
2020-01-30 00:24:17,488 INFO sqlalchemy.engine.base.Engine Thread-291 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:17,488 INFO sqlalchemy.engine.base.Engine Thread-291 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:17,489 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:17,489 DEBUG sqlalchemy.engine.base.Engine Thread-291 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:17,490 INFO sqlalchemy.engine.base.Engine Thread-291 : ROLLBACK
2020-01-30 00:24:19,153 INFO sqlalchemy.engine.base.Engine Thread-292 : BEGIN (implicit)
2020-01-30 00:24:19,154 INFO sqlalchemy.engine.base.Engine Thread-292 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:19,154 INFO sqlalchemy.engine.base.Engine Thread-292 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:24:19,155 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:19,155 DEBUG sqlalchemy.engine.base.Engine Thread-292 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:19,156 INFO sqlalchemy.engine.base.Engine Thread-292 : ROLLBACK
2020-01-30 00:24:19,169 INFO sqlalchemy.engine.base.Engine Thread-293 : BEGIN (implicit)
2020-01-30 00:24:19,170 INFO sqlalchemy.engine.base.Engine Thread-293 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:19,170 INFO sqlalchemy.engine.base.Engine Thread-293 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:24:19,171 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:19,171 DEBUG sqlalchemy.engine.base.Engine Thread-293 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:19,171 INFO sqlalchemy.engine.base.Engine Thread-293 : ROLLBACK
2020-01-30 00:24:21,386 INFO sqlalchemy.engine.base.Engine Thread-294 : BEGIN (implicit)
2020-01-30 00:24:21,387 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:21,387 INFO sqlalchemy.engine.base.Engine Thread-294 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:21,388 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:21,388 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:21,389 INFO sqlalchemy.engine.base.Engine Thread-294 : ROLLBACK
2020-01-30 00:24:21,403 INFO sqlalchemy.engine.base.Engine Thread-295 : BEGIN (implicit)
2020-01-30 00:24:21,404 INFO sqlalchemy.engine.base.Engine Thread-295 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:24:21,404 INFO sqlalchemy.engine.base.Engine Thread-295 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:24:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:24:21,405 DEBUG sqlalchemy.engine.base.Engine Thread-295 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:24:21,406 INFO sqlalchemy.engine.base.Engine Thread-295 : ROLLBACK
2020-01-30 00:25:29,453 INFO sqlalchemy.engine.base.Engine Thread-296 : BEGIN (implicit)
2020-01-30 00:25:29,457 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:25:29,457 INFO sqlalchemy.engine.base.Engine Thread-296 : ()
2020-01-30 00:25:29,460 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:25:29,461 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:25:29,461 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:25:29,463 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:25:29,463 INFO sqlalchemy.engine.base.Engine Thread-296 : (1, 1)
2020-01-30 00:25:29,464 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:25:29,464 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:25:29,468 INFO sqlalchemy.engine.base.Engine Thread-296 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:25:29,468 INFO sqlalchemy.engine.base.Engine Thread-296 : ('philip', 1, 1)
2020-01-30 00:25:29,469 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:25:29,469 DEBUG sqlalchemy.engine.base.Engine Thread-296 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:25:29,470 INFO sqlalchemy.engine.base.Engine Thread-296 : ROLLBACK
2020-01-30 00:25:29,943 INFO sqlalchemy.engine.base.Engine Thread-303 : BEGIN (implicit)
2020-01-30 00:25:29,944 INFO sqlalchemy.engine.base.Engine Thread-303 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:29,944 INFO sqlalchemy.engine.base.Engine Thread-303 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:25:29,945 DEBUG sqlalchemy.engine.base.Engine Thread-303 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:29,946 INFO sqlalchemy.engine.base.Engine Thread-303 : ROLLBACK
2020-01-30 00:25:29,961 INFO sqlalchemy.engine.base.Engine Thread-304 : BEGIN (implicit)
2020-01-30 00:25:29,962 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:29,962 INFO sqlalchemy.engine.base.Engine Thread-304 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:25:29,963 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:29,964 INFO sqlalchemy.engine.base.Engine Thread-304 : ROLLBACK
2020-01-30 00:25:32,187 INFO sqlalchemy.engine.base.Engine Thread-305 : BEGIN (implicit)
2020-01-30 00:25:32,188 INFO sqlalchemy.engine.base.Engine Thread-305 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:32,188 INFO sqlalchemy.engine.base.Engine Thread-305 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:25:32,189 DEBUG sqlalchemy.engine.base.Engine Thread-305 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:32,189 INFO sqlalchemy.engine.base.Engine Thread-305 : ROLLBACK
2020-01-30 00:25:32,201 INFO sqlalchemy.engine.base.Engine Thread-306 : BEGIN (implicit)
2020-01-30 00:25:32,202 INFO sqlalchemy.engine.base.Engine Thread-306 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:32,202 INFO sqlalchemy.engine.base.Engine Thread-306 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:25:32,203 DEBUG sqlalchemy.engine.base.Engine Thread-306 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:32,204 INFO sqlalchemy.engine.base.Engine Thread-306 : ROLLBACK
2020-01-30 00:25:32,552 INFO sqlalchemy.engine.base.Engine Thread-307 : BEGIN (implicit)
2020-01-30 00:25:32,553 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:32,553 INFO sqlalchemy.engine.base.Engine Thread-307 : (datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0))
2020-01-30 00:25:32,554 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:32,555 INFO sqlalchemy.engine.base.Engine Thread-307 : ROLLBACK
2020-01-30 00:25:32,568 INFO sqlalchemy.engine.base.Engine Thread-308 : BEGIN (implicit)
2020-01-30 00:25:32,569 INFO sqlalchemy.engine.base.Engine Thread-308 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:32,569 INFO sqlalchemy.engine.base.Engine Thread-308 : (datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0), datetime.datetime(2019, 10, 28, 0, 0), datetime.datetime(2019, 12, 9, 0, 0))
2020-01-30 00:25:32,570 DEBUG sqlalchemy.engine.base.Engine Thread-308 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:32,570 INFO sqlalchemy.engine.base.Engine Thread-308 : ROLLBACK
2020-01-30 00:25:34,174 INFO sqlalchemy.engine.base.Engine Thread-309 : BEGIN (implicit)
2020-01-30 00:25:34,175 INFO sqlalchemy.engine.base.Engine Thread-309 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:34,175 INFO sqlalchemy.engine.base.Engine Thread-309 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:25:34,176 DEBUG sqlalchemy.engine.base.Engine Thread-309 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:34,176 INFO sqlalchemy.engine.base.Engine Thread-309 : ROLLBACK
2020-01-30 00:25:34,192 INFO sqlalchemy.engine.base.Engine Thread-310 : BEGIN (implicit)
2020-01-30 00:25:34,193 INFO sqlalchemy.engine.base.Engine Thread-310 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:34,193 INFO sqlalchemy.engine.base.Engine Thread-310 : (datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0), datetime.datetime(2019, 11, 25, 0, 0), datetime.datetime(2020, 1, 6, 0, 0))
2020-01-30 00:25:34,194 DEBUG sqlalchemy.engine.base.Engine Thread-310 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:34,194 INFO sqlalchemy.engine.base.Engine Thread-310 : ROLLBACK
2020-01-30 00:25:34,453 INFO sqlalchemy.engine.base.Engine Thread-311 : BEGIN (implicit)
2020-01-30 00:25:34,454 INFO sqlalchemy.engine.base.Engine Thread-311 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:34,454 INFO sqlalchemy.engine.base.Engine Thread-311 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:25:34,455 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:34,456 INFO sqlalchemy.engine.base.Engine Thread-311 : ROLLBACK
2020-01-30 00:25:34,469 INFO sqlalchemy.engine.base.Engine Thread-312 : BEGIN (implicit)
2020-01-30 00:25:34,470 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:34,470 INFO sqlalchemy.engine.base.Engine Thread-312 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:25:34,471 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:34,472 INFO sqlalchemy.engine.base.Engine Thread-312 : ROLLBACK
2020-01-30 00:25:34,784 INFO sqlalchemy.engine.base.Engine Thread-313 : BEGIN (implicit)
2020-01-30 00:25:34,785 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:34,785 INFO sqlalchemy.engine.base.Engine Thread-313 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:25:34,786 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:34,786 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:34,787 INFO sqlalchemy.engine.base.Engine Thread-313 : ROLLBACK
2020-01-30 00:25:34,799 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-01-30 00:25:34,800 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:34,800 INFO sqlalchemy.engine.base.Engine Thread-314 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:25:34,801 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:34,801 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:34,802 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-01-30 00:25:35,405 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-01-30 00:25:35,406 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:35,406 INFO sqlalchemy.engine.base.Engine Thread-315 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:25:35,407 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:35,407 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:35,408 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-01-30 00:25:35,422 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-01-30 00:25:35,423 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:35,423 INFO sqlalchemy.engine.base.Engine Thread-316 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:25:35,423 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:35,424 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:35,424 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-01-30 00:25:36,142 INFO sqlalchemy.engine.base.Engine Thread-317 : BEGIN (implicit)
2020-01-30 00:25:36,143 INFO sqlalchemy.engine.base.Engine Thread-317 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:36,143 INFO sqlalchemy.engine.base.Engine Thread-317 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 00:25:36,143 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:36,144 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-30 00:25:36,144 DEBUG sqlalchemy.engine.base.Engine Thread-317 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-30 00:25:36,144 INFO sqlalchemy.engine.base.Engine Thread-317 : ROLLBACK
2020-01-30 00:25:36,162 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-01-30 00:25:36,163 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:36,163 INFO sqlalchemy.engine.base.Engine Thread-318 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 00:25:36,164 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:36,164 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-30 00:25:36,164 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-30 00:25:36,165 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-01-30 00:25:36,421 INFO sqlalchemy.engine.base.Engine Thread-319 : BEGIN (implicit)
2020-01-30 00:25:36,422 INFO sqlalchemy.engine.base.Engine Thread-319 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:36,422 INFO sqlalchemy.engine.base.Engine Thread-319 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 00:25:36,423 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:36,423 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-30 00:25:36,423 DEBUG sqlalchemy.engine.base.Engine Thread-319 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-30 00:25:36,424 INFO sqlalchemy.engine.base.Engine Thread-319 : ROLLBACK
2020-01-30 00:25:36,439 INFO sqlalchemy.engine.base.Engine Thread-320 : BEGIN (implicit)
2020-01-30 00:25:36,440 INFO sqlalchemy.engine.base.Engine Thread-320 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:36,440 INFO sqlalchemy.engine.base.Engine Thread-320 : (datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 00:25:36,441 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:36,441 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-30 00:25:36,441 DEBUG sqlalchemy.engine.base.Engine Thread-320 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday')
2020-01-30 00:25:36,442 INFO sqlalchemy.engine.base.Engine Thread-320 : ROLLBACK
2020-01-30 00:25:37,852 INFO sqlalchemy.engine.base.Engine Thread-321 : BEGIN (implicit)
2020-01-30 00:25:37,853 INFO sqlalchemy.engine.base.Engine Thread-321 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:37,853 INFO sqlalchemy.engine.base.Engine Thread-321 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 00:25:37,854 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:37,854 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-30 00:25:37,854 DEBUG sqlalchemy.engine.base.Engine Thread-321 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-30 00:25:37,854 INFO sqlalchemy.engine.base.Engine Thread-321 : ROLLBACK
2020-01-30 00:25:37,868 INFO sqlalchemy.engine.base.Engine Thread-322 : BEGIN (implicit)
2020-01-30 00:25:37,868 INFO sqlalchemy.engine.base.Engine Thread-322 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:37,869 INFO sqlalchemy.engine.base.Engine Thread-322 : (datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 00:25:37,869 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:37,869 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday')
2020-01-30 00:25:37,869 DEBUG sqlalchemy.engine.base.Engine Thread-322 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday')
2020-01-30 00:25:37,870 INFO sqlalchemy.engine.base.Engine Thread-322 : ROLLBACK
2020-01-30 00:25:39,587 INFO sqlalchemy.engine.base.Engine Thread-323 : BEGIN (implicit)
2020-01-30 00:25:39,588 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:39,588 INFO sqlalchemy.engine.base.Engine Thread-323 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:25:39,588 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:39,589 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:39,589 INFO sqlalchemy.engine.base.Engine Thread-323 : ROLLBACK
2020-01-30 00:25:39,601 INFO sqlalchemy.engine.base.Engine Thread-324 : BEGIN (implicit)
2020-01-30 00:25:39,602 INFO sqlalchemy.engine.base.Engine Thread-324 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:39,602 INFO sqlalchemy.engine.base.Engine Thread-324 : (datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 00:25:39,603 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:39,603 DEBUG sqlalchemy.engine.base.Engine Thread-324 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:39,604 INFO sqlalchemy.engine.base.Engine Thread-324 : ROLLBACK
2020-01-30 00:25:41,509 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-01-30 00:25:41,510 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:41,510 INFO sqlalchemy.engine.base.Engine Thread-325 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:25:41,511 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:41,511 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:41,512 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-01-30 00:25:41,526 INFO sqlalchemy.engine.base.Engine Thread-326 : BEGIN (implicit)
2020-01-30 00:25:41,527 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:41,527 INFO sqlalchemy.engine.base.Engine Thread-326 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:25:41,527 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:41,527 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:41,528 INFO sqlalchemy.engine.base.Engine Thread-326 : ROLLBACK
2020-01-30 00:25:49,594 INFO sqlalchemy.engine.base.Engine Thread-327 : BEGIN (implicit)
2020-01-30 00:25:49,595 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:49,595 INFO sqlalchemy.engine.base.Engine Thread-327 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:25:49,596 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:49,596 INFO sqlalchemy.engine.base.Engine Thread-327 : ROLLBACK
2020-01-30 00:25:49,609 INFO sqlalchemy.engine.base.Engine Thread-328 : BEGIN (implicit)
2020-01-30 00:25:49,610 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:49,610 INFO sqlalchemy.engine.base.Engine Thread-328 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:25:49,611 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:49,612 INFO sqlalchemy.engine.base.Engine Thread-328 : ROLLBACK
2020-01-30 00:25:55,865 INFO sqlalchemy.engine.base.Engine Thread-329 : BEGIN (implicit)
2020-01-30 00:25:55,866 INFO sqlalchemy.engine.base.Engine Thread-329 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:55,866 INFO sqlalchemy.engine.base.Engine Thread-329 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:25:55,867 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:55,867 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:55,868 INFO sqlalchemy.engine.base.Engine Thread-329 : ROLLBACK
2020-01-30 00:25:55,884 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-01-30 00:25:55,885 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:25:55,885 INFO sqlalchemy.engine.base.Engine Thread-330 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 00:25:55,885 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:25:55,886 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 00:25:55,886 INFO sqlalchemy.engine.base.Engine Thread-330 : ROLLBACK
2020-01-30 00:32:11,018 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:32:11,018 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,020 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-01-30 00:32:11,021 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('sql_mode', '')
2020-01-30 00:32:11,021 INFO sqlalchemy.engine.base.Engine MainThread : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:32:11,021 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,022 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Variable_name', 'Value')
2020-01-30 00:32:11,022 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('lower_case_table_names', '0')
2020-01-30 00:32:11,023 INFO sqlalchemy.engine.base.Engine MainThread : SELECT DATABASE()
2020-01-30 00:32:11,023 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,023 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('DATABASE()',)
2020-01-30 00:32:11,023 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('fmapp',)
2020-01-30 00:32:11,023 INFO sqlalchemy.engine.base.Engine MainThread : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:32:11,023 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,024 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:32:11,024 DEBUG sqlalchemy.engine.base.Engine MainThread : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:32:11,025 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:32:11,025 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,026 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:32:11,026 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,026 INFO sqlalchemy.engine.base.Engine MainThread : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:32:11,026 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,027 INFO sqlalchemy.engine.base.Engine MainThread : BEGIN (implicit)
2020-01-30 00:32:11,028 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:32:11,028 INFO sqlalchemy.engine.base.Engine MainThread : ()
2020-01-30 00:32:11,029 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:32:11,029 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:32:11,029 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:32:11,030 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:32:11,030 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:32:11,030 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:32:11,030 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:32:11,030 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:32:21,409 INFO sqlalchemy.engine.base.Engine MainThread : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC 
 LIMIT %s
2020-01-30 00:32:21,409 INFO sqlalchemy.engine.base.Engine MainThread : (1,)
2020-01-30 00:32:21,410 DEBUG sqlalchemy.engine.base.Engine MainThread : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:32:21,410 DEBUG sqlalchemy.engine.base.Engine MainThread : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:35:58,487 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 00:35:58,487 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,488 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:35:58,489 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 00:35:58,489 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 00:35:58,490 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,490 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 00:35:58,490 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 00:35:58,490 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 00:35:58,491 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 00:35:58,491 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 00:35:58,491 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 00:35:58,491 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,492 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 00:35:58,492 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 00:35:58,493 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 00:35:58,493 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,493 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 00:35:58,493 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,494 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 00:35:58,494 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,495 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 00:35:58,498 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 00:35:58,498 INFO sqlalchemy.engine.base.Engine Thread-2 : ('0', 1)
2020-01-30 00:35:58,499 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 00:35:58,510 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:35:58,510 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 00:35:58,512 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:35:58,512 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:35:58,512 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:35:58,514 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:35:58,515 INFO sqlalchemy.engine.base.Engine Thread-2 : (97,)
2020-01-30 00:35:58,515 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:35:58,515 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 00:35:58,515 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 00:35:58,517 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:35:58,517 INFO sqlalchemy.engine.base.Engine Thread-2 : (105,)
2020-01-30 00:35:58,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:35:58,518 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:35:58,518 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:35:58,521 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 00:35:58,521 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:35:58,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:35:58,522 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:35:58,526 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:35:58,526 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 00:35:58,527 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:35:58,527 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:35:58,628 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:35:58,628 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 00:35:58,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:35:58,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:35:58,633 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 00:37:22,217 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 00:37:22,218 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:37:22,218 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 00:37:22,219 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:37:22,220 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:37:22,222 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:37:22,222 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 00:37:22,223 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:37:22,223 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:37:22,235 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 00:37:22,235 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 00:37:22,236 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 00:37:22,238 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:37:22,238 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:37:22,255 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:37:22,255 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 00:37:22,255 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:37:22,256 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:37:22,257 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 00:37:24,455 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 00:37:24,457 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:37:24,457 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 00:37:24,458 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:37:24,458 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:37:24,461 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:37:24,461 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 00:37:24,461 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:37:24,462 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:37:24,465 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 00:37:24,465 INFO sqlalchemy.engine.base.Engine Thread-16 : ('1', 1)
2020-01-30 00:37:24,466 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:37:24,467 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:37:24,470 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:37:24,470 INFO sqlalchemy.engine.base.Engine Thread-16 : (89,)
2020-01-30 00:37:24,471 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,471 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-30 00:37:24,471 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-30 00:37:24,472 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:37:24,472 INFO sqlalchemy.engine.base.Engine Thread-16 : (2,)
2020-01-30 00:37:24,473 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,473 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-30 00:37:24,473 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-30 00:37:24,473 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-30 00:37:24,474 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:37:24,475 INFO sqlalchemy.engine.base.Engine Thread-16 : (100,)
2020-01-30 00:37:24,475 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,475 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-30 00:37:24,475 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-30 00:37:24,476 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-30 00:37:24,476 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-01-30 00:37:24,476 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-30 00:37:24,477 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:37:24,478 INFO sqlalchemy.engine.base.Engine Thread-16 : (1,)
2020-01-30 00:37:24,478 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,479 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:37:24,479 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:37:24,480 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:37:24,480 INFO sqlalchemy.engine.base.Engine Thread-16 : (1,)
2020-01-30 00:37:24,481 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,481 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:37:24,481 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:37:24,482 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:37:24,483 INFO sqlalchemy.engine.base.Engine Thread-16 : (105,)
2020-01-30 00:37:24,483 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,483 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:37:24,483 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:37:24,485 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:37:24,485 INFO sqlalchemy.engine.base.Engine Thread-16 : (92,)
2020-01-30 00:37:24,485 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,486 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-30 00:37:24,486 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-30 00:37:24,486 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-30 00:37:24,486 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-30 00:37:24,488 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:37:24,488 INFO sqlalchemy.engine.base.Engine Thread-16 : (66,)
2020-01-30 00:37:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:37:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-30 00:37:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:37:24,515 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:37:24,515 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 00:37:24,516 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:37:24,516 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:37:24,522 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 00:45:21,014 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 00:45:21,015 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:45:21,016 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-01-30 00:45:21,018 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:21,019 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:21,022 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:21,022 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-30 00:45:21,023 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:21,023 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:21,035 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 00:45:21,035 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-01-30 00:45:21,037 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 00:45:21,038 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:45:21,038 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:45:21,043 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:21,043 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-30 00:45:21,044 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:21,044 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:21,046 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 00:45:23,240 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-30 00:45:23,242 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:45:23,242 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-01-30 00:45:23,242 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:23,243 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:23,245 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:23,245 INFO sqlalchemy.engine.base.Engine Thread-30 : ('philip', 1, 1)
2020-01-30 00:45:23,246 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:23,246 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:23,250 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 00:45:23,250 INFO sqlalchemy.engine.base.Engine Thread-30 : ('2', 1)
2020-01-30 00:45:23,251 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:45:23,251 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:45:23,254 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:45:23,255 INFO sqlalchemy.engine.base.Engine Thread-30 : (89,)
2020-01-30 00:45:23,255 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,255 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-30 00:45:23,256 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-30 00:45:23,257 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:45:23,257 INFO sqlalchemy.engine.base.Engine Thread-30 : (2,)
2020-01-30 00:45:23,257 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,258 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-30 00:45:23,258 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-30 00:45:23,258 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-30 00:45:23,259 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:45:23,259 INFO sqlalchemy.engine.base.Engine Thread-30 : (100,)
2020-01-30 00:45:23,260 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,260 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-30 00:45:23,260 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-30 00:45:23,260 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-30 00:45:23,260 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-01-30 00:45:23,260 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-30 00:45:23,262 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:45:23,262 INFO sqlalchemy.engine.base.Engine Thread-30 : (1,)
2020-01-30 00:45:23,262 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,263 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:45:23,263 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:45:23,264 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:45:23,264 INFO sqlalchemy.engine.base.Engine Thread-30 : (1,)
2020-01-30 00:45:23,265 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,265 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:45:23,265 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:45:23,267 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:45:23,267 INFO sqlalchemy.engine.base.Engine Thread-30 : (105,)
2020-01-30 00:45:23,267 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,267 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:45:23,268 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:45:23,269 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:45:23,269 INFO sqlalchemy.engine.base.Engine Thread-30 : (92,)
2020-01-30 00:45:23,270 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,270 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-30 00:45:23,270 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-30 00:45:23,270 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-30 00:45:23,270 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-30 00:45:23,272 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:45:23,272 INFO sqlalchemy.engine.base.Engine Thread-30 : (66,)
2020-01-30 00:45:23,273 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:45:23,273 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-30 00:45:23,273 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:45:23,277 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:23,277 INFO sqlalchemy.engine.base.Engine Thread-30 : ('philip', 1, 1)
2020-01-30 00:45:23,278 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:23,278 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:23,283 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-30 00:45:29,540 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-30 00:45:29,541 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:45:29,542 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-01-30 00:45:29,542 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:29,543 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:29,545 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:29,545 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-30 00:45:29,546 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:29,546 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:29,560 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 00:45:29,560 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-01-30 00:45:29,561 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 00:45:29,562 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:45:29,562 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 00:45:29,567 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:29,567 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-30 00:45:29,568 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:29,568 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:29,570 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-30 00:45:33,140 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-01-30 00:45:33,141 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:45:33,141 INFO sqlalchemy.engine.base.Engine Thread-44 : (1, 1)
2020-01-30 00:45:33,142 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:33,143 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:33,145 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:33,145 INFO sqlalchemy.engine.base.Engine Thread-44 : ('philip', 1, 1)
2020-01-30 00:45:33,146 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:33,146 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:33,156 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:45:33,156 INFO sqlalchemy.engine.base.Engine Thread-44 : ()
2020-01-30 00:45:33,157 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:45:33,158 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:45:33,174 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:45:33,174 INFO sqlalchemy.engine.base.Engine Thread-44 : ('philip', 1, 1)
2020-01-30 00:45:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:45:33,175 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:45:33,177 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-01-30 00:57:08,080 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-01-30 00:57:08,082 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:57:08,082 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-01-30 00:57:08,085 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:08,085 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:08,088 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:08,088 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-01-30 00:57:08,089 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:08,089 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:08,092 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 00:57:08,092 INFO sqlalchemy.engine.base.Engine Thread-51 : ('12', 1)
2020-01-30 00:57:08,092 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 00:57:08,093 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (12, 'Boxing Day', 83, 'Boxing Day', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'GBR,IND', 107, 106)
2020-01-30 00:57:08,096 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:08,096 INFO sqlalchemy.engine.base.Engine Thread-51 : (82,)
2020-01-30 00:57:08,097 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:08,097 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 00:57:08,097 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 00:57:08,097 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 00:57:08,098 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 00:57:08,098 INFO sqlalchemy.engine.base.Engine Thread-51 : (1,)
2020-01-30 00:57:08,099 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:08,099 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 00:57:08,099 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 00:57:08,100 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:08,100 INFO sqlalchemy.engine.base.Engine Thread-51 : (105,)
2020-01-30 00:57:08,101 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:08,101 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:57:08,101 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:57:08,102 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:08,102 INFO sqlalchemy.engine.base.Engine Thread-51 : (105,)
2020-01-30 00:57:08,103 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:08,103 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:57:08,103 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:57:08,142 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:08,142 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-01-30 00:57:08,143 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:08,143 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:08,146 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-01-30 00:57:12,099 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-01-30 00:57:12,100 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:57:12,100 INFO sqlalchemy.engine.base.Engine Thread-58 : (1, 1)
2020-01-30 00:57:12,101 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:12,101 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:12,104 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:12,104 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-01-30 00:57:12,105 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:12,105 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:12,115 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 00:57:12,115 INFO sqlalchemy.engine.base.Engine Thread-58 : ()
2020-01-30 00:57:12,115 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:57:12,116 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 00:57:12,121 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:12,121 INFO sqlalchemy.engine.base.Engine Thread-58 : ('philip', 1, 1)
2020-01-30 00:57:12,121 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:12,121 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:12,123 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-01-30 00:57:53,176 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-01-30 00:57:53,179 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:57:53,179 INFO sqlalchemy.engine.base.Engine Thread-65 : ()
2020-01-30 00:57:53,180 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:57:53,180 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:57:53,180 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:57:53,182 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:57:53,183 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-01-30 00:57:53,183 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:53,183 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:53,195 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:53,195 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-01-30 00:57:53,195 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:53,196 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:53,197 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-01-30 00:57:53,766 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-01-30 00:57:53,767 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:57:53,767 INFO sqlalchemy.engine.base.Engine Thread-72 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:57:53,768 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:57:53,769 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-01-30 00:57:53,782 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-01-30 00:57:53,783 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 00:57:53,783 INFO sqlalchemy.engine.base.Engine Thread-73 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 00:57:53,784 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('start', 'end', 'title', 'description')
2020-01-30 00:57:53,784 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-01-30 00:57:55,983 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-30 00:57:55,985 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 00:57:55,985 INFO sqlalchemy.engine.base.Engine Thread-74 : ('0', 1)
2020-01-30 00:57:55,985 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 00:57:55,991 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:57:55,991 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-01-30 00:57:55,992 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:57:55,992 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:57:55,992 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:57:55,994 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:55,994 INFO sqlalchemy.engine.base.Engine Thread-74 : (97,)
2020-01-30 00:57:55,994 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:55,994 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 00:57:55,994 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 00:57:55,996 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:55,996 INFO sqlalchemy.engine.base.Engine Thread-74 : (105,)
2020-01-30 00:57:55,996 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:55,996 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:57:55,997 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:57:56,000 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 00:57:56,000 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-01-30 00:57:56,001 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:57:56,001 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:57:56,003 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:57:56,003 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-01-30 00:57:56,004 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:56,004 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:56,008 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:56,008 INFO sqlalchemy.engine.base.Engine Thread-74 : ('philip', 1, 1)
2020-01-30 00:57:56,009 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:56,009 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:56,012 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-30 00:57:58,306 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-01-30 00:57:58,307 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 00:57:58,307 INFO sqlalchemy.engine.base.Engine Thread-81 : ('0', 1)
2020-01-30 00:57:58,308 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 00:57:58,313 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 00:57:58,313 INFO sqlalchemy.engine.base.Engine Thread-81 : ()
2020-01-30 00:57:58,314 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 00:57:58,315 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 00:57:58,315 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 00:57:58,316 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:58,317 INFO sqlalchemy.engine.base.Engine Thread-81 : (97,)
2020-01-30 00:57:58,317 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:58,317 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 00:57:58,317 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 00:57:58,319 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:57:58,319 INFO sqlalchemy.engine.base.Engine Thread-81 : (105,)
2020-01-30 00:57:58,319 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:57:58,319 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 00:57:58,320 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 00:57:58,322 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:57:58,322 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-01-30 00:57:58,323 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:58,323 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:58,327 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:57:58,327 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1, 1)
2020-01-30 00:57:58,328 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:57:58,328 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:57:58,332 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-01-30 00:59:08,711 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-01-30 00:59:08,713 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 00:59:08,713 INFO sqlalchemy.engine.base.Engine Thread-90 : ()
2020-01-30 00:59:08,714 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 00:59:08,714 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 00:59:08,714 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 00:59:08,714 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 00:59:08,716 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:59:08,716 INFO sqlalchemy.engine.base.Engine Thread-90 : (63,)
2020-01-30 00:59:08,716 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:59:08,717 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 00:59:08,717 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:08,717 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:08,729 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-01-30 00:59:25,700 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-01-30 00:59:25,701 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:25,701 INFO sqlalchemy.engine.base.Engine Thread-92 : (1, 1)
2020-01-30 00:59:25,702 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:25,702 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:25,705 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:25,705 INFO sqlalchemy.engine.base.Engine Thread-92 : ('philip', 1, 1)
2020-01-30 00:59:25,705 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:25,706 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:25,723 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:25,723 INFO sqlalchemy.engine.base.Engine Thread-92 : ('philip', 1, 1)
2020-01-30 00:59:25,724 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:25,724 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:25,727 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 00:59:25,727 INFO sqlalchemy.engine.base.Engine Thread-92 : ()
2020-01-30 00:59:25,728 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:59:25,729 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:25,729 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:25,729 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:25,730 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 00:59:25,730 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:25,730 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:25,732 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-01-30 00:59:29,436 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-01-30 00:59:29,437 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:29,437 INFO sqlalchemy.engine.base.Engine Thread-99 : (1, 1)
2020-01-30 00:59:29,437 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:29,438 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:29,440 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:29,440 INFO sqlalchemy.engine.base.Engine Thread-99 : ('philip', 1, 1)
2020-01-30 00:59:29,441 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:29,441 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:29,442 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:29,442 INFO sqlalchemy.engine.base.Engine Thread-99 : ('3', 1)
2020-01-30 00:59:29,443 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:29,443 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-30 00:59:29,445 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 00:59:29,445 INFO sqlalchemy.engine.base.Engine Thread-99 : ()
2020-01-30 00:59:29,446 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 00:59:29,446 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 00:59:29,446 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 00:59:29,446 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 00:59:29,448 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:59:29,448 INFO sqlalchemy.engine.base.Engine Thread-99 : (63,)
2020-01-30 00:59:29,448 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:59:29,449 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 00:59:29,449 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:29,449 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:29,483 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:29,483 INFO sqlalchemy.engine.base.Engine Thread-99 : ('philip', 1, 1)
2020-01-30 00:59:29,484 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:29,484 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:29,486 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-01-30 00:59:35,788 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-01-30 00:59:35,789 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:35,789 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-01-30 00:59:35,790 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:35,790 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:35,792 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:35,792 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-01-30 00:59:35,793 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:35,793 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:35,795 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:35,795 INFO sqlalchemy.engine.base.Engine Thread-106 : ('3', 1)
2020-01-30 00:59:35,795 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:35,796 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 1, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 19, 21, 0, 34), 'philip', 0)
2020-01-30 00:59:35,799 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 00:59:35,799 INFO sqlalchemy.engine.base.Engine Thread-106 : ()
2020-01-30 00:59:35,799 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 00:59:35,799 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 00:59:35,800 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 00:59:35,800 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 00:59:35,801 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:59:35,801 INFO sqlalchemy.engine.base.Engine Thread-106 : (63,)
2020-01-30 00:59:35,802 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:59:35,802 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 00:59:35,802 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:35,802 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:35,806 INFO sqlalchemy.engine.base.Engine Thread-106 : UPDATE users SET id=%s, `role`=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-30 00:59:35,806 INFO sqlalchemy.engine.base.Engine Thread-106 : ('3', 2, datetime.datetime(2020, 1, 30, 0, 59, 35, 803260), '0', 3)
2020-01-30 00:59:35,807 INFO sqlalchemy.engine.base.Engine Thread-106 : COMMIT
2020-01-30 00:59:35,889 INFO sqlalchemy.engine.base.Engine Thread-107 : BEGIN (implicit)
2020-01-30 00:59:35,890 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:35,890 INFO sqlalchemy.engine.base.Engine Thread-107 : (1, 1)
2020-01-30 00:59:35,891 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:35,891 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:35,893 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:35,893 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-01-30 00:59:35,894 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:35,894 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:35,899 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:35,899 INFO sqlalchemy.engine.base.Engine Thread-107 : ('philip', 1, 1)
2020-01-30 00:59:35,900 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:35,900 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:35,903 INFO sqlalchemy.engine.base.Engine Thread-107 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 00:59:35,903 INFO sqlalchemy.engine.base.Engine Thread-107 : ()
2020-01-30 00:59:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:59:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:35,904 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 00:59:35,905 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:35,905 DEBUG sqlalchemy.engine.base.Engine Thread-107 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:35,908 INFO sqlalchemy.engine.base.Engine Thread-107 : ROLLBACK
2020-01-30 00:59:52,913 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-01-30 00:59:52,914 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 00:59:52,914 INFO sqlalchemy.engine.base.Engine Thread-114 : ()
2020-01-30 00:59:52,915 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 00:59:52,915 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 00:59:52,915 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 00:59:52,915 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 00:59:52,917 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 00:59:52,917 INFO sqlalchemy.engine.base.Engine Thread-114 : (63,)
2020-01-30 00:59:52,917 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 00:59:52,917 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 00:59:52,918 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 00:59:52,918 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 00:59:52,919 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 00:59:52,919 INFO sqlalchemy.engine.base.Engine Thread-114 : ('frank', 1)
2020-01-30 00:59:52,920 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:52,920 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 00:59:52,922 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 00:59:52,922 INFO sqlalchemy.engine.base.Engine Thread-114 : (2, 1)
2020-01-30 00:59:52,922 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 00:59:52,922 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 00:59:53,236 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-01-30 00:59:53,252 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-01-30 00:59:53,253 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 00:59:53,253 INFO sqlalchemy.engine.base.Engine Thread-115 : (3, 1)
2020-01-30 00:59:53,254 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:53,254 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 00:59:53,256 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 00:59:53,256 INFO sqlalchemy.engine.base.Engine Thread-115 : ()
2020-01-30 00:59:53,257 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 00:59:53,257 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 00:59:53,358 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 00:59:53,359 INFO sqlalchemy.engine.base.Engine Thread-115 : ()
2020-01-30 00:59:53,359 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 00:59:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 00:59:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 00:59:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 00:59:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 00:59:53,360 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 00:59:53,369 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 00:59:53,369 INFO sqlalchemy.engine.base.Engine Thread-115 : ('frank', 1, 1)
2020-01-30 00:59:53,370 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 00:59:53,370 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 00:59:53,373 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-01-30 01:00:00,547 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-01-30 01:00:00,547 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:00,548 INFO sqlalchemy.engine.base.Engine Thread-137 : (3, 1)
2020-01-30 01:00:00,548 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:00,548 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:00,551 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:00,551 INFO sqlalchemy.engine.base.Engine Thread-137 : ('frank', 1, 1)
2020-01-30 01:00:00,551 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:00,552 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:00,560 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:00,560 INFO sqlalchemy.engine.base.Engine Thread-137 : ()
2020-01-30 01:00:00,561 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:00,561 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:00,561 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:00,561 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:00,561 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:00,561 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:00,562 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:00,562 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:00,565 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:00,566 INFO sqlalchemy.engine.base.Engine Thread-137 : ('frank', 1, 1)
2020-01-30 01:00:00,566 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:00,566 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:00,568 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-01-30 01:00:09,826 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-01-30 01:00:09,828 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:09,828 INFO sqlalchemy.engine.base.Engine Thread-144 : (1, 1)
2020-01-30 01:00:09,829 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:09,829 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:09,832 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:09,832 INFO sqlalchemy.engine.base.Engine Thread-144 : ('philip', 1, 1)
2020-01-30 01:00:09,832 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:09,833 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:09,841 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:09,841 INFO sqlalchemy.engine.base.Engine Thread-144 : ()
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:09,842 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:09,846 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:09,846 INFO sqlalchemy.engine.base.Engine Thread-144 : ('philip', 1, 1)
2020-01-30 01:00:09,847 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:09,847 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:09,849 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-01-30 01:00:12,636 INFO sqlalchemy.engine.base.Engine Thread-151 : BEGIN (implicit)
2020-01-30 01:00:12,638 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:12,638 INFO sqlalchemy.engine.base.Engine Thread-151 : (1, 1)
2020-01-30 01:00:12,639 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:12,639 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:12,641 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:12,641 INFO sqlalchemy.engine.base.Engine Thread-151 : ('philip', 1, 1)
2020-01-30 01:00:12,642 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:12,642 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:12,644 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 01:00:12,644 INFO sqlalchemy.engine.base.Engine Thread-151 : ('0', 1)
2020-01-30 01:00:12,644 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 01:00:12,646 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:00:12,646 INFO sqlalchemy.engine.base.Engine Thread-151 : (82,)
2020-01-30 01:00:12,647 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:12,647 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 01:00:12,647 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 01:00:12,647 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 01:00:12,648 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:00:12,649 INFO sqlalchemy.engine.base.Engine Thread-151 : (1,)
2020-01-30 01:00:12,649 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:12,649 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:00:12,649 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:00:12,651 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:00:12,651 INFO sqlalchemy.engine.base.Engine Thread-151 : (105,)
2020-01-30 01:00:12,651 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:12,651 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:00:12,652 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:00:12,653 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:00:12,653 INFO sqlalchemy.engine.base.Engine Thread-151 : (105,)
2020-01-30 01:00:12,653 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:12,653 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:00:12,654 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:00:12,658 INFO sqlalchemy.engine.base.Engine Thread-151 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:12,658 INFO sqlalchemy.engine.base.Engine Thread-151 : ('philip', 1, 1)
2020-01-30 01:00:12,659 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:12,659 DEBUG sqlalchemy.engine.base.Engine Thread-151 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:12,662 INFO sqlalchemy.engine.base.Engine Thread-151 : ROLLBACK
2020-01-30 01:00:49,932 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-01-30 01:00:49,934 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:49,934 INFO sqlalchemy.engine.base.Engine Thread-159 : (3, 1)
2020-01-30 01:00:49,935 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:49,935 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:49,938 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:49,938 INFO sqlalchemy.engine.base.Engine Thread-159 : ('frank', 1, 1)
2020-01-30 01:00:49,939 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:49,940 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:49,948 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:49,948 INFO sqlalchemy.engine.base.Engine Thread-159 : ()
2020-01-30 01:00:49,949 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:49,949 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:49,949 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:49,949 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:49,950 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:49,950 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:49,950 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:49,950 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:49,955 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:49,955 INFO sqlalchemy.engine.base.Engine Thread-159 : ('frank', 1, 1)
2020-01-30 01:00:49,955 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:49,956 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:49,958 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-01-30 01:00:51,554 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-01-30 01:00:51,555 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:51,555 INFO sqlalchemy.engine.base.Engine Thread-179 : (3, 1)
2020-01-30 01:00:51,556 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:51,556 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:51,559 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:51,559 INFO sqlalchemy.engine.base.Engine Thread-179 : ('frank', 1, 1)
2020-01-30 01:00:51,559 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:51,560 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:51,568 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:51,568 INFO sqlalchemy.engine.base.Engine Thread-179 : ()
2020-01-30 01:00:51,569 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:51,569 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:51,569 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:51,569 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:51,569 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:51,569 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:51,570 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:51,570 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:51,573 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:51,574 INFO sqlalchemy.engine.base.Engine Thread-179 : ('frank', 1, 1)
2020-01-30 01:00:51,574 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:51,574 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:51,576 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-01-30 01:00:52,838 INFO sqlalchemy.engine.base.Engine Thread-200 : BEGIN (implicit)
2020-01-30 01:00:52,839 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:52,839 INFO sqlalchemy.engine.base.Engine Thread-200 : (3, 1)
2020-01-30 01:00:52,840 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:52,840 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:52,842 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:52,842 INFO sqlalchemy.engine.base.Engine Thread-200 : ('frank', 1, 1)
2020-01-30 01:00:52,843 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:52,843 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:52,852 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:52,852 INFO sqlalchemy.engine.base.Engine Thread-200 : ()
2020-01-30 01:00:52,852 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:52,853 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:52,858 INFO sqlalchemy.engine.base.Engine Thread-200 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:52,858 INFO sqlalchemy.engine.base.Engine Thread-200 : ('frank', 1, 1)
2020-01-30 01:00:52,858 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:52,859 DEBUG sqlalchemy.engine.base.Engine Thread-200 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:52,860 INFO sqlalchemy.engine.base.Engine Thread-200 : ROLLBACK
2020-01-30 01:00:55,851 INFO sqlalchemy.engine.base.Engine Thread-221 : BEGIN (implicit)
2020-01-30 01:00:55,852 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:55,852 INFO sqlalchemy.engine.base.Engine Thread-221 : (1, 1)
2020-01-30 01:00:55,853 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:55,853 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:55,856 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:55,856 INFO sqlalchemy.engine.base.Engine Thread-221 : ('philip', 1, 1)
2020-01-30 01:00:55,856 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:55,857 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:55,858 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 01:00:55,858 INFO sqlalchemy.engine.base.Engine Thread-221 : ('0', 1)
2020-01-30 01:00:55,859 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 01:00:55,861 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:00:55,862 INFO sqlalchemy.engine.base.Engine Thread-221 : (82,)
2020-01-30 01:00:55,862 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:55,862 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 01:00:55,862 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 01:00:55,862 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 01:00:55,864 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:00:55,864 INFO sqlalchemy.engine.base.Engine Thread-221 : (1,)
2020-01-30 01:00:55,864 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:55,864 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:00:55,864 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:00:55,866 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:00:55,866 INFO sqlalchemy.engine.base.Engine Thread-221 : (105,)
2020-01-30 01:00:55,866 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:55,867 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:00:55,867 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:00:55,868 INFO sqlalchemy.engine.base.Engine Thread-221 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:00:55,868 INFO sqlalchemy.engine.base.Engine Thread-221 : (105,)
2020-01-30 01:00:55,868 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:00:55,869 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:00:55,869 DEBUG sqlalchemy.engine.base.Engine Thread-221 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:00:55,873 INFO sqlalchemy.engine.base.Engine Thread-221 : INSERT INTO datesofinterest (id, doi_name, doi_priority, doi_comment, doi_start_dt, doi_end_dt, doi_regions, doi_locked, doi_hap) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
2020-01-30 01:00:55,873 INFO sqlalchemy.engine.base.Engine Thread-221 : ('0', 'test date', 83, '', datetime.datetime(2020, 1, 31, 0, 0), datetime.datetime(2020, 1, 31, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 01:00:55,874 INFO sqlalchemy.engine.base.Engine Thread-221 : COMMIT
2020-01-30 01:00:55,947 INFO sqlalchemy.engine.base.Engine Thread-222 : BEGIN (implicit)
2020-01-30 01:00:55,948 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:55,948 INFO sqlalchemy.engine.base.Engine Thread-222 : (1, 1)
2020-01-30 01:00:55,949 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:55,949 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:55,951 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:55,951 INFO sqlalchemy.engine.base.Engine Thread-222 : ('philip', 1, 1)
2020-01-30 01:00:55,952 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:55,954 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:55,962 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:55,962 INFO sqlalchemy.engine.base.Engine Thread-222 : ()
2020-01-30 01:00:55,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:55,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (14, 'test date', 'GBR,IND', datetime.datetime(2020, 1, 31, 0, 0), datetime.datetime(2020, 1, 31, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:55,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:55,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:55,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:55,963 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:55,964 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:55,964 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:55,964 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:55,968 INFO sqlalchemy.engine.base.Engine Thread-222 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:55,968 INFO sqlalchemy.engine.base.Engine Thread-222 : ('philip', 1, 1)
2020-01-30 01:00:55,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:55,968 DEBUG sqlalchemy.engine.base.Engine Thread-222 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:00:55,971 INFO sqlalchemy.engine.base.Engine Thread-222 : ROLLBACK
2020-01-30 01:00:58,775 INFO sqlalchemy.engine.base.Engine Thread-229 : BEGIN (implicit)
2020-01-30 01:00:58,776 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:00:58,776 INFO sqlalchemy.engine.base.Engine Thread-229 : (3, 1)
2020-01-30 01:00:58,777 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:58,777 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:58,779 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:58,780 INFO sqlalchemy.engine.base.Engine Thread-229 : ('frank', 1, 1)
2020-01-30 01:00:58,780 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:58,780 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:58,789 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:00:58,789 INFO sqlalchemy.engine.base.Engine Thread-229 : ()
2020-01-30 01:00:58,789 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (14, 'test date', 'GBR,IND', datetime.datetime(2020, 1, 31, 0, 0), datetime.datetime(2020, 1, 31, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:58,790 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:00:58,794 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:00:58,794 INFO sqlalchemy.engine.base.Engine Thread-229 : ('frank', 1, 1)
2020-01-30 01:00:58,795 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:00:58,795 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:00:58,797 INFO sqlalchemy.engine.base.Engine Thread-229 : ROLLBACK
2020-01-30 01:01:02,690 INFO sqlalchemy.engine.base.Engine Thread-250 : BEGIN (implicit)
2020-01-30 01:01:02,691 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:01:02,691 INFO sqlalchemy.engine.base.Engine Thread-250 : (3, 1)
2020-01-30 01:01:02,692 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:02,692 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:02,694 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:02,695 INFO sqlalchemy.engine.base.Engine Thread-250 : ('frank', 1, 1)
2020-01-30 01:01:02,695 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:02,695 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:02,697 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 01:01:02,697 INFO sqlalchemy.engine.base.Engine Thread-250 : ('14', 1)
2020-01-30 01:01:02,697 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 01:01:02,698 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (14, 'test date', 83, '', datetime.datetime(2020, 1, 31, 0, 0), datetime.datetime(2020, 1, 31, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 01:01:02,700 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:02,700 INFO sqlalchemy.engine.base.Engine Thread-250 : (82,)
2020-01-30 01:01:02,700 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:02,701 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 01:01:02,701 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 01:01:02,701 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 01:01:02,702 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:01:02,702 INFO sqlalchemy.engine.base.Engine Thread-250 : (1,)
2020-01-30 01:01:02,703 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:02,703 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:01:02,703 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:01:02,704 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:02,704 INFO sqlalchemy.engine.base.Engine Thread-250 : (105,)
2020-01-30 01:01:02,705 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:02,705 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:01:02,705 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:01:02,706 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:02,706 INFO sqlalchemy.engine.base.Engine Thread-250 : (105,)
2020-01-30 01:01:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:01:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:01:02,711 INFO sqlalchemy.engine.base.Engine Thread-250 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:02,712 INFO sqlalchemy.engine.base.Engine Thread-250 : ('frank', 1, 1)
2020-01-30 01:01:02,712 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:02,712 DEBUG sqlalchemy.engine.base.Engine Thread-250 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:02,715 INFO sqlalchemy.engine.base.Engine Thread-250 : ROLLBACK
2020-01-30 01:01:55,345 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-01-30 01:01:55,346 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:01:55,346 INFO sqlalchemy.engine.base.Engine Thread-257 : (3, 1)
2020-01-30 01:01:55,347 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:55,348 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:55,350 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:55,351 INFO sqlalchemy.engine.base.Engine Thread-257 : ('frank', 1, 1)
2020-01-30 01:01:55,351 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:55,352 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:55,353 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 01:01:55,353 INFO sqlalchemy.engine.base.Engine Thread-257 : ('14', 1)
2020-01-30 01:01:55,354 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 01:01:55,354 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (14, 'test date', 83, '', datetime.datetime(2020, 1, 31, 0, 0), datetime.datetime(2020, 1, 31, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 01:01:55,357 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:55,358 INFO sqlalchemy.engine.base.Engine Thread-257 : (82,)
2020-01-30 01:01:55,358 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:55,358 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 01:01:55,358 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 01:01:55,358 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 01:01:55,360 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:01:55,360 INFO sqlalchemy.engine.base.Engine Thread-257 : (1,)
2020-01-30 01:01:55,361 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:55,361 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:01:55,361 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:01:55,362 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:55,363 INFO sqlalchemy.engine.base.Engine Thread-257 : (105,)
2020-01-30 01:01:55,363 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:55,363 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:01:55,363 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:01:55,365 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:55,365 INFO sqlalchemy.engine.base.Engine Thread-257 : (105,)
2020-01-30 01:01:55,365 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:55,365 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:01:55,365 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:01:55,367 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 01:01:55,367 INFO sqlalchemy.engine.base.Engine Thread-257 : ('14', 1)
2020-01-30 01:01:55,368 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 01:01:55,368 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Row (14, 'test date', 83, '', datetime.datetime(2020, 1, 31, 0, 0), datetime.datetime(2020, 1, 31, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 01:01:55,369 INFO sqlalchemy.engine.base.Engine Thread-257 : DELETE FROM datesofinterest WHERE datesofinterest.id = %s
2020-01-30 01:01:55,369 INFO sqlalchemy.engine.base.Engine Thread-257 : (14,)
2020-01-30 01:01:55,369 INFO sqlalchemy.engine.base.Engine Thread-257 : COMMIT
2020-01-30 01:01:55,399 INFO sqlalchemy.engine.base.Engine Thread-258 : BEGIN (implicit)
2020-01-30 01:01:55,400 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:01:55,400 INFO sqlalchemy.engine.base.Engine Thread-258 : (3, 1)
2020-01-30 01:01:55,401 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:55,401 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:55,403 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:55,403 INFO sqlalchemy.engine.base.Engine Thread-258 : ('frank', 1, 1)
2020-01-30 01:01:55,404 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:55,404 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:55,413 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:01:55,414 INFO sqlalchemy.engine.base.Engine Thread-258 : ()
2020-01-30 01:01:55,414 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:01:55,415 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:01:55,420 INFO sqlalchemy.engine.base.Engine Thread-258 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:55,420 INFO sqlalchemy.engine.base.Engine Thread-258 : ('frank', 1, 1)
2020-01-30 01:01:55,420 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:55,421 DEBUG sqlalchemy.engine.base.Engine Thread-258 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:01:55,424 INFO sqlalchemy.engine.base.Engine Thread-258 : ROLLBACK
2020-01-30 01:01:59,481 INFO sqlalchemy.engine.base.Engine Thread-265 : BEGIN (implicit)
2020-01-30 01:01:59,482 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:01:59,482 INFO sqlalchemy.engine.base.Engine Thread-265 : (1, 1)
2020-01-30 01:01:59,483 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:59,483 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:01:59,485 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:59,485 INFO sqlalchemy.engine.base.Engine Thread-265 : ('philip', 1, 1)
2020-01-30 01:01:59,486 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:59,486 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:01:59,488 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 01:01:59,488 INFO sqlalchemy.engine.base.Engine Thread-265 : ('14', 1)
2020-01-30 01:01:59,489 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 01:01:59,491 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:59,491 INFO sqlalchemy.engine.base.Engine Thread-265 : (82,)
2020-01-30 01:01:59,492 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:59,492 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 01:01:59,492 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 01:01:59,492 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 01:01:59,494 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:01:59,494 INFO sqlalchemy.engine.base.Engine Thread-265 : (1,)
2020-01-30 01:01:59,494 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:59,494 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:01:59,494 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:01:59,496 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:59,496 INFO sqlalchemy.engine.base.Engine Thread-265 : (105,)
2020-01-30 01:01:59,496 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:59,497 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:01:59,497 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:01:59,498 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:01:59,498 INFO sqlalchemy.engine.base.Engine Thread-265 : (105,)
2020-01-30 01:01:59,498 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:01:59,499 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:01:59,499 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:01:59,503 INFO sqlalchemy.engine.base.Engine Thread-265 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:01:59,503 INFO sqlalchemy.engine.base.Engine Thread-265 : ('philip', 1, 1)
2020-01-30 01:01:59,504 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:01:59,504 DEBUG sqlalchemy.engine.base.Engine Thread-265 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:01:59,507 INFO sqlalchemy.engine.base.Engine Thread-265 : ROLLBACK
2020-01-30 01:02:25,419 INFO sqlalchemy.engine.base.Engine Thread-272 : BEGIN (implicit)
2020-01-30 01:02:25,420 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:02:25,420 INFO sqlalchemy.engine.base.Engine Thread-272 : (1, 1)
2020-01-30 01:02:25,421 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:25,421 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:02:25,424 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:25,424 INFO sqlalchemy.engine.base.Engine Thread-272 : ('philip', 1, 1)
2020-01-30 01:02:25,425 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:25,425 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:02:25,433 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 01:02:25,434 INFO sqlalchemy.engine.base.Engine Thread-272 : ()
2020-01-30 01:02:25,434 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 01:02:25,434 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 01:02:25,435 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:02:25,435 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:02:25,435 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:02:25,435 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:02:25,435 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:02:25,435 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 01:02:25,439 INFO sqlalchemy.engine.base.Engine Thread-272 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:25,439 INFO sqlalchemy.engine.base.Engine Thread-272 : ('philip', 1, 1)
2020-01-30 01:02:25,440 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:25,440 DEBUG sqlalchemy.engine.base.Engine Thread-272 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:02:25,442 INFO sqlalchemy.engine.base.Engine Thread-272 : ROLLBACK
2020-01-30 01:02:40,639 INFO sqlalchemy.engine.base.Engine Thread-279 : BEGIN (implicit)
2020-01-30 01:02:40,640 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:02:40,640 INFO sqlalchemy.engine.base.Engine Thread-279 : (3, 1)
2020-01-30 01:02:40,641 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:40,642 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:40,644 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:40,644 INFO sqlalchemy.engine.base.Engine Thread-279 : ('frank', 1, 1)
2020-01-30 01:02:40,645 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:40,645 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:40,657 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 01:02:40,657 INFO sqlalchemy.engine.base.Engine Thread-279 : ()
2020-01-30 01:02:40,659 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 01:02:40,660 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 01:02:40,660 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 01:02:40,664 INFO sqlalchemy.engine.base.Engine Thread-279 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:40,664 INFO sqlalchemy.engine.base.Engine Thread-279 : ('frank', 1, 1)
2020-01-30 01:02:40,665 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:40,665 DEBUG sqlalchemy.engine.base.Engine Thread-279 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:40,667 INFO sqlalchemy.engine.base.Engine Thread-279 : ROLLBACK
2020-01-30 01:02:42,569 INFO sqlalchemy.engine.base.Engine Thread-286 : BEGIN (implicit)
2020-01-30 01:02:42,570 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:02:42,570 INFO sqlalchemy.engine.base.Engine Thread-286 : (3, 1)
2020-01-30 01:02:42,571 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:42,571 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:42,573 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:42,573 INFO sqlalchemy.engine.base.Engine Thread-286 : ('frank', 1, 1)
2020-01-30 01:02:42,574 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:42,575 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:42,578 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 01:02:42,579 INFO sqlalchemy.engine.base.Engine Thread-286 : ('2', 1)
2020-01-30 01:02:42,580 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 01:02:42,580 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 01:02:42,583 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:02:42,583 INFO sqlalchemy.engine.base.Engine Thread-286 : (89,)
2020-01-30 01:02:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-30 01:02:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-30 01:02:42,586 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:02:42,586 INFO sqlalchemy.engine.base.Engine Thread-286 : (2,)
2020-01-30 01:02:42,586 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,587 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-30 01:02:42,587 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-30 01:02:42,587 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-30 01:02:42,588 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:02:42,588 INFO sqlalchemy.engine.base.Engine Thread-286 : (100,)
2020-01-30 01:02:42,589 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,589 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-30 01:02:42,589 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-30 01:02:42,589 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-30 01:02:42,589 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-01-30 01:02:42,589 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-30 01:02:42,591 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:02:42,591 INFO sqlalchemy.engine.base.Engine Thread-286 : (1,)
2020-01-30 01:02:42,591 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,591 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:02:42,592 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:02:42,593 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:02:42,593 INFO sqlalchemy.engine.base.Engine Thread-286 : (1,)
2020-01-30 01:02:42,594 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,594 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:02:42,594 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:02:42,595 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:02:42,595 INFO sqlalchemy.engine.base.Engine Thread-286 : (105,)
2020-01-30 01:02:42,596 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,596 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:02:42,596 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:02:42,598 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:02:42,598 INFO sqlalchemy.engine.base.Engine Thread-286 : (92,)
2020-01-30 01:02:42,598 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,599 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-30 01:02:42,599 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-30 01:02:42,599 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-30 01:02:42,599 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-30 01:02:42,603 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:02:42,603 INFO sqlalchemy.engine.base.Engine Thread-286 : (66,)
2020-01-30 01:02:42,604 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:02:42,604 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-30 01:02:42,604 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 01:02:42,608 INFO sqlalchemy.engine.base.Engine Thread-286 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:42,608 INFO sqlalchemy.engine.base.Engine Thread-286 : ('frank', 1, 1)
2020-01-30 01:02:42,609 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:42,609 DEBUG sqlalchemy.engine.base.Engine Thread-286 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:42,614 INFO sqlalchemy.engine.base.Engine Thread-286 : ROLLBACK
2020-01-30 01:02:47,266 INFO sqlalchemy.engine.base.Engine Thread-294 : BEGIN (implicit)
2020-01-30 01:02:47,267 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:02:47,267 INFO sqlalchemy.engine.base.Engine Thread-294 : (3, 1)
2020-01-30 01:02:47,268 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:47,268 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:47,271 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:47,271 INFO sqlalchemy.engine.base.Engine Thread-294 : ('frank', 1, 1)
2020-01-30 01:02:47,272 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:47,272 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:47,283 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 01:02:47,283 INFO sqlalchemy.engine.base.Engine Thread-294 : ()
2020-01-30 01:02:47,284 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 01:02:47,286 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 01:02:47,286 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 01:02:47,290 INFO sqlalchemy.engine.base.Engine Thread-294 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:02:47,290 INFO sqlalchemy.engine.base.Engine Thread-294 : ('frank', 1, 1)
2020-01-30 01:02:47,291 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:02:47,291 DEBUG sqlalchemy.engine.base.Engine Thread-294 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:02:47,293 INFO sqlalchemy.engine.base.Engine Thread-294 : ROLLBACK
2020-01-30 01:04:13,537 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-01-30 01:04:13,538 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:04:13,539 INFO sqlalchemy.engine.base.Engine Thread-300 : (3, 1)
2020-01-30 01:04:13,540 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:13,540 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:13,543 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:04:13,543 INFO sqlalchemy.engine.base.Engine Thread-300 : ('frank', 1, 1)
2020-01-30 01:04:13,543 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:13,544 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:13,547 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 01:04:13,547 INFO sqlalchemy.engine.base.Engine Thread-300 : ('2', 1)
2020-01-30 01:04:13,548 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 01:04:13,548 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 01:04:13,552 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:04:13,552 INFO sqlalchemy.engine.base.Engine Thread-300 : (89,)
2020-01-30 01:04:13,553 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,553 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-30 01:04:13,553 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-30 01:04:13,554 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:04:13,555 INFO sqlalchemy.engine.base.Engine Thread-300 : (2,)
2020-01-30 01:04:13,555 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,555 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-30 01:04:13,555 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-30 01:04:13,556 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-30 01:04:13,557 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:04:13,557 INFO sqlalchemy.engine.base.Engine Thread-300 : (100,)
2020-01-30 01:04:13,557 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,558 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-30 01:04:13,558 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-30 01:04:13,558 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-30 01:04:13,558 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-01-30 01:04:13,558 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-30 01:04:13,559 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:04:13,560 INFO sqlalchemy.engine.base.Engine Thread-300 : (1,)
2020-01-30 01:04:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:04:13,560 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:04:13,562 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:04:13,562 INFO sqlalchemy.engine.base.Engine Thread-300 : (1,)
2020-01-30 01:04:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 01:04:13,563 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 01:04:13,564 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:04:13,564 INFO sqlalchemy.engine.base.Engine Thread-300 : (105,)
2020-01-30 01:04:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 01:04:13,565 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 01:04:13,566 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:04:13,566 INFO sqlalchemy.engine.base.Engine Thread-300 : (92,)
2020-01-30 01:04:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-30 01:04:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-30 01:04:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-30 01:04:13,567 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-30 01:04:13,569 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 01:04:13,569 INFO sqlalchemy.engine.base.Engine Thread-300 : (66,)
2020-01-30 01:04:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-30 01:04:13,569 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 01:04:13,573 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:04:13,573 INFO sqlalchemy.engine.base.Engine Thread-300 : ('frank', 1, 1)
2020-01-30 01:04:13,574 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:13,574 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:13,579 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-01-30 01:04:16,184 INFO sqlalchemy.engine.base.Engine Thread-307 : BEGIN (implicit)
2020-01-30 01:04:16,187 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 01:04:16,187 INFO sqlalchemy.engine.base.Engine Thread-307 : ()
2020-01-30 01:04:16,188 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 01:04:16,188 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 01:04:16,189 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 01:04:16,191 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:04:16,191 INFO sqlalchemy.engine.base.Engine Thread-307 : (3, 1)
2020-01-30 01:04:16,191 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:16,192 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:16,197 INFO sqlalchemy.engine.base.Engine Thread-307 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:04:16,197 INFO sqlalchemy.engine.base.Engine Thread-307 : ('frank', 1, 1)
2020-01-30 01:04:16,197 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:16,198 DEBUG sqlalchemy.engine.base.Engine Thread-307 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:16,199 INFO sqlalchemy.engine.base.Engine Thread-307 : ROLLBACK
2020-01-30 01:04:16,681 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-01-30 01:04:16,682 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 01:04:16,682 INFO sqlalchemy.engine.base.Engine Thread-314 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 01:04:16,684 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('start', 'end', 'title', 'description')
2020-01-30 01:04:16,689 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-01-30 01:04:16,690 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-01-30 01:04:16,691 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 01:04:16,691 INFO sqlalchemy.engine.base.Engine Thread-315 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 01:04:16,692 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('start', 'end', 'title', 'description')
2020-01-30 01:04:16,692 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-01-30 01:04:17,705 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-01-30 01:04:17,706 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:04:17,706 INFO sqlalchemy.engine.base.Engine Thread-316 : (3, 1)
2020-01-30 01:04:17,707 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:17,707 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:17,708 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:04:17,708 INFO sqlalchemy.engine.base.Engine Thread-316 : ()
2020-01-30 01:04:17,709 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:04:17,709 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:04:17,813 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:04:17,813 INFO sqlalchemy.engine.base.Engine Thread-316 : ()
2020-01-30 01:04:17,814 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:17,814 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:04:17,814 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:04:17,815 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:17,815 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:04:17,815 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:04:17,815 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:04:17,819 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:04:17,819 INFO sqlalchemy.engine.base.Engine Thread-316 : ('frank', 1, 1)
2020-01-30 01:04:17,820 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:17,820 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:17,821 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-01-30 01:04:25,798 INFO sqlalchemy.engine.base.Engine Thread-323 : BEGIN (implicit)
2020-01-30 01:04:25,800 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:04:25,800 INFO sqlalchemy.engine.base.Engine Thread-323 : (3, 1)
2020-01-30 01:04:25,801 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:25,801 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:25,803 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:04:25,803 INFO sqlalchemy.engine.base.Engine Thread-323 : ('frank', 1)
2020-01-30 01:04:25,803 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:25,804 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:25,807 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:04:25,807 INFO sqlalchemy.engine.base.Engine Thread-323 : ()
2020-01-30 01:04:25,807 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:04:25,807 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:04:25,807 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:04:25,808 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:04:25,809 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:04:25,809 INFO sqlalchemy.engine.base.Engine Thread-323 : (63,)
2020-01-30 01:04:25,810 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:25,810 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:04:25,810 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:04:25,810 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:04:25,834 INFO sqlalchemy.engine.base.Engine Thread-323 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:04:25,834 INFO sqlalchemy.engine.base.Engine Thread-323 : ('frank', 1, 1)
2020-01-30 01:04:25,835 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:25,835 DEBUG sqlalchemy.engine.base.Engine Thread-323 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:25,837 INFO sqlalchemy.engine.base.Engine Thread-323 : ROLLBACK
2020-01-30 01:04:32,180 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-01-30 01:04:32,181 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:04:32,181 INFO sqlalchemy.engine.base.Engine Thread-330 : (3, 1)
2020-01-30 01:04:32,182 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:32,182 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:32,184 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:04:32,184 INFO sqlalchemy.engine.base.Engine Thread-330 : ('frank', 1)
2020-01-30 01:04:32,185 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:04:32,185 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:04:32,187 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:04:32,188 INFO sqlalchemy.engine.base.Engine Thread-330 : ()
2020-01-30 01:04:32,188 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:04:32,188 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:04:32,188 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:04:32,188 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:04:32,190 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:04:32,190 INFO sqlalchemy.engine.base.Engine Thread-330 : (63,)
2020-01-30 01:04:32,190 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:04:32,191 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:04:32,191 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:04:32,191 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:06:22,563 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:06:22,564 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,565 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:06:22,565 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:06:22,566 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:06:22,566 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:06:22,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:06:22,567 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:06:22,567 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:06:22,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:06:22,568 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:06:22,568 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,568 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:06:22,569 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:06:22,569 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:06:22,569 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,570 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:06:22,570 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,571 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:06:22,571 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,571 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:06:22,573 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:06:22,574 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:06:22,574 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:22,575 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:22,576 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:06:22,576 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1)
2020-01-30 01:06:22,577 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:22,577 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:22,580 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:06:22,580 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:06:22,581 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:06:22,581 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:06:22,581 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:06:22,581 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:06:22,583 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:06:22,584 INFO sqlalchemy.engine.base.Engine Thread-2 : (63,)
2020-01-30 01:06:22,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:06:22,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:06:22,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:06:22,585 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:06:22,659 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:06:22,659 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:06:22,660 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:22,660 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:22,663 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:06:25,737 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:06:25,738 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:06:25,738 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:06:25,739 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:25,739 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:25,741 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:06:25,741 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:06:25,742 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:25,742 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:25,746 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:06:25,746 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:06:25,746 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:06:25,747 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:06:25,747 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:06:25,747 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:06:25,748 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:06:25,748 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:06:25,750 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:06:25,750 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:06:25,750 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:06:25,750 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:06:25,756 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:06:25,756 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:06:25,756 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:25,757 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:48,137 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:06:48,139 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:06:48,139 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:06:48,140 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:48,140 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:48,142 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:06:48,142 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:06:48,143 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:06:48,143 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:06:48,257 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:06:48,258 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:06:48,258 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:48,259 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:48,259 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:06:48,259 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:06:48,259 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:06:48,259 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:06:48,259 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:06:48,269 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:06:48,269 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 01:06:48,270 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:48,270 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:48,271 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 01:06:48,436 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-30 01:06:50,554 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 01:06:50,555 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:06:50,555 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-01-30 01:06:50,556 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:50,557 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:50,559 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:06:50,559 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1)
2020-01-30 01:06:50,559 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:50,560 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:50,562 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:06:50,562 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-01-30 01:06:50,562 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:06:50,563 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:06:50,563 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:06:50,563 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:06:50,564 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:06:50,564 INFO sqlalchemy.engine.base.Engine Thread-23 : (63,)
2020-01-30 01:06:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:06:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:06:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:06:50,565 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:06:50,569 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:06:50,570 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-30 01:06:50,570 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:06:50,571 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:06:50,573 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 01:10:09,416 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:10:09,416 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,418 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:10:09,418 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:10:09,418 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:10:09,419 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:10:09,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:10:09,420 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:10:09,420 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,420 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:10:09,420 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:10:09,420 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:10:09,420 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,421 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:10:09,421 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:10:09,422 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:10:09,422 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,423 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:10:09,423 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,423 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:10:09,423 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,424 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:10:09,426 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:10:09,426 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:10:09,427 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:09,428 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:09,429 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:10:09,430 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:10:09,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:10:09,524 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:10:09,524 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:10:09,525 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:10:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:10:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:10:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:10:09,526 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:10:09,594 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:10:09,594 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:10:09,598 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:09,599 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:09,601 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:10:11,785 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:10:11,786 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:10:11,786 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:10:11,787 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:11,788 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:11,789 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:10:11,789 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:10:11,790 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:11,790 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:11,793 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:10:11,793 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:10:11,794 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:10:11,794 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:10:11,794 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:10:11,794 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:10:11,796 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:10:11,796 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:10:11,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:10:11,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:10:11,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:10:11,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:10:11,818 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:10:11,818 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:10:11,819 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:11,819 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:11,821 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 01:10:13,414 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:10:13,415 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:10:13,415 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:10:13,416 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:13,416 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:13,417 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:10:13,418 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 01:10:13,418 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:13,418 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:10:13,422 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:10:13,422 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:10:13,422 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:10:13,423 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:10:13,423 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:10:13,423 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:10:13,424 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:10:13,424 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 01:10:13,425 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:10:13,425 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:10:13,425 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:10:13,425 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:10:13,429 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:10:13,430 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 01:10:13,430 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:10:13,430 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:12:59,311 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:12:59,311 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,312 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:12:59,313 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:12:59,313 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:12:59,314 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,314 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:12:59,314 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:12:59,315 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:12:59,315 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,315 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:12:59,315 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:12:59,315 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:12:59,315 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,316 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:12:59,316 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:12:59,317 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:12:59,317 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,318 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:12:59,318 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,319 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:12:59,319 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,319 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:12:59,322 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:12:59,322 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:12:59,323 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:12:59,323 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:12:59,325 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:12:59,325 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,325 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:12:59,326 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:12:59,432 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:12:59,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:12:59,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:12:59,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:12:59,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:12:59,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:12:59,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:12:59,434 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:12:59,434 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:12:59,495 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:12:59,495 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:12:59,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:12:59,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:12:59,498 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:13:01,448 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:13:01,449 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:13:01,449 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:13:01,450 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:13:01,450 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:13:01,452 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:13:01,452 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:13:01,452 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:13:01,452 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:13:01,455 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:13:01,456 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:13:01,456 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:13:01,456 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:13:01,456 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:13:01,457 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:13:01,459 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:13:01,459 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:13:01,459 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:13:01,460 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:13:01,460 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:13:01,460 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:13:01,481 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:13:01,481 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:13:01,482 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:13:01,482 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:13:01,484 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 01:13:03,279 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:13:03,280 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:13:03,280 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:13:03,281 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:13:03,281 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:13:03,282 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:13:03,283 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 01:13:03,283 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:13:03,283 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:13:03,287 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:13:03,287 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:13:03,287 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:13:03,287 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:13:03,288 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:13:03,288 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:13:03,289 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:13:03,289 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 01:13:03,290 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:13:03,290 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:13:03,290 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:13:03,290 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:13:03,294 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:13:03,294 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 01:13:03,295 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:13:03,295 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:13,874 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-01-30 01:14:13,876 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:14:13,876 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-01-30 01:14:13,876 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:14:13,877 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:13,878 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:14:13,878 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1)
2020-01-30 01:14:13,879 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:14:13,879 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:13,882 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:14:13,882 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-01-30 01:14:13,883 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:14:13,883 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:14:13,883 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:14:13,883 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:14:13,885 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:14:13,885 INFO sqlalchemy.engine.base.Engine Thread-22 : (63,)
2020-01-30 01:14:13,885 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:14:13,886 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:14:13,886 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:14:13,886 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:14:13,907 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:14:13,908 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-01-30 01:14:13,908 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:14:13,908 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:13,910 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-01-30 01:14:14,024 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 01:14:37,257 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-30 01:14:37,258 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:14:37,258 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-01-30 01:14:37,259 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:14:37,259 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:37,261 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:14:37,261 INFO sqlalchemy.engine.base.Engine Thread-29 : ('philip', 1)
2020-01-30 01:14:37,261 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:14:37,262 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:37,264 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:14:37,264 INFO sqlalchemy.engine.base.Engine Thread-29 : ()
2020-01-30 01:14:37,264 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:14:37,264 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:14:37,264 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:14:37,264 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:14:37,266 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:14:37,266 INFO sqlalchemy.engine.base.Engine Thread-29 : (63,)
2020-01-30 01:14:37,266 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:14:37,266 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:14:37,267 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:14:37,267 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:14:37,291 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:14:37,291 INFO sqlalchemy.engine.base.Engine Thread-29 : ('philip', 1, 1)
2020-01-30 01:14:37,291 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:14:37,292 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:14:37,294 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-30 01:15:20,283 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-30 01:15:20,284 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:15:20,284 INFO sqlalchemy.engine.base.Engine Thread-37 : (1, 1)
2020-01-30 01:15:20,285 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:15:20,286 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:15:20,287 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:15:20,287 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1)
2020-01-30 01:15:20,288 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:15:20,288 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:15:20,290 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:15:20,291 INFO sqlalchemy.engine.base.Engine Thread-37 : ()
2020-01-30 01:15:20,291 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:15:20,291 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:15:20,291 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:15:20,291 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:15:20,293 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:15:20,293 INFO sqlalchemy.engine.base.Engine Thread-37 : (63,)
2020-01-30 01:15:20,293 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:15:20,294 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:15:20,294 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:15:20,294 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:15:20,315 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:15:20,315 INFO sqlalchemy.engine.base.Engine Thread-37 : ('philip', 1, 1)
2020-01-30 01:15:20,316 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:15:20,316 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:15:20,318 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-30 01:15:40,453 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-01-30 01:15:40,454 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:15:40,454 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-01-30 01:15:40,455 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:15:40,455 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:15:40,457 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:15:40,457 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1)
2020-01-30 01:15:40,458 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:15:40,458 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:15:40,460 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:15:40,460 INFO sqlalchemy.engine.base.Engine Thread-45 : ()
2020-01-30 01:15:40,461 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:15:40,461 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:15:40,461 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:15:40,461 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:15:40,463 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:15:40,463 INFO sqlalchemy.engine.base.Engine Thread-45 : (63,)
2020-01-30 01:15:40,463 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:15:40,464 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:15:40,464 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:15:40,464 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:15:40,488 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:15:40,488 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-01-30 01:15:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:15:40,489 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:15:40,491 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-01-30 01:16:36,272 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:16:36,272 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,273 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:16:36,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:16:36,274 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:16:36,274 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:16:36,275 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:16:36,276 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:16:36,276 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,276 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:16:36,276 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:16:36,276 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:16:36,277 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,277 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:16:36,278 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:16:36,278 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:16:36,279 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,279 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:16:36,279 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,280 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:16:36,280 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,281 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:16:36,283 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:16:36,283 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:16:36,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:36,285 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:36,287 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:16:36,287 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,287 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:16:36,288 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:16:36,381 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:16:36,382 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:16:36,382 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:36,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:36,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:16:36,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:16:36,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:16:36,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:16:36,383 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:16:36,445 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:16:36,445 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:16:36,446 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:36,446 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:36,448 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:16:40,788 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:16:40,789 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:16:40,790 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:16:40,790 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:40,791 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:40,792 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:16:40,792 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:16:40,793 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:40,793 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:40,796 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:16:40,796 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:16:40,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:16:40,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:16:40,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:16:40,797 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:16:40,799 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:16:40,799 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:16:40,800 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:16:40,800 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:16:40,800 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:16:40,800 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:16:40,820 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:16:40,821 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:16:40,821 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:40,821 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:40,823 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 01:16:43,964 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:16:43,965 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:16:43,965 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:16:43,966 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:43,966 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:43,968 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:16:43,968 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 01:16:43,969 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:43,969 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:16:43,973 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:16:43,973 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:16:43,973 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:16:43,973 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:16:43,974 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:16:43,974 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:16:43,975 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:16:43,975 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 01:16:43,976 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:16:43,976 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:16:43,976 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:16:43,976 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:16:43,980 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:16:43,981 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 01:16:43,981 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:16:43,981 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:49,606 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:17:49,606 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,607 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:17:49,608 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:17:49,608 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:17:49,608 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,609 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:17:49,609 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:17:49,610 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:17:49,610 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:17:49,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:17:49,610 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:17:49,610 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,611 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:17:49,611 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:17:49,612 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:17:49,612 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,612 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:17:49,612 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,613 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:17:49,613 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,613 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:17:49,616 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:17:49,616 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:17:49,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:49,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:49,619 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:17:49,619 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:17:49,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:17:49,712 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:17:49,713 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:17:49,713 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:49,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:49,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:17:49,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:17:49,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:17:49,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:17:49,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:17:49,777 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:17:49,777 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:17:49,778 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:49,778 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:49,780 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:17:52,255 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:17:52,256 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:17:52,256 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:17:52,257 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:52,257 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:52,259 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:17:52,259 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:17:52,260 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:52,260 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:52,263 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:17:52,263 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:17:52,264 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:17:52,264 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:17:52,264 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:17:52,264 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:17:52,266 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:17:52,267 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:17:52,267 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:17:52,267 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:17:52,267 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:17:52,268 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:17:52,290 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:17:52,290 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:17:52,290 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:52,291 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:52,293 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 01:17:54,028 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:17:54,029 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:17:54,029 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:17:54,030 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:54,030 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:54,032 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:17:54,032 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 01:17:54,032 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:54,032 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:54,036 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:17:54,036 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:17:54,037 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:17:54,037 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:17:54,037 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:17:54,037 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:17:54,038 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:17:54,038 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 01:17:54,039 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:17:54,039 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:17:54,039 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:17:54,039 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:17:54,044 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:17:54,044 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 01:17:54,044 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:17:54,044 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:17:54,048 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 01:19:52,598 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:19:52,599 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,600 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:19:52,600 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:19:52,601 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:19:52,601 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,602 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:19:52,602 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:19:52,602 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:19:52,602 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,603 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:19:52,603 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:19:52,603 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:19:52,603 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,604 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:19:52,604 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:19:52,605 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:19:52,605 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,606 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:19:52,606 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,606 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:19:52,606 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,607 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:19:52,609 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:19:52,609 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:19:52,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:52,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:52,612 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:19:52,612 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,612 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:19:52,613 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:19:52,703 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:19:52,704 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:19:52,704 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:52,704 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:52,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:19:52,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:19:52,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:19:52,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:19:52,705 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:19:52,765 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:19:52,765 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:19:52,766 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:52,766 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:52,767 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:19:55,619 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:19:55,620 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:19:55,620 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:19:55,620 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:55,621 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:55,623 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:19:55,623 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:19:55,623 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:55,623 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:55,626 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:19:55,626 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:19:55,627 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:19:55,627 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:19:55,627 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:19:55,627 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:19:55,629 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:19:55,629 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:19:55,630 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:19:55,630 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:19:55,630 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:19:55,630 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:19:55,652 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:19:55,652 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:19:55,652 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:55,653 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:55,655 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 01:19:57,302 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:19:57,303 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:19:57,303 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:19:57,303 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:57,304 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:57,305 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:19:57,305 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 01:19:57,306 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:57,306 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:57,310 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:19:57,310 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:19:57,310 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:19:57,311 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:19:57,311 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:19:57,311 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:19:57,312 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:19:57,312 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 01:19:57,313 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:19:57,313 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:19:57,313 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:19:57,313 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:19:57,317 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:19:57,318 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 01:19:57,318 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:19:57,318 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:19:57,321 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 01:20:37,335 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:20:37,335 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:20:37,336 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:20:37,337 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:20:37,337 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,337 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:20:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:20:37,338 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:20:37,338 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:20:37,338 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:20:37,339 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:20:37,339 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:20:37,340 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:20:37,340 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:20:37,341 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,341 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:20:37,341 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,342 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:20:37,342 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,342 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:20:37,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:20:37,345 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:20:37,345 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:37,346 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:37,347 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:20:37,348 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,348 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:20:37,348 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:20:37,441 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:20:37,441 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:20:37,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:37,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:37,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:20:37,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:20:37,443 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:20:37,443 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:20:37,443 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:20:37,505 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:20:37,505 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:20:37,506 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:37,506 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:37,508 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:20:39,465 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:20:39,466 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:20:39,466 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:20:39,467 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:39,468 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:39,470 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:20:39,470 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:20:39,470 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:39,471 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:39,474 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:20:39,474 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:20:39,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:20:39,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:20:39,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:20:39,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:20:39,478 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:20:39,478 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:20:39,479 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:20:39,479 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:20:39,479 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:20:39,479 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:20:39,500 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:20:39,500 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 01:20:39,501 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:39,501 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:39,503 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 01:20:41,101 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 01:20:41,102 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:20:41,102 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 01:20:41,102 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:41,103 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:41,105 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:20:41,105 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 01:20:41,105 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:41,106 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:41,110 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:20:41,110 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 01:20:41,110 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:20:41,111 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:20:41,111 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:20:41,111 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:20:41,112 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:20:41,112 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 01:20:41,113 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:20:41,113 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:20:41,113 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:20:41,113 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:20:41,117 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 01:20:52,094 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 01:20:52,095 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:20:52,095 INFO sqlalchemy.engine.base.Engine Thread-23 : (1, 1)
2020-01-30 01:20:52,096 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:52,096 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:52,097 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:20:52,097 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-01-30 01:20:52,098 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:20:52,098 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:20:52,197 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:20:52,198 INFO sqlalchemy.engine.base.Engine Thread-23 : ()
2020-01-30 01:20:52,198 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:52,199 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:52,199 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:20:52,199 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:20:52,199 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:20:52,199 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:20:52,199 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:20:52,204 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:20:52,204 INFO sqlalchemy.engine.base.Engine Thread-23 : ('philip', 1, 1)
2020-01-30 01:20:52,204 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:20:52,208 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:20:52,210 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 01:21:30,269 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 01:21:30,270 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,271 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:21:30,271 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 01:21:30,272 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 01:21:30,272 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,272 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 01:21:30,272 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 01:21:30,273 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 01:21:30,273 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,273 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 01:21:30,273 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 01:21:30,273 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 01:21:30,273 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 01:21:30,274 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 01:21:30,275 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 01:21:30,275 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,276 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 01:21:30,276 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,276 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 01:21:30,276 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,277 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 01:21:30,279 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:30,279 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 01:21:30,280 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:30,281 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:30,283 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:21:30,283 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1)
2020-01-30 01:21:30,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:30,284 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:30,287 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:21:30,287 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 01:21:30,288 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:21:30,288 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:21:30,288 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:21:30,288 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:21:30,291 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:21:30,291 INFO sqlalchemy.engine.base.Engine Thread-2 : (63,)
2020-01-30 01:21:30,291 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:21:30,291 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:21:30,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:21:30,292 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:21:30,365 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:21:30,365 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 01:21:30,366 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:30,366 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:30,369 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 01:21:32,130 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 01:21:32,131 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:32,132 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 01:21:32,132 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:32,133 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:32,135 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:21:32,135 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 01:21:32,136 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:32,136 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:32,140 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:21:32,140 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 01:21:32,140 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:21:32,141 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:21:32,141 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:21:32,141 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:21:32,142 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:21:32,142 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 01:21:32,143 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:21:32,143 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:21:32,143 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:21:32,143 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:21:32,145 INFO sqlalchemy.engine.base.Engine Thread-9 : UPDATE users SET vendor=%s WHERE users.id = %s
2020-01-30 01:21:32,145 INFO sqlalchemy.engine.base.Engine Thread-9 : ('64', 1)
2020-01-30 01:21:32,146 INFO sqlalchemy.engine.base.Engine Thread-9 : COMMIT
2020-01-30 01:21:32,256 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 01:21:32,257 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:32,258 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 01:21:32,258 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:32,259 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:32,261 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:21:32,261 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 01:21:32,261 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:21:32,262 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:21:32,361 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:21:32,361 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 01:21:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:21:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:21:32,362 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:21:32,363 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:21:32,363 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:21:32,372 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:21:32,372 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 01:21:32,373 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:32,373 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:32,375 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 01:21:37,305 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 01:21:37,306 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:37,306 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-30 01:21:37,307 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:37,307 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:37,309 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:21:37,309 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1)
2020-01-30 01:21:37,310 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:37,310 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:37,312 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:21:37,313 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 01:21:37,313 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:21:37,313 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:21:37,313 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:21:37,313 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:21:37,315 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:21:37,315 INFO sqlalchemy.engine.base.Engine Thread-17 : (63,)
2020-01-30 01:21:37,315 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:21:37,316 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:21:37,316 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:21:37,316 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:21:37,320 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:21:37,320 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-30 01:21:37,321 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:37,321 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:37,323 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 01:21:48,316 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 01:21:48,317 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:48,317 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-30 01:21:48,318 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:48,318 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:48,320 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:21:48,320 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1)
2020-01-30 01:21:48,321 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:48,321 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:48,323 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:21:48,324 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-01-30 01:21:48,324 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:21:48,324 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:21:48,324 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:21:48,325 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:21:48,326 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:21:48,326 INFO sqlalchemy.engine.base.Engine Thread-24 : (63,)
2020-01-30 01:21:48,327 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:21:48,327 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:21:48,327 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:21:48,327 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:21:48,333 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:21:48,333 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-30 01:21:48,334 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:48,334 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:48,337 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 01:21:51,600 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 01:21:51,601 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:51,601 INFO sqlalchemy.engine.base.Engine Thread-31 : (1, 1)
2020-01-30 01:21:51,601 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:51,602 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:51,603 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:21:51,603 INFO sqlalchemy.engine.base.Engine Thread-31 : ()
2020-01-30 01:21:51,603 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:21:51,604 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:21:51,696 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:21:51,696 INFO sqlalchemy.engine.base.Engine Thread-31 : ()
2020-01-30 01:21:51,697 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:51,697 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:51,697 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:21:51,697 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:21:51,698 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:21:51,698 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:21:51,698 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:21:51,702 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:21:51,702 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip', 1, 1)
2020-01-30 01:21:51,703 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:51,703 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:51,705 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-30 01:21:54,584 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-01-30 01:21:54,585 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:21:54,585 INFO sqlalchemy.engine.base.Engine Thread-38 : (1, 1)
2020-01-30 01:21:54,586 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:54,586 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:54,588 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:21:54,589 INFO sqlalchemy.engine.base.Engine Thread-38 : ('philip', 1)
2020-01-30 01:21:54,589 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:54,589 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:54,592 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:21:54,592 INFO sqlalchemy.engine.base.Engine Thread-38 : ()
2020-01-30 01:21:54,592 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:21:54,592 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:21:54,593 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:21:54,593 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:21:54,594 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:21:54,594 INFO sqlalchemy.engine.base.Engine Thread-38 : (63,)
2020-01-30 01:21:54,595 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:21:54,595 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:21:54,595 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:21:54,595 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:21:54,599 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:21:54,599 INFO sqlalchemy.engine.base.Engine Thread-38 : ('philip', 1, 1)
2020-01-30 01:21:54,600 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:21:54,600 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:21:54,602 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-01-30 01:23:46,901 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-01-30 01:23:46,902 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:23:46,902 INFO sqlalchemy.engine.base.Engine Thread-45 : (1, 1)
2020-01-30 01:23:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:46,904 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:46,906 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:23:46,906 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1)
2020-01-30 01:23:46,907 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:46,907 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:46,909 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:23:46,909 INFO sqlalchemy.engine.base.Engine Thread-45 : ()
2020-01-30 01:23:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:23:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:23:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:23:46,910 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:23:46,911 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:23:46,912 INFO sqlalchemy.engine.base.Engine Thread-45 : (63,)
2020-01-30 01:23:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:23:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:23:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:23:46,912 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:23:46,935 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:23:46,935 INFO sqlalchemy.engine.base.Engine Thread-45 : ('philip', 1, 1)
2020-01-30 01:23:46,936 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:46,936 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:46,939 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-01-30 01:23:50,687 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-01-30 01:23:50,688 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:23:50,688 INFO sqlalchemy.engine.base.Engine Thread-53 : (1, 1)
2020-01-30 01:23:50,689 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:50,689 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:50,690 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:23:50,691 INFO sqlalchemy.engine.base.Engine Thread-53 : ()
2020-01-30 01:23:50,691 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:23:50,691 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:23:50,783 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:23:50,783 INFO sqlalchemy.engine.base.Engine Thread-53 : ()
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:23:50,784 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:23:50,788 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:23:50,788 INFO sqlalchemy.engine.base.Engine Thread-53 : ('philip', 1, 1)
2020-01-30 01:23:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:50,789 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:50,791 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-01-30 01:23:53,139 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-01-30 01:23:53,140 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:23:53,140 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-01-30 01:23:53,141 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:53,142 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:53,144 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:23:53,144 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1)
2020-01-30 01:23:53,145 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:53,145 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:53,147 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:23:53,147 INFO sqlalchemy.engine.base.Engine Thread-60 : ()
2020-01-30 01:23:53,148 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:23:53,148 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:23:53,148 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:23:53,148 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:23:53,150 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:23:53,150 INFO sqlalchemy.engine.base.Engine Thread-60 : (63,)
2020-01-30 01:23:53,151 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:23:53,151 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:23:53,151 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:23:53,151 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:23:53,156 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:23:53,156 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1, 1)
2020-01-30 01:23:53,156 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:53,157 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:53,159 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-01-30 01:23:55,363 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-01-30 01:23:55,364 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:23:55,364 INFO sqlalchemy.engine.base.Engine Thread-67 : (1, 1)
2020-01-30 01:23:55,365 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:55,365 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:55,366 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:23:55,366 INFO sqlalchemy.engine.base.Engine Thread-67 : ()
2020-01-30 01:23:55,367 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:23:55,367 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:23:55,463 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:23:55,463 INFO sqlalchemy.engine.base.Engine Thread-67 : ()
2020-01-30 01:23:55,464 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:55,464 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:55,464 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:23:55,464 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:23:55,465 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:23:55,465 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:23:55,465 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:23:55,469 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:23:55,469 INFO sqlalchemy.engine.base.Engine Thread-67 : ('philip', 1, 1)
2020-01-30 01:23:55,470 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:23:55,471 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:23:55,472 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-01-30 01:24:09,033 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-30 01:24:09,034 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:24:09,034 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-01-30 01:24:09,035 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:09,035 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:09,037 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:24:09,037 INFO sqlalchemy.engine.base.Engine Thread-74 : ('philip', 1)
2020-01-30 01:24:09,037 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:09,038 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:09,039 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:24:09,040 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-01-30 01:24:09,040 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:24:09,040 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:24:09,040 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:24:09,040 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:24:09,042 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:24:09,042 INFO sqlalchemy.engine.base.Engine Thread-74 : (63,)
2020-01-30 01:24:09,042 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:24:09,043 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:24:09,043 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:24:09,043 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:24:09,046 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:24:09,047 INFO sqlalchemy.engine.base.Engine Thread-74 : ('philip', 1, 1)
2020-01-30 01:24:09,047 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:09,047 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:09,049 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-30 01:24:51,445 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-01-30 01:24:51,446 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:24:51,446 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-01-30 01:24:51,447 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:51,448 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:51,449 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:24:51,449 INFO sqlalchemy.engine.base.Engine Thread-81 : ('philip', 1)
2020-01-30 01:24:51,450 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:51,450 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:51,453 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:24:51,453 INFO sqlalchemy.engine.base.Engine Thread-81 : ()
2020-01-30 01:24:51,453 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:24:51,453 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:24:51,453 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:24:51,453 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:24:51,455 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:24:51,455 INFO sqlalchemy.engine.base.Engine Thread-81 : (63,)
2020-01-30 01:24:51,455 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:24:51,455 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:24:51,455 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:24:51,456 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:24:51,457 INFO sqlalchemy.engine.base.Engine Thread-81 : UPDATE users SET vendor=%s WHERE users.id = %s
2020-01-30 01:24:51,457 INFO sqlalchemy.engine.base.Engine Thread-81 : ('70', 1)
2020-01-30 01:24:51,458 INFO sqlalchemy.engine.base.Engine Thread-81 : COMMIT
2020-01-30 01:24:51,563 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-01-30 01:24:51,564 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:24:51,564 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-01-30 01:24:51,565 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:51,565 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:51,566 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:24:51,566 INFO sqlalchemy.engine.base.Engine Thread-82 : ()
2020-01-30 01:24:51,566 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:24:51,567 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:24:51,658 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:24:51,658 INFO sqlalchemy.engine.base.Engine Thread-82 : ()
2020-01-30 01:24:51,659 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:51,659 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:51,659 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:24:51,659 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:24:51,659 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:24:51,660 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:24:51,660 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:24:51,664 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:24:51,664 INFO sqlalchemy.engine.base.Engine Thread-82 : ('philip', 1, 1)
2020-01-30 01:24:51,664 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:51,665 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:51,667 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-01-30 01:24:55,234 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-01-30 01:24:55,235 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:24:55,236 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-01-30 01:24:55,237 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:55,237 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:55,239 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:24:55,239 INFO sqlalchemy.engine.base.Engine Thread-89 : ('philip', 1, 1)
2020-01-30 01:24:55,240 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:55,240 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:55,257 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:24:55,257 INFO sqlalchemy.engine.base.Engine Thread-89 : ('philip', 1, 1)
2020-01-30 01:24:55,257 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:24:55,258 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:24:55,260 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 01:24:55,261 INFO sqlalchemy.engine.base.Engine Thread-89 : ()
2020-01-30 01:24:55,261 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:24:55,262 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:24:55,262 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0, 6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:24:55,262 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:24:55,262 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:24:55,262 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:24:55,262 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:24:55,264 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-01-30 01:25:07,407 INFO sqlalchemy.engine.base.Engine Thread-96 : BEGIN (implicit)
2020-01-30 01:25:07,408 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:07,408 INFO sqlalchemy.engine.base.Engine Thread-96 : (1, 1)
2020-01-30 01:25:07,410 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:07,410 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:07,412 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:07,412 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-01-30 01:25:07,413 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:07,414 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:07,415 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:07,416 INFO sqlalchemy.engine.base.Engine Thread-96 : ('2', 1)
2020-01-30 01:25:07,416 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:07,416 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:25:07,418 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:07,418 INFO sqlalchemy.engine.base.Engine Thread-96 : ()
2020-01-30 01:25:07,419 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:07,419 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:07,419 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:07,419 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:07,420 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:07,420 INFO sqlalchemy.engine.base.Engine Thread-96 : (63,)
2020-01-30 01:25:07,421 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:07,421 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:07,421 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:07,421 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:07,454 INFO sqlalchemy.engine.base.Engine Thread-96 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:07,454 INFO sqlalchemy.engine.base.Engine Thread-96 : ('philip', 1, 1)
2020-01-30 01:25:07,454 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:07,454 DEBUG sqlalchemy.engine.base.Engine Thread-96 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:07,457 INFO sqlalchemy.engine.base.Engine Thread-96 : ROLLBACK
2020-01-30 01:25:12,915 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-01-30 01:25:12,916 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:12,916 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-01-30 01:25:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:12,917 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:12,919 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:12,919 INFO sqlalchemy.engine.base.Engine Thread-103 : ('philip', 1, 1)
2020-01-30 01:25:12,920 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:12,920 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:12,922 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:12,922 INFO sqlalchemy.engine.base.Engine Thread-103 : ('2', 1)
2020-01-30 01:25:12,922 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:12,922 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:25:12,925 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:12,925 INFO sqlalchemy.engine.base.Engine Thread-103 : ()
2020-01-30 01:25:12,925 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:12,926 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:12,926 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:12,926 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:12,927 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:12,927 INFO sqlalchemy.engine.base.Engine Thread-103 : (63,)
2020-01-30 01:25:12,928 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:12,928 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:12,928 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:12,928 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:12,932 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:12,933 INFO sqlalchemy.engine.base.Engine Thread-103 : ('philip', 1, 1)
2020-01-30 01:25:12,933 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:12,933 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:12,937 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-01-30 01:25:24,477 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-01-30 01:25:24,478 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:24,478 INFO sqlalchemy.engine.base.Engine Thread-110 : (1, 1)
2020-01-30 01:25:24,479 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:24,479 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:24,481 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:24,481 INFO sqlalchemy.engine.base.Engine Thread-110 : ('philip', 1, 1)
2020-01-30 01:25:24,482 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:24,482 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:24,484 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:24,484 INFO sqlalchemy.engine.base.Engine Thread-110 : ('2', 1)
2020-01-30 01:25:24,484 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:24,485 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$SjOFE3rvjz4Jpn4MUa5T9uS3TeoAXcgNhhRJOa0xiu2sQh0ux7pAK', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 17, 8, 40, 54), datetime.datetime(2020, 1, 17, 8, 40, 54), 'philip', 0)
2020-01-30 01:25:24,488 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:24,488 INFO sqlalchemy.engine.base.Engine Thread-110 : ()
2020-01-30 01:25:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:24,488 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:24,490 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:24,490 INFO sqlalchemy.engine.base.Engine Thread-110 : (63,)
2020-01-30 01:25:24,491 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:24,491 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:24,491 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:24,491 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:24,820 INFO sqlalchemy.engine.base.Engine Thread-110 : UPDATE users SET id=%s, _password=%s, last_login=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-30 01:25:24,820 INFO sqlalchemy.engine.base.Engine Thread-110 : ('2', b'$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', None, datetime.datetime(2020, 1, 30, 1, 25, 24, 819202), '0', 2)
2020-01-30 01:25:24,821 INFO sqlalchemy.engine.base.Engine Thread-110 : COMMIT
2020-01-30 01:25:24,897 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-01-30 01:25:24,898 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:24,898 INFO sqlalchemy.engine.base.Engine Thread-111 : (1, 1)
2020-01-30 01:25:24,898 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:24,899 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:24,901 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:24,901 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-01-30 01:25:24,902 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:24,902 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:24,907 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:25:24,907 INFO sqlalchemy.engine.base.Engine Thread-111 : ('philip', 1, 1)
2020-01-30 01:25:24,908 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:24,908 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:24,911 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 01:25:24,911 INFO sqlalchemy.engine.base.Engine Thread-111 : ()
2020-01-30 01:25:24,912 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:24,912 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:24,912 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0, 6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:24,912 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:24,913 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:24,913 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:24,913 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:24,916 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-01-30 01:25:35,246 INFO sqlalchemy.engine.base.Engine Thread-118 : BEGIN (implicit)
2020-01-30 01:25:35,247 INFO sqlalchemy.engine.base.Engine Thread-118 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:25:35,247 INFO sqlalchemy.engine.base.Engine Thread-118 : (1, 1)
2020-01-30 01:25:35,248 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:35,248 DEBUG sqlalchemy.engine.base.Engine Thread-118 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:25:35,250 INFO sqlalchemy.engine.base.Engine Thread-118 : ROLLBACK
2020-01-30 01:25:35,471 INFO sqlalchemy.engine.base.Engine Thread-120 : BEGIN (implicit)
2020-01-30 01:25:35,472 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:35,472 INFO sqlalchemy.engine.base.Engine Thread-120 : ()
2020-01-30 01:25:35,473 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:35,473 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:35,473 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:35,473 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:35,475 INFO sqlalchemy.engine.base.Engine Thread-120 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:35,475 INFO sqlalchemy.engine.base.Engine Thread-120 : (63,)
2020-01-30 01:25:35,475 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:35,476 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:35,476 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:35,476 DEBUG sqlalchemy.engine.base.Engine Thread-120 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:35,487 INFO sqlalchemy.engine.base.Engine Thread-120 : ROLLBACK
2020-01-30 01:25:38,243 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-01-30 01:25:38,245 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:38,245 INFO sqlalchemy.engine.base.Engine Thread-122 : ()
2020-01-30 01:25:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:38,247 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:38,248 INFO sqlalchemy.engine.base.Engine Thread-122 : (63,)
2020-01-30 01:25:38,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:38,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:38,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:38,248 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:38,250 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:25:38,251 INFO sqlalchemy.engine.base.Engine Thread-122 : ('bob', 1)
2020-01-30 01:25:38,251 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:25:38,251 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0)
2020-01-30 01:25:38,253 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 01:25:38,253 INFO sqlalchemy.engine.base.Engine Thread-122 : (6, 1)
2020-01-30 01:25:38,253 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:38,254 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:38,574 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-01-30 01:25:53,186 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-01-30 01:25:53,187 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:53,187 INFO sqlalchemy.engine.base.Engine Thread-124 : ()
2020-01-30 01:25:53,187 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:53,188 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:53,188 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:53,188 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:53,189 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:53,189 INFO sqlalchemy.engine.base.Engine Thread-124 : (63,)
2020-01-30 01:25:53,190 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:53,190 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:53,190 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:53,190 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:53,216 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-01-30 01:25:55,364 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-01-30 01:25:55,365 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:55,365 INFO sqlalchemy.engine.base.Engine Thread-126 : ()
2020-01-30 01:25:55,366 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:55,366 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:55,366 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:55,366 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:55,368 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:55,368 INFO sqlalchemy.engine.base.Engine Thread-126 : (63,)
2020-01-30 01:25:55,368 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:55,369 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:55,369 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:55,369 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:55,373 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-01-30 01:25:58,715 INFO sqlalchemy.engine.base.Engine Thread-128 : BEGIN (implicit)
2020-01-30 01:25:58,715 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:25:58,715 INFO sqlalchemy.engine.base.Engine Thread-128 : ()
2020-01-30 01:25:58,716 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:25:58,716 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:25:58,716 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:25:58,716 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:25:58,718 INFO sqlalchemy.engine.base.Engine Thread-128 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:25:58,718 INFO sqlalchemy.engine.base.Engine Thread-128 : (63,)
2020-01-30 01:25:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:25:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:25:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:25:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-128 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:25:58,720 INFO sqlalchemy.engine.base.Engine Thread-128 : ROLLBACK
2020-01-30 01:26:01,102 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-01-30 01:26:01,103 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:01,103 INFO sqlalchemy.engine.base.Engine Thread-130 : ()
2020-01-30 01:26:01,103 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:01,104 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:01,104 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:01,104 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:01,105 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:01,105 INFO sqlalchemy.engine.base.Engine Thread-130 : (63,)
2020-01-30 01:26:01,106 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:01,106 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:01,106 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:01,106 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:01,108 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-01-30 01:26:04,065 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-01-30 01:26:04,066 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:04,066 INFO sqlalchemy.engine.base.Engine Thread-133 : ()
2020-01-30 01:26:04,067 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:04,067 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:04,067 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:04,067 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:04,068 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:04,069 INFO sqlalchemy.engine.base.Engine Thread-133 : (63,)
2020-01-30 01:26:04,069 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:04,069 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:04,069 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:04,069 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:04,071 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:26:04,071 INFO sqlalchemy.engine.base.Engine Thread-133 : ('bob', 1)
2020-01-30 01:26:04,072 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:04,072 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0)
2020-01-30 01:26:04,073 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 01:26:04,073 INFO sqlalchemy.engine.base.Engine Thread-133 : (6, 1)
2020-01-30 01:26:04,074 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:04,074 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:04,389 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-01-30 01:26:08,343 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-01-30 01:26:08,344 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:08,344 INFO sqlalchemy.engine.base.Engine Thread-135 : ()
2020-01-30 01:26:08,344 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:08,345 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:08,345 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:08,345 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:08,346 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:08,346 INFO sqlalchemy.engine.base.Engine Thread-135 : (63,)
2020-01-30 01:26:08,347 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:08,347 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:08,347 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:08,347 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:08,349 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:26:08,349 INFO sqlalchemy.engine.base.Engine Thread-135 : ('philip', 1)
2020-01-30 01:26:08,349 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:08,350 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:08,351 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 01:26:08,351 INFO sqlalchemy.engine.base.Engine Thread-135 : (2, 1)
2020-01-30 01:26:08,351 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:08,352 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:08,685 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-01-30 01:26:08,764 INFO sqlalchemy.engine.base.Engine Thread-136 : BEGIN (implicit)
2020-01-30 01:26:08,765 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:08,765 INFO sqlalchemy.engine.base.Engine Thread-136 : (1, 1)
2020-01-30 01:26:08,766 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:08,766 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:08,767 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:26:08,767 INFO sqlalchemy.engine.base.Engine Thread-136 : ()
2020-01-30 01:26:08,767 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:26:08,768 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:26:08,861 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:26:08,861 INFO sqlalchemy.engine.base.Engine Thread-136 : ()
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0)
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:26:08,862 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:26:08,866 INFO sqlalchemy.engine.base.Engine Thread-136 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:08,866 INFO sqlalchemy.engine.base.Engine Thread-136 : ('philip', 1, 1)
2020-01-30 01:26:08,867 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:08,867 DEBUG sqlalchemy.engine.base.Engine Thread-136 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:08,870 INFO sqlalchemy.engine.base.Engine Thread-136 : ROLLBACK
2020-01-30 01:26:12,013 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-01-30 01:26:12,014 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:12,014 INFO sqlalchemy.engine.base.Engine Thread-143 : (1, 1)
2020-01-30 01:26:12,015 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:12,015 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:12,017 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:12,017 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-01-30 01:26:12,018 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:12,018 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:12,023 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:12,023 INFO sqlalchemy.engine.base.Engine Thread-143 : ('philip', 1, 1)
2020-01-30 01:26:12,024 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:12,024 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:12,027 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 01:26:12,027 INFO sqlalchemy.engine.base.Engine Thread-143 : ()
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0, 6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:12,028 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:12,030 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-01-30 01:26:13,809 INFO sqlalchemy.engine.base.Engine Thread-150 : BEGIN (implicit)
2020-01-30 01:26:13,810 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:13,810 INFO sqlalchemy.engine.base.Engine Thread-150 : (1, 1)
2020-01-30 01:26:13,811 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:13,811 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:13,813 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:13,813 INFO sqlalchemy.engine.base.Engine Thread-150 : ('philip', 1, 1)
2020-01-30 01:26:13,814 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:13,814 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:13,816 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:13,816 INFO sqlalchemy.engine.base.Engine Thread-150 : ('2', 1)
2020-01-30 01:26:13,816 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:13,816 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0)
2020-01-30 01:26:13,818 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:13,818 INFO sqlalchemy.engine.base.Engine Thread-150 : ()
2020-01-30 01:26:13,819 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:13,819 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:13,819 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:13,819 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:13,820 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:13,821 INFO sqlalchemy.engine.base.Engine Thread-150 : (63,)
2020-01-30 01:26:13,821 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:13,821 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:13,821 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:13,821 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:13,826 INFO sqlalchemy.engine.base.Engine Thread-150 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:13,826 INFO sqlalchemy.engine.base.Engine Thread-150 : ('philip', 1, 1)
2020-01-30 01:26:13,827 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:13,827 DEBUG sqlalchemy.engine.base.Engine Thread-150 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:13,830 INFO sqlalchemy.engine.base.Engine Thread-150 : ROLLBACK
2020-01-30 01:26:17,495 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-01-30 01:26:17,497 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:17,497 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-01-30 01:26:17,498 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:17,498 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:17,501 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:17,501 INFO sqlalchemy.engine.base.Engine Thread-157 : ('philip', 1, 1)
2020-01-30 01:26:17,501 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:17,502 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:17,503 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:17,503 INFO sqlalchemy.engine.base.Engine Thread-157 : ('2', 1)
2020-01-30 01:26:17,504 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:17,504 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 6, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 25, 24), 'philip', 0)
2020-01-30 01:26:17,508 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:17,508 INFO sqlalchemy.engine.base.Engine Thread-157 : ()
2020-01-30 01:26:17,509 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:17,510 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:17,510 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:17,510 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:17,511 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:17,511 INFO sqlalchemy.engine.base.Engine Thread-157 : (63,)
2020-01-30 01:26:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:17,512 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:17,513 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:17,515 INFO sqlalchemy.engine.base.Engine Thread-157 : UPDATE users SET id=%s, `role`=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-30 01:26:17,515 INFO sqlalchemy.engine.base.Engine Thread-157 : ('2', 1, datetime.datetime(2020, 1, 30, 1, 26, 17, 514109), '0', 2)
2020-01-30 01:26:17,516 INFO sqlalchemy.engine.base.Engine Thread-157 : COMMIT
2020-01-30 01:26:17,578 INFO sqlalchemy.engine.base.Engine Thread-158 : BEGIN (implicit)
2020-01-30 01:26:17,579 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:17,579 INFO sqlalchemy.engine.base.Engine Thread-158 : (1, 1)
2020-01-30 01:26:17,580 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:17,580 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:17,582 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:17,583 INFO sqlalchemy.engine.base.Engine Thread-158 : ('philip', 1, 1)
2020-01-30 01:26:17,583 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:17,584 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:17,588 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:17,588 INFO sqlalchemy.engine.base.Engine Thread-158 : ('philip', 1, 1)
2020-01-30 01:26:17,589 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:17,589 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:17,592 INFO sqlalchemy.engine.base.Engine Thread-158 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 01:26:17,592 INFO sqlalchemy.engine.base.Engine Thread-158 : ()
2020-01-30 01:26:17,593 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:17,594 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:17,594 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:17,594 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:17,594 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:17,594 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:17,595 DEBUG sqlalchemy.engine.base.Engine Thread-158 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:17,598 INFO sqlalchemy.engine.base.Engine Thread-158 : ROLLBACK
2020-01-30 01:26:21,056 INFO sqlalchemy.engine.base.Engine Thread-165 : BEGIN (implicit)
2020-01-30 01:26:21,057 INFO sqlalchemy.engine.base.Engine Thread-165 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:21,057 INFO sqlalchemy.engine.base.Engine Thread-165 : (1, 1)
2020-01-30 01:26:21,058 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:21,058 DEBUG sqlalchemy.engine.base.Engine Thread-165 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:21,060 INFO sqlalchemy.engine.base.Engine Thread-165 : ROLLBACK
2020-01-30 01:26:21,231 INFO sqlalchemy.engine.base.Engine Thread-167 : BEGIN (implicit)
2020-01-30 01:26:21,232 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:21,232 INFO sqlalchemy.engine.base.Engine Thread-167 : ()
2020-01-30 01:26:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:21,233 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:21,235 INFO sqlalchemy.engine.base.Engine Thread-167 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:21,235 INFO sqlalchemy.engine.base.Engine Thread-167 : (63,)
2020-01-30 01:26:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:21,236 DEBUG sqlalchemy.engine.base.Engine Thread-167 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:21,237 INFO sqlalchemy.engine.base.Engine Thread-167 : ROLLBACK
2020-01-30 01:26:24,387 INFO sqlalchemy.engine.base.Engine Thread-169 : BEGIN (implicit)
2020-01-30 01:26:24,388 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:24,388 INFO sqlalchemy.engine.base.Engine Thread-169 : ()
2020-01-30 01:26:24,388 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:24,388 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:24,389 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:24,389 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:24,390 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:24,390 INFO sqlalchemy.engine.base.Engine Thread-169 : (63,)
2020-01-30 01:26:24,391 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:24,391 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:24,391 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:24,391 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:24,393 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 01:26:24,393 INFO sqlalchemy.engine.base.Engine Thread-169 : ('bob', 1)
2020-01-30 01:26:24,393 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:24,393 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 01:26:24,395 INFO sqlalchemy.engine.base.Engine Thread-169 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 01:26:24,395 INFO sqlalchemy.engine.base.Engine Thread-169 : (1, 1)
2020-01-30 01:26:24,395 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:24,395 DEBUG sqlalchemy.engine.base.Engine Thread-169 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:24,703 INFO sqlalchemy.engine.base.Engine Thread-169 : ROLLBACK
2020-01-30 01:26:24,769 INFO sqlalchemy.engine.base.Engine Thread-170 : BEGIN (implicit)
2020-01-30 01:26:24,770 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:24,770 INFO sqlalchemy.engine.base.Engine Thread-170 : (2, 1)
2020-01-30 01:26:24,771 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:24,771 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 01:26:24,772 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 01:26:24,772 INFO sqlalchemy.engine.base.Engine Thread-170 : ()
2020-01-30 01:26:24,773 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 01:26:24,773 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 01:26:24,862 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 01:26:24,862 INFO sqlalchemy.engine.base.Engine Thread-170 : ()
2020-01-30 01:26:24,863 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:24,863 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 01:26:24,863 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 01:26:24,863 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 01:26:24,863 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 01:26:24,863 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 01:26:24,864 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 01:26:24,869 INFO sqlalchemy.engine.base.Engine Thread-170 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 01:26:24,869 INFO sqlalchemy.engine.base.Engine Thread-170 : ('bob', 1, 1)
2020-01-30 01:26:24,870 DEBUG sqlalchemy.engine.base.Engine Thread-170 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:24,872 INFO sqlalchemy.engine.base.Engine Thread-170 : ROLLBACK
2020-01-30 01:26:29,711 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-01-30 01:26:29,712 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 01:26:29,712 INFO sqlalchemy.engine.base.Engine Thread-177 : (2, 1)
2020-01-30 01:26:29,713 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 01:26:29,714 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 01:26:29,716 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-01-30 01:26:29,850 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-01-30 01:26:29,851 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 01:26:29,851 INFO sqlalchemy.engine.base.Engine Thread-179 : ()
2020-01-30 01:26:29,851 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 01:26:29,852 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 01:26:29,852 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 01:26:29,852 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 01:26:29,853 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 01:26:29,853 INFO sqlalchemy.engine.base.Engine Thread-179 : (63,)
2020-01-30 01:26:29,854 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 01:26:29,854 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 01:26:29,854 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 01:26:29,854 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 01:26:29,856 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-01-30 08:36:54,411 INFO sqlalchemy.engine.base.Engine Thread-186 : BEGIN (implicit)
2020-01-30 08:36:54,412 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:36:54,412 INFO sqlalchemy.engine.base.Engine Thread-186 : ()
2020-01-30 08:36:54,413 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:36:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:36:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:36:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:36:54,416 INFO sqlalchemy.engine.base.Engine Thread-186 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:36:54,416 INFO sqlalchemy.engine.base.Engine Thread-186 : (63,)
2020-01-30 08:36:54,416 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:36:54,417 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:36:54,417 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:36:54,417 DEBUG sqlalchemy.engine.base.Engine Thread-186 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:36:54,420 INFO sqlalchemy.engine.base.Engine Thread-186 : ROLLBACK
2020-01-30 08:36:57,579 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-01-30 08:36:57,579 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:36:57,580 INFO sqlalchemy.engine.base.Engine Thread-188 : ()
2020-01-30 08:36:57,580 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:36:57,580 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:36:57,581 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:36:57,581 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:36:57,582 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:36:57,582 INFO sqlalchemy.engine.base.Engine Thread-188 : (63,)
2020-01-30 08:36:57,583 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:36:57,583 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:36:57,583 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:36:57,583 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:36:57,585 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:36:57,585 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1)
2020-01-30 08:36:57,586 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:36:57,586 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:36:57,587 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 08:36:57,587 INFO sqlalchemy.engine.base.Engine Thread-188 : (2, 1)
2020-01-30 08:36:57,588 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:36:57,588 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:36:57,898 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-01-30 08:36:58,022 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-01-30 08:36:58,023 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:36:58,023 INFO sqlalchemy.engine.base.Engine Thread-189 : (1, 1)
2020-01-30 08:36:58,024 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:36:58,024 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:36:58,025 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:36:58,025 INFO sqlalchemy.engine.base.Engine Thread-189 : ()
2020-01-30 08:36:58,026 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:36:58,026 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:36:58,123 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:36:58,123 INFO sqlalchemy.engine.base.Engine Thread-189 : ()
2020-01-30 08:36:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:36:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:36:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:36:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:36:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:36:58,124 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:36:58,125 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:36:58,129 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:36:58,129 INFO sqlalchemy.engine.base.Engine Thread-189 : ('philip', 1, 1)
2020-01-30 08:36:58,129 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:36:58,130 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:36:58,132 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-01-30 08:37:02,837 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-01-30 08:37:02,838 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:37:02,838 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-01-30 08:37:02,839 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:37:02,839 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:37:02,842 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:37:02,842 INFO sqlalchemy.engine.base.Engine Thread-210 : ('philip', 1, 1)
2020-01-30 08:37:02,842 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:37:02,843 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:37:02,845 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:37:02,845 INFO sqlalchemy.engine.base.Engine Thread-210 : (0,)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (109, 'Booking Parameters', 'Core booking parameters that define rules for how many bookings can be achieved ', 0, 0, 0, 1)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (97, 'Cluster Type', 'Cluster Type', 0, 0, 0, 0)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (100, 'Complex Type', 'Complex Type', 0, 0, 0, 1)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (92, 'Environments', 'Environments', 0, 0, 0, 0)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (2, 'Firewall Managers', 'Firewall Managers', 0, 0, 0, 1)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (89, 'Firewall Type', 'Firewall Type', 0, 0, 0, 1)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (3, 'Hours', 'Hours', 0, 0, 0, 1)
2020-01-30 08:37:02,846 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'Locations', 'Locations', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (78, 'Log Entries', 'Log Entries', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (75, 'Log File Options', 'Log File Options', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (4, 'Minutes', 'Minutes', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (82, 'Priority', 'Priority', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (71, 'Search Categories', 'Search Categories', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (63, 'Vendors', 'Vendors', 0, 0, 0, 1)
2020-01-30 08:37:02,847 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (105, 'Yes/No Answers', 'Yes or No for answering options as a select list', 0, 0, 0, 1)
2020-01-30 08:37:02,849 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name ASC 
 LIMIT %s
2020-01-30 08:37:02,849 INFO sqlalchemy.engine.base.Engine Thread-210 : (0, 1)
2020-01-30 08:37:02,849 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:37:02,850 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (66, 'Active Options', 'Active Options', 0, 0, 0, 1)
2020-01-30 08:37:02,851 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s 
 LIMIT %s, %s
2020-01-30 08:37:02,851 INFO sqlalchemy.engine.base.Engine Thread-210 : (66, 0, 20)
2020-01-30 08:37:02,851 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:37:02,851 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 08:37:02,851 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-30 08:37:02,876 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:37:02,876 INFO sqlalchemy.engine.base.Engine Thread-210 : ('philip', 1, 1)
2020-01-30 08:37:02,877 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:37:02,877 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:37:02,880 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-01-30 08:38:31,212 INFO sqlalchemy.engine.base.Engine Thread-217 : BEGIN (implicit)
2020-01-30 08:38:31,213 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:38:31,213 INFO sqlalchemy.engine.base.Engine Thread-217 : (1, 1)
2020-01-30 08:38:31,214 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:38:31,215 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:38:31,216 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:38:31,216 INFO sqlalchemy.engine.base.Engine Thread-217 : ('philip', 1)
2020-01-30 08:38:31,217 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:38:31,217 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:38:31,220 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:38:31,220 INFO sqlalchemy.engine.base.Engine Thread-217 : ()
2020-01-30 08:38:31,221 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:38:31,221 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:38:31,221 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:38:31,221 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:38:31,223 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:38:31,223 INFO sqlalchemy.engine.base.Engine Thread-217 : (63,)
2020-01-30 08:38:31,223 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:38:31,223 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:38:31,223 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:38:31,224 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:38:31,246 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:38:31,246 INFO sqlalchemy.engine.base.Engine Thread-217 : ('philip', 1, 1)
2020-01-30 08:38:31,247 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:38:31,247 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:38:31,249 INFO sqlalchemy.engine.base.Engine Thread-217 : ROLLBACK
2020-01-30 08:40:02,175 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-01-30 08:40:02,176 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:40:02,176 INFO sqlalchemy.engine.base.Engine Thread-224 : (1, 1)
2020-01-30 08:40:02,178 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:02,178 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:02,179 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:40:02,180 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1)
2020-01-30 08:40:02,180 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:02,180 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:02,182 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:40:02,183 INFO sqlalchemy.engine.base.Engine Thread-224 : ()
2020-01-30 08:40:02,183 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:40:02,183 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:40:02,183 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:40:02,183 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:40:02,185 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:40:02,185 INFO sqlalchemy.engine.base.Engine Thread-224 : (63,)
2020-01-30 08:40:02,185 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:40:02,185 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:40:02,185 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:40:02,185 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:40:02,212 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:40:02,212 INFO sqlalchemy.engine.base.Engine Thread-224 : ('philip', 1, 1)
2020-01-30 08:40:02,213 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:02,213 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:02,215 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-01-30 08:40:17,574 INFO sqlalchemy.engine.base.Engine Thread-232 : BEGIN (implicit)
2020-01-30 08:40:17,575 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:40:17,575 INFO sqlalchemy.engine.base.Engine Thread-232 : (1, 1)
2020-01-30 08:40:17,576 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:17,576 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:17,578 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:40:17,578 INFO sqlalchemy.engine.base.Engine Thread-232 : ('philip', 1)
2020-01-30 08:40:17,578 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:17,578 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:17,580 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:40:17,580 INFO sqlalchemy.engine.base.Engine Thread-232 : ()
2020-01-30 08:40:17,581 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:40:17,581 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:40:17,581 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:40:17,581 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:40:17,582 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:40:17,583 INFO sqlalchemy.engine.base.Engine Thread-232 : (63,)
2020-01-30 08:40:17,583 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:40:17,583 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:40:17,583 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:40:17,583 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:40:17,607 INFO sqlalchemy.engine.base.Engine Thread-232 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:40:17,607 INFO sqlalchemy.engine.base.Engine Thread-232 : ('philip', 1, 1)
2020-01-30 08:40:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:17,608 DEBUG sqlalchemy.engine.base.Engine Thread-232 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:17,610 INFO sqlalchemy.engine.base.Engine Thread-232 : ROLLBACK
2020-01-30 08:40:29,390 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-01-30 08:40:29,391 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:40:29,391 INFO sqlalchemy.engine.base.Engine Thread-240 : (1, 1)
2020-01-30 08:40:29,393 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:29,393 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:29,394 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:40:29,394 INFO sqlalchemy.engine.base.Engine Thread-240 : ('philip', 1)
2020-01-30 08:40:29,395 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:29,395 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:29,398 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:40:29,398 INFO sqlalchemy.engine.base.Engine Thread-240 : ()
2020-01-30 08:40:29,399 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:40:29,399 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:40:29,399 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:40:29,399 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:40:29,400 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:40:29,400 INFO sqlalchemy.engine.base.Engine Thread-240 : (63,)
2020-01-30 08:40:29,401 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:40:29,401 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:40:29,401 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:40:29,401 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:40:29,405 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:40:29,405 INFO sqlalchemy.engine.base.Engine Thread-240 : ('philip', 1, 1)
2020-01-30 08:40:29,406 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:29,407 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:29,410 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-01-30 08:40:39,057 INFO sqlalchemy.engine.base.Engine Thread-247 : BEGIN (implicit)
2020-01-30 08:40:39,058 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:40:39,058 INFO sqlalchemy.engine.base.Engine Thread-247 : (1, 1)
2020-01-30 08:40:39,059 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:39,059 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:39,061 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:40:39,061 INFO sqlalchemy.engine.base.Engine Thread-247 : ('philip', 1)
2020-01-30 08:40:39,061 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:39,062 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:39,064 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:40:39,064 INFO sqlalchemy.engine.base.Engine Thread-247 : ()
2020-01-30 08:40:39,065 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:40:39,065 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:40:39,065 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:40:39,065 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:40:39,066 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:40:39,066 INFO sqlalchemy.engine.base.Engine Thread-247 : (63,)
2020-01-30 08:40:39,067 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:40:39,067 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:40:39,067 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:40:39,067 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:40:39,071 INFO sqlalchemy.engine.base.Engine Thread-247 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:40:39,072 INFO sqlalchemy.engine.base.Engine Thread-247 : ('philip', 1, 1)
2020-01-30 08:40:39,072 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:40:39,073 DEBUG sqlalchemy.engine.base.Engine Thread-247 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:40:39,076 INFO sqlalchemy.engine.base.Engine Thread-247 : ROLLBACK
2020-01-30 08:50:49,895 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 08:50:49,896 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,897 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:50:49,898 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 08:50:49,898 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 08:50:49,898 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:50:49,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 08:50:49,899 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 08:50:49,899 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 08:50:49,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 08:50:49,900 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 08:50:49,900 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 08:50:49,901 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 08:50:49,902 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 08:50:49,902 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,903 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 08:50:49,903 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,903 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 08:50:49,903 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,904 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 08:50:49,906 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:50:49,906 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 08:50:49,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:49,907 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:49,909 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:50:49,909 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:49,910 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:50:49,910 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:50:50,011 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:50:50,011 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:50:50,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:50,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:50,012 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:50:50,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:50:50,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:50:50,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:50:50,013 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:50:50,074 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:50:50,075 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 08:50:50,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:50,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:50,077 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 08:50:54,115 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 08:50:54,116 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:50:54,116 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 08:50:54,117 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:54,117 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:54,120 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 08:50:54,286 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 08:50:54,287 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:50:54,287 INFO sqlalchemy.engine.base.Engine Thread-11 : ()
2020-01-30 08:50:54,288 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:50:54,288 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:50:54,288 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:50:54,288 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:50:54,291 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:50:54,291 INFO sqlalchemy.engine.base.Engine Thread-11 : (63,)
2020-01-30 08:50:54,292 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:50:54,292 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:50:54,292 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:50:54,292 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:50:54,303 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 08:50:58,271 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 08:50:58,272 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:50:58,272 INFO sqlalchemy.engine.base.Engine Thread-13 : ()
2020-01-30 08:50:58,273 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:50:58,273 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:50:58,273 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:50:58,273 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:50:58,275 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:50:58,275 INFO sqlalchemy.engine.base.Engine Thread-13 : (63,)
2020-01-30 08:50:58,275 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:50:58,276 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:50:58,276 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:50:58,276 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:50:58,277 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:50:58,277 INFO sqlalchemy.engine.base.Engine Thread-13 : ('philip', 1)
2020-01-30 08:50:58,278 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:58,278 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:58,279 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 08:50:58,280 INFO sqlalchemy.engine.base.Engine Thread-13 : (2, 1)
2020-01-30 08:50:58,280 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:50:58,280 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:50:58,600 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 08:50:58,717 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 08:50:58,718 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:50:58,718 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-01-30 08:50:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:58,719 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:58,720 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:50:58,720 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-01-30 08:50:58,721 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:50:58,721 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:50:58,819 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:50:58,819 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-01-30 08:50:58,820 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:58,820 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:58,820 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:50:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:50:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:50:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:50:58,821 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:50:58,826 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:50:58,826 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-01-30 08:50:58,826 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:50:58,827 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:50:58,829 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 08:51:02,277 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-30 08:51:02,278 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:51:02,278 INFO sqlalchemy.engine.base.Engine Thread-21 : (1, 1)
2020-01-30 08:51:02,279 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:51:02,279 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:51:02,281 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:51:02,281 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1)
2020-01-30 08:51:02,282 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:51:02,282 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:51:02,284 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:51:02,284 INFO sqlalchemy.engine.base.Engine Thread-21 : ()
2020-01-30 08:51:02,285 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:51:02,285 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:51:02,285 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:51:02,285 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:51:02,286 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:51:02,286 INFO sqlalchemy.engine.base.Engine Thread-21 : (63,)
2020-01-30 08:51:02,287 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:51:02,287 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:51:02,287 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:51:02,287 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:51:02,314 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:51:02,314 INFO sqlalchemy.engine.base.Engine Thread-21 : ('philip', 1, 1)
2020-01-30 08:51:02,315 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:51:02,315 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:51:02,317 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-30 08:51:06,123 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-01-30 08:51:06,124 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:51:06,124 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-01-30 08:51:06,125 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:51:06,126 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:51:06,127 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:51:06,128 INFO sqlalchemy.engine.base.Engine Thread-28 : ('philip', 1)
2020-01-30 08:51:06,128 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:51:06,129 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:51:06,132 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:51:06,132 INFO sqlalchemy.engine.base.Engine Thread-28 : ()
2020-01-30 08:51:06,133 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:51:06,133 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:51:06,133 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:51:06,134 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:51:06,135 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:51:06,135 INFO sqlalchemy.engine.base.Engine Thread-28 : (63,)
2020-01-30 08:51:06,136 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:51:06,136 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:51:06,136 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:51:06,136 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:51:06,141 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:51:06,141 INFO sqlalchemy.engine.base.Engine Thread-28 : ('philip', 1, 1)
2020-01-30 08:51:06,142 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:51:06,143 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:51:06,146 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-01-30 08:52:55,037 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-01-30 08:52:55,039 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:52:55,039 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-01-30 08:52:55,041 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:52:55,041 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:52:55,043 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:52:55,043 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1)
2020-01-30 08:52:55,044 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:52:55,044 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:52:55,047 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:52:55,047 INFO sqlalchemy.engine.base.Engine Thread-35 : ()
2020-01-30 08:52:55,048 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:52:55,048 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:52:55,048 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:52:55,048 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:52:55,049 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:52:55,049 INFO sqlalchemy.engine.base.Engine Thread-35 : (63,)
2020-01-30 08:52:55,050 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:52:55,050 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:52:55,050 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:52:55,050 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:52:55,055 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:52:55,055 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-01-30 08:52:55,055 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:52:55,056 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:52:55,059 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-01-30 08:53:37,525 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 08:53:37,525 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,527 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:53:37,527 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 08:53:37,528 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 08:53:37,528 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:53:37,528 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 08:53:37,529 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 08:53:37,529 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,529 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 08:53:37,529 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 08:53:37,529 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 08:53:37,530 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,530 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 08:53:37,530 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 08:53:37,531 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 08:53:37,531 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,532 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 08:53:37,532 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,533 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 08:53:37,533 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,540 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 08:53:37,542 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:53:37,542 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 08:53:37,543 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:37,543 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:37,545 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:53:37,545 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:53:37,546 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:53:37,658 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:53:37,658 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:53:37,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:37,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:37,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:53:37,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:53:37,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:53:37,660 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:53:37,660 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:53:37,726 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:53:37,726 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 08:53:37,727 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:37,727 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:37,729 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 08:53:39,883 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 08:53:39,884 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:53:39,884 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 08:53:39,886 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:39,886 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:39,888 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:53:39,888 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 08:53:39,888 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:39,889 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:39,892 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:53:39,892 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 08:53:39,892 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:53:39,892 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:53:39,893 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:53:39,893 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:53:39,895 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:53:39,895 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 08:53:39,895 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:53:39,896 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:53:39,896 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:53:39,896 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:53:39,920 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:53:39,920 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1, 1)
2020-01-30 08:53:39,921 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:39,921 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:39,923 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 08:53:41,865 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 08:53:41,866 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:53:41,867 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 08:53:41,867 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:41,867 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:41,869 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:53:41,869 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1)
2020-01-30 08:53:41,870 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:41,870 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:41,874 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:53:41,874 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 08:53:41,874 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:53:41,874 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:53:41,875 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:53:41,875 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:53:41,876 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:53:41,876 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 08:53:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:53:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:53:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:53:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:53:41,882 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:53:41,882 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 08:53:41,882 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:53:41,882 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:53:41,886 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 08:55:10,055 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 08:55:10,056 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,057 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:55:10,057 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 08:55:10,058 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 08:55:10,058 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,059 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:55:10,059 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 08:55:10,059 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 08:55:10,059 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,060 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 08:55:10,060 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 08:55:10,060 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 08:55:10,060 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,061 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 08:55:10,061 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 08:55:10,062 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 08:55:10,062 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,062 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 08:55:10,062 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,063 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 08:55:10,063 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,064 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 08:55:10,066 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:55:10,066 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 08:55:10,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:10,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:10,069 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:55:10,069 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,070 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:55:10,070 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:55:10,168 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:55:10,168 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:10,169 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:10,169 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:10,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:55:10,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:55:10,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:55:10,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:55:10,170 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:55:10,235 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:55:10,235 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 08:55:10,236 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:10,237 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:10,238 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 08:55:12,452 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 08:55:12,453 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:55:12,453 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 08:55:12,454 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:12,454 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:12,455 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:55:12,456 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1)
2020-01-30 08:55:12,456 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:12,456 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:12,460 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:55:12,460 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 08:55:12,460 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:55:12,461 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:55:12,461 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:55:12,461 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:55:12,463 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:55:12,463 INFO sqlalchemy.engine.base.Engine Thread-10 : (63,)
2020-01-30 08:55:12,464 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:55:12,464 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:55:12,464 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:55:12,464 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:55:12,488 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:55:12,488 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 08:55:12,489 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:12,489 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:12,491 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 08:55:14,165 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 08:55:14,166 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:55:14,166 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-30 08:55:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:14,167 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:14,169 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:55:14,169 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1)
2020-01-30 08:55:14,169 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:14,170 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:14,173 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:55:14,173 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 08:55:14,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:55:14,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:55:14,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:55:14,174 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:55:14,175 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:55:14,176 INFO sqlalchemy.engine.base.Engine Thread-17 : (63,)
2020-01-30 08:55:14,176 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:55:14,176 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:55:14,176 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:55:14,176 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:55:52,084 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 08:55:52,084 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,085 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:55:52,086 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 08:55:52,086 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 08:55:52,087 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,087 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:55:52,087 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 08:55:52,088 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 08:55:52,088 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 08:55:52,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 08:55:52,088 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 08:55:52,088 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,089 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 08:55:52,089 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 08:55:52,090 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 08:55:52,090 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,091 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 08:55:52,091 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,092 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 08:55:52,092 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,092 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 08:55:52,095 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:55:52,095 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 08:55:52,096 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:52,096 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:52,098 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:55:52,098 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1)
2020-01-30 08:55:52,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:52,099 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:52,102 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:55:52,102 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:55:52,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:55:52,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:55:52,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:55:52,103 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:55:52,105 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:55:52,105 INFO sqlalchemy.engine.base.Engine Thread-2 : (63,)
2020-01-30 08:55:52,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:55:52,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:55:52,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:55:52,106 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:55:52,183 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:55:52,184 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 08:55:52,184 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:52,184 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:52,187 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 08:55:53,915 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 08:55:53,916 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:55:53,916 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 08:55:53,916 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:53,917 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:53,919 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:55:53,919 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 08:55:53,919 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:55:53,920 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:55:53,923 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:55:53,924 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 08:55:53,924 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:55:53,924 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:55:53,924 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:55:53,925 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:55:53,926 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:55:53,926 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 08:55:53,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:55:53,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:55:53,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:55:53,928 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:33,599 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 08:56:33,599 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:56:33,601 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 08:56:33,602 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 08:56:33,602 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,602 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 08:56:33,602 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 08:56:33,603 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 08:56:33,603 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,603 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 08:56:33,603 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 08:56:33,604 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 08:56:33,604 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,604 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 08:56:33,604 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 08:56:33,605 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 08:56:33,605 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,606 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 08:56:33,606 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,607 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 08:56:33,607 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,607 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 08:56:33,609 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:33,610 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 08:56:33,610 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:33,611 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:56:33,612 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:56:33,612 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1)
2020-01-30 08:56:33,613 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:33,613 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:56:33,616 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:56:33,616 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 08:56:33,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:33,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:56:33,618 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:56:33,618 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:33,620 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:56:33,620 INFO sqlalchemy.engine.base.Engine Thread-2 : (63,)
2020-01-30 08:56:33,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:56:33,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:56:33,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:56:33,622 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:33,699 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:56:33,700 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 08:56:33,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:33,701 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:56:33,703 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 08:56:35,780 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 08:56:35,781 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:35,781 INFO sqlalchemy.engine.base.Engine Thread-9 : (1, 1)
2020-01-30 08:56:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:35,782 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:56:35,784 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:56:35,784 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip', 1)
2020-01-30 08:56:35,785 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:35,785 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), 'philip', 0)
2020-01-30 08:56:35,788 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:56:35,788 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 08:56:35,789 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:35,789 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:56:35,789 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:56:35,789 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:35,790 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:56:35,790 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 08:56:35,791 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:56:35,791 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:56:35,791 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:56:35,791 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:35,793 INFO sqlalchemy.engine.base.Engine Thread-9 : UPDATE users SET id=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-30 08:56:35,793 INFO sqlalchemy.engine.base.Engine Thread-9 : ('1', datetime.datetime(2020, 1, 30, 8, 56, 35, 792584), '0', 1)
2020-01-30 08:56:35,794 INFO sqlalchemy.engine.base.Engine Thread-9 : COMMIT
2020-01-30 08:56:35,892 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 08:56:35,893 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:35,893 INFO sqlalchemy.engine.base.Engine Thread-10 : (1, 1)
2020-01-30 08:56:35,894 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:35,894 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:35,895 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:56:35,895 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 08:56:35,896 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:56:35,897 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:56:35,991 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:56:35,992 INFO sqlalchemy.engine.base.Engine Thread-10 : ()
2020-01-30 08:56:35,992 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:56:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:56:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:56:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:56:35,993 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:56:36,002 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:56:36,002 INFO sqlalchemy.engine.base.Engine Thread-10 : ('philip', 1, 1)
2020-01-30 08:56:36,003 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:36,003 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:36,005 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 08:56:38,852 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 08:56:38,853 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:38,853 INFO sqlalchemy.engine.base.Engine Thread-17 : (1, 1)
2020-01-30 08:56:38,854 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:38,854 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:38,856 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:56:38,856 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1)
2020-01-30 08:56:38,856 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:38,857 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:38,859 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:56:38,859 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 08:56:38,860 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:38,860 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:56:38,860 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:56:38,860 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:38,861 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:56:38,861 INFO sqlalchemy.engine.base.Engine Thread-17 : (63,)
2020-01-30 08:56:38,862 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:56:38,862 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:56:38,862 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:56:38,862 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:38,866 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:56:38,866 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip', 1, 1)
2020-01-30 08:56:38,867 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:38,867 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:38,869 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 08:56:49,738 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 08:56:49,739 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:49,739 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-30 08:56:49,740 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:49,741 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:49,744 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 08:56:49,926 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-01-30 08:56:49,927 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:56:49,927 INFO sqlalchemy.engine.base.Engine Thread-26 : ()
2020-01-30 08:56:49,928 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:49,928 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:56:49,929 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:56:49,929 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:49,930 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:56:49,931 INFO sqlalchemy.engine.base.Engine Thread-26 : (63,)
2020-01-30 08:56:49,931 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:56:49,933 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:56:49,933 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:56:49,933 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:49,943 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-01-30 08:56:53,331 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-01-30 08:56:53,332 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:56:53,332 INFO sqlalchemy.engine.base.Engine Thread-28 : ()
2020-01-30 08:56:53,333 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:53,333 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:56:53,333 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:56:53,333 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:53,335 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:56:53,335 INFO sqlalchemy.engine.base.Engine Thread-28 : (63,)
2020-01-30 08:56:53,335 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:56:53,336 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:56:53,336 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:56:53,336 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:53,338 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:56:53,338 INFO sqlalchemy.engine.base.Engine Thread-28 : ('bob', 1)
2020-01-30 08:56:53,338 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:53,338 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:56:53,340 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 08:56:53,340 INFO sqlalchemy.engine.base.Engine Thread-28 : (1, 1)
2020-01-30 08:56:53,340 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:53,340 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:53,672 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-01-30 08:56:53,744 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-30 08:56:53,745 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:53,745 INFO sqlalchemy.engine.base.Engine Thread-29 : (2, 1)
2020-01-30 08:56:53,746 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:53,746 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:56:53,747 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 08:56:53,747 INFO sqlalchemy.engine.base.Engine Thread-29 : ()
2020-01-30 08:56:53,748 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 08:56:53,748 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 08:56:53,847 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 08:56:53,847 INFO sqlalchemy.engine.base.Engine Thread-29 : ()
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 08:56:53,848 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 08:56:53,853 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:56:53,853 INFO sqlalchemy.engine.base.Engine Thread-29 : ('bob', 1, 1)
2020-01-30 08:56:53,854 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:53,856 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-30 08:56:57,932 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-01-30 08:56:57,934 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:56:57,934 INFO sqlalchemy.engine.base.Engine Thread-36 : (2, 1)
2020-01-30 08:56:57,934 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:57,935 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:56:57,937 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:56:57,937 INFO sqlalchemy.engine.base.Engine Thread-36 : ('bob', 1)
2020-01-30 08:56:57,937 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:57,938 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:56:57,940 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:56:57,940 INFO sqlalchemy.engine.base.Engine Thread-36 : ()
2020-01-30 08:56:57,940 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:56:57,941 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:56:57,941 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:56:57,941 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:56:57,942 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:56:57,942 INFO sqlalchemy.engine.base.Engine Thread-36 : (63,)
2020-01-30 08:56:57,943 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:56:57,943 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:56:57,943 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:56:57,944 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:56:57,948 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:56:57,948 INFO sqlalchemy.engine.base.Engine Thread-36 : ('bob', 1, 1)
2020-01-30 08:56:57,948 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:56:57,951 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-01-30 08:57:02,215 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-01-30 08:57:02,216 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:57:02,216 INFO sqlalchemy.engine.base.Engine Thread-43 : (2, 1)
2020-01-30 08:57:02,217 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:57:02,217 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:57:02,219 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:57:02,219 INFO sqlalchemy.engine.base.Engine Thread-43 : ('bob', 1)
2020-01-30 08:57:02,220 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:57:02,220 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:57:02,223 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:57:02,223 INFO sqlalchemy.engine.base.Engine Thread-43 : ()
2020-01-30 08:57:02,223 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:57:02,223 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:57:02,223 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:57:02,224 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:57:02,225 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:57:02,225 INFO sqlalchemy.engine.base.Engine Thread-43 : (63,)
2020-01-30 08:57:02,226 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:57:02,226 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:57:02,226 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:57:02,226 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:57:02,231 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 08:57:02,231 INFO sqlalchemy.engine.base.Engine Thread-43 : ('bob', 1, 1)
2020-01-30 08:57:02,231 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:57:02,235 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-01-30 08:57:15,857 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-01-30 08:57:15,858 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 08:57:15,858 INFO sqlalchemy.engine.base.Engine Thread-50 : (2, 1)
2020-01-30 08:57:15,859 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:57:15,859 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:57:15,861 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 08:57:15,861 INFO sqlalchemy.engine.base.Engine Thread-50 : ('bob', 1)
2020-01-30 08:57:15,862 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 08:57:15,862 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 08:57:15,865 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 08:57:15,865 INFO sqlalchemy.engine.base.Engine Thread-50 : ()
2020-01-30 08:57:15,865 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 08:57:15,866 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 08:57:15,866 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 08:57:15,866 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 08:57:15,868 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 08:57:15,868 INFO sqlalchemy.engine.base.Engine Thread-50 : (63,)
2020-01-30 08:57:15,868 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 08:57:15,868 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 08:57:15,868 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 08:57:15,869 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 08:57:16,197 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-01-30 09:01:29,151 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-01-30 09:01:29,152 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:01:29,152 INFO sqlalchemy.engine.base.Engine Thread-57 : (2, 1)
2020-01-30 09:01:29,153 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:01:29,153 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:01:29,155 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:01:29,155 INFO sqlalchemy.engine.base.Engine Thread-57 : ('bob', 1)
2020-01-30 09:01:29,156 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:01:29,156 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:01:29,158 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:01:29,158 INFO sqlalchemy.engine.base.Engine Thread-57 : ()
2020-01-30 09:01:29,159 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:01:29,159 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:01:29,159 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:01:29,159 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:01:29,160 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:01:29,160 INFO sqlalchemy.engine.base.Engine Thread-57 : (63,)
2020-01-30 09:01:29,161 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:01:29,161 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:01:29,161 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:01:29,161 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:01:29,166 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:01:29,166 INFO sqlalchemy.engine.base.Engine Thread-57 : ('bob', 1, 1)
2020-01-30 09:01:29,167 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:01:29,169 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-01-30 09:01:34,820 INFO sqlalchemy.engine.base.Engine Thread-64 : BEGIN (implicit)
2020-01-30 09:01:34,821 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:01:34,822 INFO sqlalchemy.engine.base.Engine Thread-64 : (2, 1)
2020-01-30 09:01:34,822 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:01:34,823 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:01:34,825 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:01:34,825 INFO sqlalchemy.engine.base.Engine Thread-64 : ('bob', 1)
2020-01-30 09:01:34,826 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:01:34,826 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:01:34,828 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:01:34,829 INFO sqlalchemy.engine.base.Engine Thread-64 : ()
2020-01-30 09:01:34,829 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:01:34,829 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:01:34,829 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:01:34,829 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:01:34,831 INFO sqlalchemy.engine.base.Engine Thread-64 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:01:34,831 INFO sqlalchemy.engine.base.Engine Thread-64 : (63,)
2020-01-30 09:01:34,831 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:01:34,831 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:01:34,831 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:01:34,832 DEBUG sqlalchemy.engine.base.Engine Thread-64 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:01:34,834 INFO sqlalchemy.engine.base.Engine Thread-64 : ROLLBACK
2020-01-30 09:02:48,188 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-01-30 09:02:48,189 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:02:48,189 INFO sqlalchemy.engine.base.Engine Thread-71 : (2, 1)
2020-01-30 09:02:48,190 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:48,190 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:02:48,193 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-01-30 09:02:48,411 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-01-30 09:02:48,412 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:02:48,412 INFO sqlalchemy.engine.base.Engine Thread-73 : ()
2020-01-30 09:02:48,412 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:02:48,413 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:02:48,413 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:02:48,413 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:02:48,414 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:02:48,414 INFO sqlalchemy.engine.base.Engine Thread-73 : (63,)
2020-01-30 09:02:48,415 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:02:48,415 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:02:48,415 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:02:48,415 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:02:48,416 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-01-30 09:02:51,039 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-01-30 09:02:51,039 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:02:51,040 INFO sqlalchemy.engine.base.Engine Thread-75 : ()
2020-01-30 09:02:51,040 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:02:51,040 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:02:51,040 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:02:51,041 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:02:51,042 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:02:51,042 INFO sqlalchemy.engine.base.Engine Thread-75 : (63,)
2020-01-30 09:02:51,043 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:02:51,043 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:02:51,043 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:02:51,043 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:02:51,045 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:02:51,045 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip2', 1)
2020-01-30 09:02:51,045 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:51,046 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:02:51,047 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 09:02:51,047 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-01-30 09:02:51,047 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:02:51,048 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:02:51,357 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-01-30 09:02:51,437 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-01-30 09:02:51,438 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:02:51,438 INFO sqlalchemy.engine.base.Engine Thread-76 : (8, 1)
2020-01-30 09:02:51,439 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:51,439 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:02:51,440 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:02:51,440 INFO sqlalchemy.engine.base.Engine Thread-76 : ()
2020-01-30 09:02:51,440 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:02:51,441 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:02:51,541 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:02:51,541 INFO sqlalchemy.engine.base.Engine Thread-76 : ()
2020-01-30 09:02:51,542 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:51,542 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:02:51,542 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:02:51,542 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:02:51,542 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:02:51,542 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:02:51,543 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:02:51,547 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:02:51,547 INFO sqlalchemy.engine.base.Engine Thread-76 : ('philip2', 1, 1)
2020-01-30 09:02:51,547 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:51,549 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-01-30 09:02:55,101 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-01-30 09:02:55,102 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:02:55,102 INFO sqlalchemy.engine.base.Engine Thread-83 : (8, 1)
2020-01-30 09:02:55,103 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:55,104 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:02:55,105 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:02:55,105 INFO sqlalchemy.engine.base.Engine Thread-83 : ('philip2', 1)
2020-01-30 09:02:55,106 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:55,106 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:02:55,108 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:02:55,108 INFO sqlalchemy.engine.base.Engine Thread-83 : ()
2020-01-30 09:02:55,109 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:02:55,109 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:02:55,109 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:02:55,109 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:02:55,110 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:02:55,110 INFO sqlalchemy.engine.base.Engine Thread-83 : (63,)
2020-01-30 09:02:55,111 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:02:55,111 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:02:55,111 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:02:55,111 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:02:55,115 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:02:55,115 INFO sqlalchemy.engine.base.Engine Thread-83 : ('philip2', 1, 1)
2020-01-30 09:02:55,116 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:02:55,118 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-01-30 09:03:07,164 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-01-30 09:03:07,165 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:03:07,165 INFO sqlalchemy.engine.base.Engine Thread-90 : (8, 1)
2020-01-30 09:03:07,166 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:03:07,166 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:03:07,168 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:03:07,168 INFO sqlalchemy.engine.base.Engine Thread-90 : ('philip2', 1)
2020-01-30 09:03:07,169 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:03:07,169 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:03:07,173 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:03:07,173 INFO sqlalchemy.engine.base.Engine Thread-90 : ()
2020-01-30 09:03:07,173 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:03:07,174 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:03:07,174 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:03:07,174 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:03:07,175 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:03:07,175 INFO sqlalchemy.engine.base.Engine Thread-90 : (63,)
2020-01-30 09:03:07,176 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:03:07,176 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:03:07,176 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:03:07,176 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:03:07,179 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-01-30 09:04:08,539 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 09:04:08,539 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,541 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 09:04:08,541 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 09:04:08,541 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 09:04:08,542 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,542 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 09:04:08,542 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 09:04:08,542 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 09:04:08,543 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,543 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 09:04:08,543 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 09:04:08,543 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 09:04:08,543 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,544 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 09:04:08,544 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 09:04:08,545 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 09:04:08,545 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,545 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 09:04:08,545 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,546 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 09:04:08,546 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,546 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 09:04:08,549 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:08,549 INFO sqlalchemy.engine.base.Engine Thread-2 : (8, 1)
2020-01-30 09:04:08,550 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:08,550 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:04:08,552 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:04:08,552 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,552 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:04:08,552 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:04:08,646 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:04:08,646 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 09:04:08,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:08,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:04:08,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:08,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:04:08,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:04:08,648 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:04:08,648 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:04:08,709 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:08,709 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip2', 1, 1)
2020-01-30 09:04:08,710 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:08,711 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 09:04:10,463 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 09:04:10,464 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:10,464 INFO sqlalchemy.engine.base.Engine Thread-9 : (8, 1)
2020-01-30 09:04:10,465 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:10,465 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:04:10,467 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:10,467 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip2', 1)
2020-01-30 09:04:10,468 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:10,468 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:04:10,471 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:10,471 INFO sqlalchemy.engine.base.Engine Thread-9 : ()
2020-01-30 09:04:10,472 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:10,472 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:10,472 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:10,472 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:10,474 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:10,474 INFO sqlalchemy.engine.base.Engine Thread-9 : (63,)
2020-01-30 09:04:10,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:10,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:10,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:10,475 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:10,499 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:10,499 INFO sqlalchemy.engine.base.Engine Thread-9 : ('philip2', 1, 1)
2020-01-30 09:04:10,499 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:10,501 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 09:04:11,737 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 09:04:11,738 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:11,738 INFO sqlalchemy.engine.base.Engine Thread-16 : (8, 1)
2020-01-30 09:04:11,739 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:11,739 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:04:11,741 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:11,741 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip2', 1)
2020-01-30 09:04:11,741 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:11,742 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 29, 19, 59, 32), 'philip', 1)
2020-01-30 09:04:11,745 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:11,745 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 09:04:11,746 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:11,746 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:11,746 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:11,746 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:11,747 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:11,747 INFO sqlalchemy.engine.base.Engine Thread-16 : (63,)
2020-01-30 09:04:11,748 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:11,748 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:11,748 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:11,748 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:11,750 INFO sqlalchemy.engine.base.Engine Thread-16 : UPDATE users SET id=%s, last_modified=%s, modified_by=%s, enabled=%s WHERE users.id = %s
2020-01-30 09:04:11,750 INFO sqlalchemy.engine.base.Engine Thread-16 : ('8', datetime.datetime(2020, 1, 30, 9, 4, 11, 749591), 'philip2', '1', 8)
2020-01-30 09:04:11,751 INFO sqlalchemy.engine.base.Engine Thread-16 : COMMIT
2020-01-30 09:04:11,869 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 09:04:11,870 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:11,870 INFO sqlalchemy.engine.base.Engine Thread-17 : (8, 1)
2020-01-30 09:04:11,871 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:11,871 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 11), 'philip2', 1)
2020-01-30 09:04:11,872 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:04:11,872 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 09:04:11,872 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:04:11,873 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:04:11,965 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:04:11,965 INFO sqlalchemy.engine.base.Engine Thread-17 : ()
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:04:11,966 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 11), 'philip2', 1)
2020-01-30 09:04:11,970 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:11,970 INFO sqlalchemy.engine.base.Engine Thread-17 : ('philip2', 1, 1)
2020-01-30 09:04:11,971 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:11,973 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 09:04:17,530 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 09:04:17,531 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:17,531 INFO sqlalchemy.engine.base.Engine Thread-24 : (8, 1)
2020-01-30 09:04:17,532 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:17,532 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 11), 'philip2', 1)
2020-01-30 09:04:17,533 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:17,533 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip2', 1)
2020-01-30 09:04:17,534 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:17,534 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 11), 'philip2', 1)
2020-01-30 09:04:17,536 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:17,536 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-01-30 09:04:17,537 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:17,537 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:17,537 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:17,537 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:17,538 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:17,539 INFO sqlalchemy.engine.base.Engine Thread-24 : (63,)
2020-01-30 09:04:17,539 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:17,539 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:17,539 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:17,539 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:17,543 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:17,543 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip2', 1, 1)
2020-01-30 09:04:17,544 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:17,546 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 09:04:24,142 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 09:04:24,143 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:24,143 INFO sqlalchemy.engine.base.Engine Thread-31 : (8, 1)
2020-01-30 09:04:24,145 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:24,146 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 11), 'philip2', 1)
2020-01-30 09:04:24,148 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:24,148 INFO sqlalchemy.engine.base.Engine Thread-31 : ('philip2', 1)
2020-01-30 09:04:24,149 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:24,149 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (8, 'philip2', 'Philip', 'Troon', '', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 11), 'philip2', 1)
2020-01-30 09:04:24,152 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:24,152 INFO sqlalchemy.engine.base.Engine Thread-31 : ()
2020-01-30 09:04:24,152 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:24,153 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:24,153 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:24,153 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:24,154 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:24,154 INFO sqlalchemy.engine.base.Engine Thread-31 : (63,)
2020-01-30 09:04:24,155 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:24,155 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:24,155 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:24,155 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:24,157 INFO sqlalchemy.engine.base.Engine Thread-31 : UPDATE users SET id=%s, comment=%s, last_modified=%s, enabled=%s WHERE users.id = %s
2020-01-30 09:04:24,157 INFO sqlalchemy.engine.base.Engine Thread-31 : ('8', 'Test account', datetime.datetime(2020, 1, 30, 9, 4, 24, 156227), '1', 8)
2020-01-30 09:04:24,157 INFO sqlalchemy.engine.base.Engine Thread-31 : COMMIT
2020-01-30 09:04:24,265 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 09:04:24,266 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:24,267 INFO sqlalchemy.engine.base.Engine Thread-32 : (8, 1)
2020-01-30 09:04:24,267 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:24,267 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:24,268 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:04:24,268 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-01-30 09:04:24,269 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:04:24,269 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:04:24,360 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:04:24,360 INFO sqlalchemy.engine.base.Engine Thread-32 : ()
2020-01-30 09:04:24,361 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:24,361 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:04:24,361 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:24,361 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:04:24,362 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:04:24,362 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:04:24,362 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:24,366 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:24,366 INFO sqlalchemy.engine.base.Engine Thread-32 : ('philip2', 1, 1)
2020-01-30 09:04:24,367 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:24,369 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 09:04:29,999 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-30 09:04:30,000 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:30,000 INFO sqlalchemy.engine.base.Engine Thread-39 : (8, 1)
2020-01-30 09:04:30,000 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:30,001 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:30,003 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:30,003 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip2', 1)
2020-01-30 09:04:30,003 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:30,004 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:30,006 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:30,006 INFO sqlalchemy.engine.base.Engine Thread-39 : ()
2020-01-30 09:04:30,006 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:30,006 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:30,007 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:30,007 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:30,008 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:30,008 INFO sqlalchemy.engine.base.Engine Thread-39 : (63,)
2020-01-30 09:04:30,008 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:30,009 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:30,009 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:30,009 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:30,013 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:30,013 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip2', 1, 1)
2020-01-30 09:04:30,013 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:30,015 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-30 09:04:37,355 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-30 09:04:37,356 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:37,356 INFO sqlalchemy.engine.base.Engine Thread-46 : (8, 1)
2020-01-30 09:04:37,357 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:37,357 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:37,358 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:04:37,358 INFO sqlalchemy.engine.base.Engine Thread-46 : ()
2020-01-30 09:04:37,358 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:04:37,359 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:04:37,451 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:04:37,451 INFO sqlalchemy.engine.base.Engine Thread-46 : ()
2020-01-30 09:04:37,452 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:37,452 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:04:37,452 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:37,452 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:04:37,452 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:04:37,453 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:04:37,453 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:37,456 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:37,457 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip2', 1, 1)
2020-01-30 09:04:37,457 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:37,458 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-01-30 09:04:39,137 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-01-30 09:04:39,137 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:39,138 INFO sqlalchemy.engine.base.Engine Thread-53 : (8, 1)
2020-01-30 09:04:39,138 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:39,139 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:39,141 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-01-30 09:04:39,326 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-01-30 09:04:39,326 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:39,326 INFO sqlalchemy.engine.base.Engine Thread-55 : ()
2020-01-30 09:04:39,327 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:39,327 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:39,327 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:39,327 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:39,329 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:39,329 INFO sqlalchemy.engine.base.Engine Thread-55 : (63,)
2020-01-30 09:04:39,329 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:39,329 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:39,330 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:39,330 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:39,339 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-01-30 09:04:43,893 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-01-30 09:04:43,894 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:43,894 INFO sqlalchemy.engine.base.Engine Thread-57 : ()
2020-01-30 09:04:43,895 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:43,895 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:43,896 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:43,896 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:43,897 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:43,897 INFO sqlalchemy.engine.base.Engine Thread-57 : (63,)
2020-01-30 09:04:43,898 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:43,898 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:43,898 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:43,898 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:43,900 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:43,900 INFO sqlalchemy.engine.base.Engine Thread-57 : ('bob', 1)
2020-01-30 09:04:43,901 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:43,901 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:43,902 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 09:04:43,902 INFO sqlalchemy.engine.base.Engine Thread-57 : (1, 1)
2020-01-30 09:04:43,902 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:43,903 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:44,206 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-01-30 09:04:44,297 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-01-30 09:04:44,298 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:44,298 INFO sqlalchemy.engine.base.Engine Thread-58 : (2, 1)
2020-01-30 09:04:44,299 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:44,299 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:44,300 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:04:44,300 INFO sqlalchemy.engine.base.Engine Thread-58 : ()
2020-01-30 09:04:44,300 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:04:44,300 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:04:44,394 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:04:44,394 INFO sqlalchemy.engine.base.Engine Thread-58 : ()
2020-01-30 09:04:44,395 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:44,395 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:04:44,395 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:44,395 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:04:44,395 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:04:44,395 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:04:44,396 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:04:44,400 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:44,400 INFO sqlalchemy.engine.base.Engine Thread-58 : ('bob', 1, 1)
2020-01-30 09:04:44,400 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:44,403 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-01-30 09:04:46,840 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-01-30 09:04:46,841 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:04:46,842 INFO sqlalchemy.engine.base.Engine Thread-65 : (2, 1)
2020-01-30 09:04:46,843 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:46,843 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:46,844 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:04:46,845 INFO sqlalchemy.engine.base.Engine Thread-65 : ('bob', 1)
2020-01-30 09:04:46,845 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:46,845 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:04:46,847 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:04:46,847 INFO sqlalchemy.engine.base.Engine Thread-65 : ()
2020-01-30 09:04:46,848 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:04:46,848 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:04:46,848 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:04:46,848 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:04:46,849 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:04:46,849 INFO sqlalchemy.engine.base.Engine Thread-65 : (63,)
2020-01-30 09:04:46,850 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:04:46,850 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:04:46,850 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:04:46,850 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:04:46,854 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:04:46,854 INFO sqlalchemy.engine.base.Engine Thread-65 : ('bob', 1, 1)
2020-01-30 09:04:46,855 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:04:46,857 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-01-30 09:05:39,497 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-01-30 09:05:39,498 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:05:39,498 INFO sqlalchemy.engine.base.Engine Thread-72 : (2, 1)
2020-01-30 09:05:39,499 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:39,500 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:05:39,502 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-01-30 09:05:39,694 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-30 09:05:39,695 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:05:39,695 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-01-30 09:05:39,695 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:05:39,696 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:05:39,696 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:05:39,696 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:05:39,697 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:05:39,697 INFO sqlalchemy.engine.base.Engine Thread-74 : (63,)
2020-01-30 09:05:39,698 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:05:39,698 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:05:39,698 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:05:39,698 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:05:39,700 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-30 09:05:42,396 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-01-30 09:05:42,397 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:05:42,397 INFO sqlalchemy.engine.base.Engine Thread-76 : ()
2020-01-30 09:05:42,398 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:05:42,398 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:05:42,398 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:05:42,398 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:05:42,399 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:05:42,400 INFO sqlalchemy.engine.base.Engine Thread-76 : (63,)
2020-01-30 09:05:42,400 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:05:42,400 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:05:42,401 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:05:42,401 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:05:42,403 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:05:42,403 INFO sqlalchemy.engine.base.Engine Thread-76 : ('frank', 1)
2020-01-30 09:05:42,403 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:42,404 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:42,405 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 09:05:42,405 INFO sqlalchemy.engine.base.Engine Thread-76 : (2, 1)
2020-01-30 09:05:42,406 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:05:42,406 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:05:42,713 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-01-30 09:05:42,780 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-01-30 09:05:42,781 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:05:42,781 INFO sqlalchemy.engine.base.Engine Thread-77 : (3, 1)
2020-01-30 09:05:42,782 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:42,782 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:42,783 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:05:42,783 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-01-30 09:05:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:05:42,784 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:05:42,877 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:05:42,877 INFO sqlalchemy.engine.base.Engine Thread-77 : ()
2020-01-30 09:05:42,878 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:42,878 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:05:42,878 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:05:42,878 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:42,879 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:05:42,879 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:05:42,879 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:05:42,883 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:05:42,883 INFO sqlalchemy.engine.base.Engine Thread-77 : ('frank', 1, 1)
2020-01-30 09:05:42,884 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:42,884 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:42,886 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-01-30 09:05:45,467 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-01-30 09:05:45,468 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:05:45,469 INFO sqlalchemy.engine.base.Engine Thread-84 : (3, 1)
2020-01-30 09:05:45,469 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:45,469 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:45,471 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:05:45,471 INFO sqlalchemy.engine.base.Engine Thread-84 : ('frank', 1)
2020-01-30 09:05:45,472 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:45,472 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:45,474 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:05:45,474 INFO sqlalchemy.engine.base.Engine Thread-84 : ()
2020-01-30 09:05:45,475 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:05:45,475 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:05:45,476 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:05:45,476 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:05:45,477 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:05:45,477 INFO sqlalchemy.engine.base.Engine Thread-84 : (63,)
2020-01-30 09:05:45,478 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:05:45,478 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:05:45,478 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:05:45,478 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:05:45,482 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:05:45,482 INFO sqlalchemy.engine.base.Engine Thread-84 : ('frank', 1, 1)
2020-01-30 09:05:45,483 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:45,483 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:45,485 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-01-30 09:05:50,208 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-01-30 09:05:50,209 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:05:50,209 INFO sqlalchemy.engine.base.Engine Thread-91 : (3, 1)
2020-01-30 09:05:50,210 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:50,210 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:50,212 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:05:50,212 INFO sqlalchemy.engine.base.Engine Thread-91 : ('frank', 1)
2020-01-30 09:05:50,213 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:50,213 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:50,215 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:05:50,215 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-01-30 09:05:50,216 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:05:50,216 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:05:50,216 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:05:50,216 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:05:50,217 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:05:50,218 INFO sqlalchemy.engine.base.Engine Thread-91 : (63,)
2020-01-30 09:05:50,218 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:05:50,218 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:05:50,218 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:05:50,218 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:05:50,223 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:05:50,223 INFO sqlalchemy.engine.base.Engine Thread-91 : ('frank', 1, 1)
2020-01-30 09:05:50,224 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:50,224 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:50,228 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-01-30 09:05:57,645 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-01-30 09:05:57,646 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:05:57,646 INFO sqlalchemy.engine.base.Engine Thread-98 : (3, 1)
2020-01-30 09:05:57,647 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:57,647 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:57,649 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:05:57,649 INFO sqlalchemy.engine.base.Engine Thread-98 : ('frank', 1)
2020-01-30 09:05:57,650 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:57,650 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$W7l0QbKXrOLKh2.7IDYI3.eP7gAsIzbJ730HJ0bgyd8.FGmrr4Je6', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 0, 59, 35), 'philip', 0)
2020-01-30 09:05:57,653 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:05:57,653 INFO sqlalchemy.engine.base.Engine Thread-98 : ()
2020-01-30 09:05:57,654 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:05:57,654 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:05:57,654 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:05:57,654 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:05:57,656 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:05:57,656 INFO sqlalchemy.engine.base.Engine Thread-98 : (63,)
2020-01-30 09:05:57,657 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:05:57,657 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:05:57,657 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:05:57,657 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:05:57,968 INFO sqlalchemy.engine.base.Engine Thread-98 : UPDATE users SET id=%s, _password=%s, last_modified=%s, modified_by=%s, enabled=%s WHERE users.id = %s
2020-01-30 09:05:57,968 INFO sqlalchemy.engine.base.Engine Thread-98 : ('3', b'$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', datetime.datetime(2020, 1, 30, 9, 5, 57, 967428), 'frank', '0', 3)
2020-01-30 09:05:57,969 INFO sqlalchemy.engine.base.Engine Thread-98 : COMMIT
2020-01-30 09:05:58,079 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-01-30 09:05:58,079 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:05:58,080 INFO sqlalchemy.engine.base.Engine Thread-99 : (3, 1)
2020-01-30 09:05:58,080 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:58,081 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:05:58,082 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:05:58,082 INFO sqlalchemy.engine.base.Engine Thread-99 : ()
2020-01-30 09:05:58,082 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:05:58,083 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:05:58,173 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:05:58,173 INFO sqlalchemy.engine.base.Engine Thread-99 : ()
2020-01-30 09:05:58,174 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:58,174 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:05:58,175 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:05:58,175 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:05:58,175 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:05:58,175 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:05:58,175 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:05:58,179 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:05:58,179 INFO sqlalchemy.engine.base.Engine Thread-99 : ('frank', 1, 1)
2020-01-30 09:05:58,180 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:05:58,180 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:05:58,183 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-01-30 09:06:06,584 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-01-30 09:06:06,591 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 09:06:06,591 INFO sqlalchemy.engine.base.Engine Thread-106 : ()
2020-01-30 09:06:06,593 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 09:06:06,593 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 09:06:06,593 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 09:06:06,595 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:06:06,595 INFO sqlalchemy.engine.base.Engine Thread-106 : (3, 1)
2020-01-30 09:06:06,596 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:06:06,596 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:06:06,607 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:06:06,607 INFO sqlalchemy.engine.base.Engine Thread-106 : ('frank', 1, 1)
2020-01-30 09:06:06,608 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:06:06,608 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:06:06,610 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-01-30 09:06:07,024 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-01-30 09:06:07,026 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:06:07,026 INFO sqlalchemy.engine.base.Engine Thread-113 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:06:07,027 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:06:07,028 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-01-30 09:06:07,044 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-01-30 09:06:07,045 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:06:07,045 INFO sqlalchemy.engine.base.Engine Thread-114 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:06:07,045 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:06:07,046 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-01-30 09:06:11,052 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-01-30 09:06:11,055 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 09:06:11,055 INFO sqlalchemy.engine.base.Engine Thread-115 : ('0', 1)
2020-01-30 09:06:11,056 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 09:06:11,060 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 09:06:11,060 INFO sqlalchemy.engine.base.Engine Thread-115 : ()
2020-01-30 09:06:11,061 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 09:06:11,061 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 09:06:11,062 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 09:06:11,063 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:06:11,063 INFO sqlalchemy.engine.base.Engine Thread-115 : (97,)
2020-01-30 09:06:11,063 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:06:11,064 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 09:06:11,064 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 09:06:11,065 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:06:11,065 INFO sqlalchemy.engine.base.Engine Thread-115 : (105,)
2020-01-30 09:06:11,065 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:06:11,066 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 09:06:11,066 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 09:06:11,069 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 09:06:11,069 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-01-30 09:06:11,070 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 09:06:11,070 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 09:06:11,072 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:06:11,072 INFO sqlalchemy.engine.base.Engine Thread-115 : (3, 1)
2020-01-30 09:06:11,072 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:06:11,073 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:06:11,116 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:06:11,117 INFO sqlalchemy.engine.base.Engine Thread-115 : ('frank', 1, 1)
2020-01-30 09:06:11,117 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:06:11,117 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:06:11,120 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-01-30 09:06:45,079 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-01-30 09:06:45,081 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 09:06:45,081 INFO sqlalchemy.engine.base.Engine Thread-122 : ()
2020-01-30 09:06:45,082 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 09:06:45,083 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 09:06:45,083 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 09:06:45,085 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:06:45,085 INFO sqlalchemy.engine.base.Engine Thread-122 : (3, 1)
2020-01-30 09:06:45,085 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:06:45,086 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:06:45,089 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:06:45,090 INFO sqlalchemy.engine.base.Engine Thread-122 : ('frank', 1, 1)
2020-01-30 09:06:45,090 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:06:45,090 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:06:45,092 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-01-30 09:06:45,618 INFO sqlalchemy.engine.base.Engine Thread-129 : BEGIN (implicit)
2020-01-30 09:06:45,619 INFO sqlalchemy.engine.base.Engine Thread-129 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:06:45,619 INFO sqlalchemy.engine.base.Engine Thread-129 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:06:45,620 DEBUG sqlalchemy.engine.base.Engine Thread-129 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:06:45,620 INFO sqlalchemy.engine.base.Engine Thread-129 : ROLLBACK
2020-01-30 09:06:45,644 INFO sqlalchemy.engine.base.Engine Thread-130 : BEGIN (implicit)
2020-01-30 09:06:45,644 INFO sqlalchemy.engine.base.Engine Thread-130 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:06:45,644 INFO sqlalchemy.engine.base.Engine Thread-130 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:06:45,645 DEBUG sqlalchemy.engine.base.Engine Thread-130 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:06:45,646 INFO sqlalchemy.engine.base.Engine Thread-130 : ROLLBACK
2020-01-30 09:06:48,341 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-01-30 09:06:48,342 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:06:48,342 INFO sqlalchemy.engine.base.Engine Thread-131 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 09:06:48,343 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:06:48,343 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 09:06:48,343 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-01-30 09:06:48,359 INFO sqlalchemy.engine.base.Engine Thread-132 : BEGIN (implicit)
2020-01-30 09:06:48,360 INFO sqlalchemy.engine.base.Engine Thread-132 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:06:48,360 INFO sqlalchemy.engine.base.Engine Thread-132 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 09:06:48,360 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:06:48,360 DEBUG sqlalchemy.engine.base.Engine Thread-132 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 09:06:48,361 INFO sqlalchemy.engine.base.Engine Thread-132 : ROLLBACK
2020-01-30 09:07:03,276 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-01-30 09:07:03,277 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:07:03,277 INFO sqlalchemy.engine.base.Engine Thread-133 : (3, 1)
2020-01-30 09:07:03,277 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:03,278 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:07:03,280 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-01-30 09:07:03,478 INFO sqlalchemy.engine.base.Engine Thread-135 : BEGIN (implicit)
2020-01-30 09:07:03,479 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:07:03,479 INFO sqlalchemy.engine.base.Engine Thread-135 : ()
2020-01-30 09:07:03,479 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:07:03,479 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:07:03,480 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:07:03,480 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:07:03,481 INFO sqlalchemy.engine.base.Engine Thread-135 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:07:03,481 INFO sqlalchemy.engine.base.Engine Thread-135 : (63,)
2020-01-30 09:07:03,482 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:07:03,482 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:07:03,482 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:07:03,482 DEBUG sqlalchemy.engine.base.Engine Thread-135 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:07:03,483 INFO sqlalchemy.engine.base.Engine Thread-135 : ROLLBACK
2020-01-30 09:07:06,297 INFO sqlalchemy.engine.base.Engine Thread-137 : BEGIN (implicit)
2020-01-30 09:07:06,297 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles ORDER BY roles.role_name
2020-01-30 09:07:06,297 INFO sqlalchemy.engine.base.Engine Thread-137 : ()
2020-01-30 09:07:06,298 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:07:06,298 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:07:06,298 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (6, 'No Login', 0, '', datetime.datetime(2020, 1, 29, 19, 59, 20), 1)
2020-01-30 09:07:06,298 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1)
2020-01-30 09:07:06,300 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:07:06,300 INFO sqlalchemy.engine.base.Engine Thread-137 : (63,)
2020-01-30 09:07:06,300 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:07:06,301 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 09:07:06,301 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 09:07:06,301 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 09:07:06,302 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.login_id = %s 
 LIMIT %s
2020-01-30 09:07:06,302 INFO sqlalchemy.engine.base.Engine Thread-137 : ('philip', 1)
2020-01-30 09:07:06,303 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:06,303 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:06,304 INFO sqlalchemy.engine.base.Engine Thread-137 : SELECT roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled 
FROM roles 
WHERE roles.id = %s 
 LIMIT %s
2020-01-30 09:07:06,305 INFO sqlalchemy.engine.base.Engine Thread-137 : (2, 1)
2020-01-30 09:07:06,305 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Col ('roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled')
2020-01-30 09:07:06,305 DEBUG sqlalchemy.engine.base.Engine Thread-137 : Row (2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1)
2020-01-30 09:07:06,615 INFO sqlalchemy.engine.base.Engine Thread-137 : ROLLBACK
2020-01-30 09:07:06,665 INFO sqlalchemy.engine.base.Engine Thread-138 : BEGIN (implicit)
2020-01-30 09:07:06,666 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:07:06,666 INFO sqlalchemy.engine.base.Engine Thread-138 : (1, 1)
2020-01-30 09:07:06,667 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:06,667 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:06,668 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 09:07:06,668 INFO sqlalchemy.engine.base.Engine Thread-138 : ()
2020-01-30 09:07:06,668 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 09:07:06,669 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 09:07:06,763 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 09:07:06,764 INFO sqlalchemy.engine.base.Engine Thread-138 : ()
2020-01-30 09:07:06,764 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:06,764 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:06,765 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 09:07:06,765 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 09:07:06,765 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 09:07:06,765 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 09:07:06,765 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 09:07:06,770 INFO sqlalchemy.engine.base.Engine Thread-138 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:07:06,770 INFO sqlalchemy.engine.base.Engine Thread-138 : ('philip', 1, 1)
2020-01-30 09:07:06,770 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:06,771 DEBUG sqlalchemy.engine.base.Engine Thread-138 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:06,773 INFO sqlalchemy.engine.base.Engine Thread-138 : ROLLBACK
2020-01-30 09:07:10,967 INFO sqlalchemy.engine.base.Engine Thread-145 : BEGIN (implicit)
2020-01-30 09:07:10,968 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:07:10,968 INFO sqlalchemy.engine.base.Engine Thread-145 : (1, 1)
2020-01-30 09:07:10,969 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:10,969 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:10,971 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:07:10,971 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-01-30 09:07:10,972 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:10,972 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:10,981 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 09:07:10,981 INFO sqlalchemy.engine.base.Engine Thread-145 : ()
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:07:10,982 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:07:10,983 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:07:10,997 INFO sqlalchemy.engine.base.Engine Thread-145 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:07:10,997 INFO sqlalchemy.engine.base.Engine Thread-145 : ('philip', 1, 1)
2020-01-30 09:07:10,997 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:07:10,998 DEBUG sqlalchemy.engine.base.Engine Thread-145 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:07:10,999 INFO sqlalchemy.engine.base.Engine Thread-145 : ROLLBACK
2020-01-30 09:10:47,496 INFO sqlalchemy.engine.base.Engine Thread-152 : BEGIN (implicit)
2020-01-30 09:10:47,499 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:10:47,499 INFO sqlalchemy.engine.base.Engine Thread-152 : (1, 1)
2020-01-30 09:10:47,501 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:10:47,501 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:10:47,504 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:10:47,504 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-01-30 09:10:47,505 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:10:47,505 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:10:47,508 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT datesofinterest.id AS datesofinterest_id, datesofinterest.doi_name AS datesofinterest_doi_name, datesofinterest.doi_priority AS datesofinterest_doi_priority, datesofinterest.doi_comment AS datesofinterest_doi_comment, datesofinterest.doi_start_dt AS datesofinterest_doi_start_dt, datesofinterest.doi_end_dt AS datesofinterest_doi_end_dt, datesofinterest.doi_regions AS datesofinterest_doi_regions, datesofinterest.doi_locked AS datesofinterest_doi_locked, datesofinterest.doi_hap AS datesofinterest_doi_hap 
FROM datesofinterest 
WHERE datesofinterest.id = %s 
 LIMIT %s
2020-01-30 09:10:47,508 INFO sqlalchemy.engine.base.Engine Thread-152 : ('1', 1)
2020-01-30 09:10:47,508 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('datesofinterest_id', 'datesofinterest_doi_name', 'datesofinterest_doi_priority', 'datesofinterest_doi_comment', 'datesofinterest_doi_start_dt', 'datesofinterest_doi_end_dt', 'datesofinterest_doi_regions', 'datesofinterest_doi_locked', 'datesofinterest_doi_hap')
2020-01-30 09:10:47,509 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'Change Freeze (Critical)', 83, 'Change Freeze (Critical)', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'GBR,IND', 106, 106)
2020-01-30 09:10:47,512 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:10:47,512 INFO sqlalchemy.engine.base.Engine Thread-152 : (82,)
2020-01-30 09:10:47,513 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:10:47,513 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (83, 'High', 'High', 82, 0, 0, 1)
2020-01-30 09:10:47,514 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (85, 'Low', 'Low', 82, 0, 0, 1)
2020-01-30 09:10:47,514 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (84, 'Medium', 'Medium', 82, 0, 0, 1)
2020-01-30 09:10:47,515 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 09:10:47,515 INFO sqlalchemy.engine.base.Engine Thread-152 : (1,)
2020-01-30 09:10:47,516 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:10:47,516 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 09:10:47,516 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 09:10:47,518 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:10:47,518 INFO sqlalchemy.engine.base.Engine Thread-152 : (105,)
2020-01-30 09:10:47,519 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:10:47,519 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 09:10:47,519 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 09:10:47,521 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:10:47,521 INFO sqlalchemy.engine.base.Engine Thread-152 : (105,)
2020-01-30 09:10:47,521 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:10:47,522 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 09:10:47,522 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 09:10:47,567 INFO sqlalchemy.engine.base.Engine Thread-152 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:10:47,567 INFO sqlalchemy.engine.base.Engine Thread-152 : ('philip', 1, 1)
2020-01-30 09:10:47,568 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:10:47,569 DEBUG sqlalchemy.engine.base.Engine Thread-152 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:10:47,571 INFO sqlalchemy.engine.base.Engine Thread-152 : ROLLBACK
2020-01-30 09:10:57,333 INFO sqlalchemy.engine.base.Engine Thread-159 : BEGIN (implicit)
2020-01-30 09:10:57,334 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:10:57,334 INFO sqlalchemy.engine.base.Engine Thread-159 : (1, 1)
2020-01-30 09:10:57,335 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:10:57,336 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:10:57,338 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:10:57,339 INFO sqlalchemy.engine.base.Engine Thread-159 : ('philip', 1, 1)
2020-01-30 09:10:57,340 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:10:57,340 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:10:57,348 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT datesofinterest_1.id AS datesofinterest_1_id, datesofinterest_1.doi_name AS datesofinterest_1_doi_name, datesofinterest_1.doi_regions AS datesofinterest_1_doi_regions, datesofinterest_1.doi_start_dt AS datesofinterest_1_doi_start_dt, datesofinterest_1.doi_end_dt AS datesofinterest_1_doi_end_dt, parameters_1.param_value AS parameters_1_param_value, parameters_2.param_name AS parameters_2_param_name, parameters_3.param_name AS parameters_3_param_name 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_priority = parameters_1.id INNER JOIN parameters AS parameters_2 ON datesofinterest_1.doi_hap = parameters_2.id INNER JOIN parameters AS parameters_3 ON datesofinterest_1.doi_locked = parameters_3.id ORDER BY datesofinterest_1.doi_start_dt ASC
2020-01-30 09:10:57,348 INFO sqlalchemy.engine.base.Engine Thread-159 : ()
2020-01-30 09:10:57,349 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('datesofinterest_1_id', 'datesofinterest_1_doi_name', 'datesofinterest_1_doi_regions', 'datesofinterest_1_doi_start_dt', 'datesofinterest_1_doi_end_dt', 'parameters_1_param_value', 'parameters_2_param_name', 'parameters_3_param_name')
2020-01-30 09:10:57,349 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'Change Freeze (Critical)', 'GBR,IND', datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'High', 'Yes', 'Yes')
2020-01-30 09:10:57,349 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (8, 'Easter Holiday', 'GBR,IND', datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:10:57,349 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (9, 'May Day', 'GBR,IND', datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:10:57,350 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (10, 'Late May Holiday', 'GBR,IND', datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:10:57,350 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (11, 'Christmas Day', 'GBR,IND', datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:10:57,350 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (12, 'Boxing Day', 'GBR,IND', datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:10:57,350 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (13, 'Boxing Day Holiday', 'GBR,IND', datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'High', 'Yes', 'No')
2020-01-30 09:10:57,354 INFO sqlalchemy.engine.base.Engine Thread-159 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:10:57,354 INFO sqlalchemy.engine.base.Engine Thread-159 : ('philip', 1, 1)
2020-01-30 09:10:57,355 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:10:57,355 DEBUG sqlalchemy.engine.base.Engine Thread-159 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:10:57,357 INFO sqlalchemy.engine.base.Engine Thread-159 : ROLLBACK
2020-01-30 09:13:46,834 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-01-30 09:13:46,838 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 09:13:46,838 INFO sqlalchemy.engine.base.Engine Thread-166 : ()
2020-01-30 09:13:46,840 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 09:13:46,841 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 09:13:46,841 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 09:13:46,843 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:13:46,843 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-01-30 09:13:46,844 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:13:46,844 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:13:46,849 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:13:46,849 INFO sqlalchemy.engine.base.Engine Thread-166 : ('philip', 1, 1)
2020-01-30 09:13:46,849 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:13:46,850 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:13:46,851 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-01-30 09:13:47,390 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-01-30 09:13:47,391 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:13:47,392 INFO sqlalchemy.engine.base.Engine Thread-173 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:13:47,393 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:13:47,393 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-01-30 09:13:47,409 INFO sqlalchemy.engine.base.Engine Thread-174 : BEGIN (implicit)
2020-01-30 09:13:47,410 INFO sqlalchemy.engine.base.Engine Thread-174 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:13:47,410 INFO sqlalchemy.engine.base.Engine Thread-174 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:13:47,410 DEBUG sqlalchemy.engine.base.Engine Thread-174 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:13:47,411 INFO sqlalchemy.engine.base.Engine Thread-174 : ROLLBACK
2020-01-30 09:13:49,580 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-01-30 09:13:49,581 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:13:49,581 INFO sqlalchemy.engine.base.Engine Thread-175 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 09:13:49,582 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:13:49,582 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 09:13:49,583 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-01-30 09:13:49,605 INFO sqlalchemy.engine.base.Engine Thread-176 : BEGIN (implicit)
2020-01-30 09:13:49,606 INFO sqlalchemy.engine.base.Engine Thread-176 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:13:49,606 INFO sqlalchemy.engine.base.Engine Thread-176 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 09:13:49,607 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:13:49,607 DEBUG sqlalchemy.engine.base.Engine Thread-176 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 09:13:49,608 INFO sqlalchemy.engine.base.Engine Thread-176 : ROLLBACK
2020-01-30 09:14:31,588 INFO sqlalchemy.engine.base.Engine Thread-177 : BEGIN (implicit)
2020-01-30 09:14:31,589 INFO sqlalchemy.engine.base.Engine Thread-177 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:14:31,589 INFO sqlalchemy.engine.base.Engine Thread-177 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:14:31,590 DEBUG sqlalchemy.engine.base.Engine Thread-177 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:14:31,590 INFO sqlalchemy.engine.base.Engine Thread-177 : ROLLBACK
2020-01-30 09:14:31,605 INFO sqlalchemy.engine.base.Engine Thread-178 : BEGIN (implicit)
2020-01-30 09:14:31,606 INFO sqlalchemy.engine.base.Engine Thread-178 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:14:31,606 INFO sqlalchemy.engine.base.Engine Thread-178 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 09:14:31,607 DEBUG sqlalchemy.engine.base.Engine Thread-178 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:14:31,608 INFO sqlalchemy.engine.base.Engine Thread-178 : ROLLBACK
2020-01-30 09:14:32,136 INFO sqlalchemy.engine.base.Engine Thread-179 : BEGIN (implicit)
2020-01-30 09:14:32,137 INFO sqlalchemy.engine.base.Engine Thread-179 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:14:32,138 INFO sqlalchemy.engine.base.Engine Thread-179 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 09:14:32,138 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:14:32,138 DEBUG sqlalchemy.engine.base.Engine Thread-179 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 09:14:32,139 INFO sqlalchemy.engine.base.Engine Thread-179 : ROLLBACK
2020-01-30 09:14:32,155 INFO sqlalchemy.engine.base.Engine Thread-180 : BEGIN (implicit)
2020-01-30 09:14:32,156 INFO sqlalchemy.engine.base.Engine Thread-180 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 09:14:32,156 INFO sqlalchemy.engine.base.Engine Thread-180 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 09:14:32,157 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Col ('start', 'end', 'title', 'description')
2020-01-30 09:14:32,157 DEBUG sqlalchemy.engine.base.Engine Thread-180 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 09:14:32,158 INFO sqlalchemy.engine.base.Engine Thread-180 : ROLLBACK
2020-01-30 09:16:17,969 INFO sqlalchemy.engine.base.Engine Thread-181 : BEGIN (implicit)
2020-01-30 09:16:17,970 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:16:17,971 INFO sqlalchemy.engine.base.Engine Thread-181 : (1, 1)
2020-01-30 09:16:17,972 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:17,973 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:17,975 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:17,975 INFO sqlalchemy.engine.base.Engine Thread-181 : ('philip', 1, 1)
2020-01-30 09:16:17,976 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:17,976 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:17,987 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 09:16:17,987 INFO sqlalchemy.engine.base.Engine Thread-181 : ()
2020-01-30 09:16:17,989 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 09:16:17,990 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 09:16:17,990 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 09:16:18,006 INFO sqlalchemy.engine.base.Engine Thread-181 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:18,006 INFO sqlalchemy.engine.base.Engine Thread-181 : ('philip', 1, 1)
2020-01-30 09:16:18,007 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:18,007 DEBUG sqlalchemy.engine.base.Engine Thread-181 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:18,008 INFO sqlalchemy.engine.base.Engine Thread-181 : ROLLBACK
2020-01-30 09:16:19,969 INFO sqlalchemy.engine.base.Engine Thread-188 : BEGIN (implicit)
2020-01-30 09:16:19,970 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:16:19,970 INFO sqlalchemy.engine.base.Engine Thread-188 : (1, 1)
2020-01-30 09:16:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:19,971 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:19,973 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:19,973 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-01-30 09:16:19,974 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:19,975 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:19,978 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 09:16:19,978 INFO sqlalchemy.engine.base.Engine Thread-188 : ('1', 1)
2020-01-30 09:16:19,979 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 09:16:19,979 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 09:16:19,983 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:16:19,983 INFO sqlalchemy.engine.base.Engine Thread-188 : (89,)
2020-01-30 09:16:19,983 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,984 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (91, 'Dual Layer', 'Dual Layer', 89, 0, 0, 1)
2020-01-30 09:16:19,984 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (90, 'Single Layer', 'Single Layer', 89, 0, 0, 1)
2020-01-30 09:16:19,985 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:16:19,985 INFO sqlalchemy.engine.base.Engine Thread-188 : (2,)
2020-01-30 09:16:19,985 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,985 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0)
2020-01-30 09:16:19,986 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0)
2020-01-30 09:16:19,986 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (88, 'Juniper', 'Juniper', 2, 0, 0, 0)
2020-01-30 09:16:19,987 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:16:19,987 INFO sqlalchemy.engine.base.Engine Thread-188 : (100,)
2020-01-30 09:16:19,987 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,988 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0)
2020-01-30 09:16:19,988 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (103, 'Cisco', 'Cisco', 100, 0, 0, 0)
2020-01-30 09:16:19,988 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (104, 'F5', 'F5', 100, 0, 0, 0)
2020-01-30 09:16:19,988 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (101, 'Fortigate', 'Fortigate', 100, 0, 0, 1)
2020-01-30 09:16:19,988 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (102, 'Juniper', 'Juniper', 100, 0, 0, 0)
2020-01-30 09:16:19,989 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 09:16:19,989 INFO sqlalchemy.engine.base.Engine Thread-188 : (1,)
2020-01-30 09:16:19,990 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,990 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 09:16:19,990 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 09:16:19,992 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 09:16:19,992 INFO sqlalchemy.engine.base.Engine Thread-188 : (1,)
2020-01-30 09:16:19,992 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,992 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (61, 'United Kingdom', 'GBR', 1, 0, 0, 1)
2020-01-30 09:16:19,992 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (69, 'India', 'IND', 1, 0, 0, 1)
2020-01-30 09:16:19,994 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 09:16:19,994 INFO sqlalchemy.engine.base.Engine Thread-188 : (105,)
2020-01-30 09:16:19,994 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,995 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 09:16:19,995 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 09:16:19,996 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 09:16:19,996 INFO sqlalchemy.engine.base.Engine Thread-188 : (92,)
2020-01-30 09:16:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (95, 'FTE', 'FTE', 92, 0, 0, 0)
2020-01-30 09:16:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (96, 'NFTE', 'NFTE', 92, 0, 0, 0)
2020-01-30 09:16:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (94, 'Production', 'Production', 92, 0, 0, 0)
2020-01-30 09:16:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (93, 'Test', 'Test', 92, 0, 0, 0)
2020-01-30 09:16:19,998 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_value ASC
2020-01-30 09:16:19,998 INFO sqlalchemy.engine.base.Engine Thread-188 : (66,)
2020-01-30 09:16:19,999 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:19,999 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (68, 'Not Active', '0', 66, 0, 0, 1)
2020-01-30 09:16:19,999 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 09:16:20,023 INFO sqlalchemy.engine.base.Engine Thread-188 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:20,023 INFO sqlalchemy.engine.base.Engine Thread-188 : ('philip', 1, 1)
2020-01-30 09:16:20,024 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:20,024 DEBUG sqlalchemy.engine.base.Engine Thread-188 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:20,029 INFO sqlalchemy.engine.base.Engine Thread-188 : ROLLBACK
2020-01-30 09:16:29,221 INFO sqlalchemy.engine.base.Engine Thread-195 : BEGIN (implicit)
2020-01-30 09:16:29,222 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:16:29,223 INFO sqlalchemy.engine.base.Engine Thread-195 : (1, 1)
2020-01-30 09:16:29,223 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:29,223 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:29,226 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:29,226 INFO sqlalchemy.engine.base.Engine Thread-195 : ('philip', 1, 1)
2020-01-30 09:16:29,226 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:29,227 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:29,237 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active, parameters_1.id AS parameters_1_id, parameters_1.param_name AS parameters_1_param_name, parameters_1.param_value AS parameters_1_param_value, parameters_1.param_group AS parameters_1_param_group, parameters_1.param_parent AS parameters_1_param_parent, parameters_1.param_disabled AS parameters_1_param_disabled, parameters_1.param_critical AS parameters_1_param_critical, parameters_2.id AS parameters_2_id, parameters_2.param_name AS parameters_2_param_name, parameters_2.param_value AS parameters_2_param_value, parameters_2.param_group AS parameters_2_param_group, parameters_2.param_parent AS parameters_2_param_parent, parameters_2.param_disabled AS parameters_2_param_disabled, parameters_2.param_critical AS parameters_2_param_critical, parameters_3.id AS parameters_3_id, parameters_3.param_name AS parameters_3_param_name, parameters_3.param_value AS parameters_3_param_value, parameters_3.param_group AS parameters_3_param_group, parameters_3.param_parent AS parameters_3_param_parent, parameters_3.param_disabled AS parameters_3_param_disabled, parameters_3.param_critical AS parameters_3_param_critical, parameters_4.id AS parameters_4_id, parameters_4.param_name AS parameters_4_param_name, parameters_4.param_value AS parameters_4_param_value, parameters_4.param_group AS parameters_4_param_group, parameters_4.param_parent AS parameters_4_param_parent, parameters_4.param_disabled AS parameters_4_param_disabled, parameters_4.param_critical AS parameters_4_param_critical 
FROM complexes, parameters AS parameters_1, parameters AS parameters_2, parameters AS parameters_3, parameters AS parameters_4 
WHERE complexes.complex_manager = parameters_1.id AND complexes.complex_type = parameters_2.id AND complexes.complex_country = parameters_3.id AND complexes.complex_active = parameters_4.id
2020-01-30 09:16:29,237 INFO sqlalchemy.engine.base.Engine Thread-195 : ()
2020-01-30 09:16:29,238 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active', 'parameters_1_id', 'parameters_1_param_name', 'parameters_1_param_value', 'parameters_1_param_group', 'parameters_1_param_parent', 'parameters_1_param_disabled', 'parameters_1_param_critical', 'parameters_2_id', 'parameters_2_param_name', 'parameters_2_param_value', 'parameters_2_param_group', 'parameters_2_param_parent', 'parameters_2_param_disabled', 'parameters_2_param_critical', 'parameters_3_id', 'parameters_3_param_name', 'parameters_3_param_value', 'parameters_3_param_group', 'parameters_3_param_parent', 'parameters_3_param_disabled', 'parameters_3_param_critical', 'parameters_4_id', 'parameters_4_param_name', 'parameters_4_param_value', 'parameters_4_param_group', 'parameters_4_param_parent', 'parameters_4_param_disabled', 'parameters_4_param_critical')
2020-01-30 09:16:29,240 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67, 87, 'CheckPoint CMA', 'CheckPoint CMA', 2, 0, 0, 0, 108, 'CheckPoint', 'CheckPoint', 100, 0, 0, 0, 69, 'India', 'IND', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 09:16:29,240 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67, 86, 'FortiManager', 'Fortigate FortiManager', 2, 0, 0, 0, 103, 'Cisco', 'Cisco', 100, 0, 0, 0, 61, 'United Kingdom', 'GBR', 1, 0, 0, 1, 67, 'Active', '1', 66, 0, 0, 1)
2020-01-30 09:16:29,244 INFO sqlalchemy.engine.base.Engine Thread-195 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:29,244 INFO sqlalchemy.engine.base.Engine Thread-195 : ('philip', 1, 1)
2020-01-30 09:16:29,244 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:29,245 DEBUG sqlalchemy.engine.base.Engine Thread-195 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:29,246 INFO sqlalchemy.engine.base.Engine Thread-195 : ROLLBACK
2020-01-30 09:16:33,534 INFO sqlalchemy.engine.base.Engine Thread-202 : BEGIN (implicit)
2020-01-30 09:16:33,535 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 09:16:33,535 INFO sqlalchemy.engine.base.Engine Thread-202 : (1, 1)
2020-01-30 09:16:33,536 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:33,536 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:33,538 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:33,538 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-01-30 09:16:33,539 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:33,539 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:33,541 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:16:33,541 INFO sqlalchemy.engine.base.Engine Thread-202 : (75,)
2020-01-30 09:16:33,541 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:33,542 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (76, 'Application Log', 'LOG_FILE', 75, 0, 0, 1)
2020-01-30 09:16:33,542 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (77, 'Database Log', 'DB_LOG_FILE', 75, 0, 0, 1)
2020-01-30 09:16:33,543 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 09:16:33,543 INFO sqlalchemy.engine.base.Engine Thread-202 : (78,)
2020-01-30 09:16:33,543 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 09:16:33,544 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (79, 'Show 10 Records', '10', 78, 0, 0, 1)
2020-01-30 09:16:33,544 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (80, 'Show 100 Records', '100', 78, 0, 0, 1)
2020-01-30 09:16:33,544 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (81, 'Show All Records', '99999', 78, 0, 0, 1)
2020-01-30 09:16:33,560 INFO sqlalchemy.engine.base.Engine Thread-202 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 09:16:33,560 INFO sqlalchemy.engine.base.Engine Thread-202 : ('philip', 1, 1)
2020-01-30 09:16:33,560 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 09:16:33,561 DEBUG sqlalchemy.engine.base.Engine Thread-202 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 09:16:35,321 INFO sqlalchemy.engine.base.Engine Thread-202 : ROLLBACK
2020-01-30 12:32:53,457 INFO sqlalchemy.engine.base.Engine Thread-210 : BEGIN (implicit)
2020-01-30 12:32:53,459 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 12:32:53,459 INFO sqlalchemy.engine.base.Engine Thread-210 : (1, 1)
2020-01-30 12:32:53,460 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:32:53,460 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:32:53,463 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 12:32:53,463 INFO sqlalchemy.engine.base.Engine Thread-210 : ('philip', 1, 1)
2020-01-30 12:32:53,464 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:32:53,464 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:32:53,482 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 12:32:53,482 INFO sqlalchemy.engine.base.Engine Thread-210 : ('philip', 1, 1)
2020-01-30 12:32:53,483 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:32:53,483 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:32:53,487 INFO sqlalchemy.engine.base.Engine Thread-210 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled, roles.id AS roles_id, roles.role_name AS roles_role_name, roles.role_admin AS roles_role_admin, roles.role_app_sections AS roles_role_app_sections, roles.created_date AS roles_created_date, roles.enabled AS roles_enabled, parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM users INNER JOIN roles ON roles.id = users.`role` LEFT OUTER JOIN parameters ON parameters.id = users.vendor ORDER BY users.id ASC
2020-01-30 12:32:53,487 INFO sqlalchemy.engine.base.Engine Thread-210 : ()
2020-01-30 12:32:53,488 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled', 'roles_id', 'roles_role_name', 'roles_role_admin', 'roles_role_app_sections', 'roles_created_date', 'roles_enabled', 'parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 12:32:53,489 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 12:32:53,489 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 64, 'Vendor-name1', 'Vendor-name1', 63, 0, 0, 0)
2020-01-30 12:32:53,490 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0, 2, 'Administrator User Access', 1, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 37, 55), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 12:32:53,490 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 70, 'Main-Organisation', 'Main-Organisation', 63, 0, 0, 0)
2020-01-30 12:32:53,490 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 12:32:53,490 DEBUG sqlalchemy.engine.base.Engine Thread-210 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1, 1, 'Standard User Access', 0, 'LOGIN', datetime.datetime(2020, 1, 29, 19, 35, 33), 1, 65, 'Vendor-name2', 'Vendor-name2', 63, 0, 0, 0)
2020-01-30 12:32:53,492 INFO sqlalchemy.engine.base.Engine Thread-210 : ROLLBACK
2020-01-30 12:33:15,299 INFO sqlalchemy.engine.base.Engine Thread-217 : BEGIN (implicit)
2020-01-30 12:33:15,301 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 12:33:15,301 INFO sqlalchemy.engine.base.Engine Thread-217 : ()
2020-01-30 12:33:15,303 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 12:33:15,303 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 12:33:15,303 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 12:33:15,305 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 12:33:15,306 INFO sqlalchemy.engine.base.Engine Thread-217 : (1, 1)
2020-01-30 12:33:15,306 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:33:15,307 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:33:15,310 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 12:33:15,311 INFO sqlalchemy.engine.base.Engine Thread-217 : ('philip', 1, 1)
2020-01-30 12:33:15,311 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:33:15,311 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:33:15,313 INFO sqlalchemy.engine.base.Engine Thread-217 : ROLLBACK
2020-01-30 12:33:15,766 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-01-30 12:33:15,768 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:33:15,768 INFO sqlalchemy.engine.base.Engine Thread-224 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 12:33:15,769 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('start', 'end', 'title', 'description')
2020-01-30 12:33:15,770 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-01-30 12:33:15,783 INFO sqlalchemy.engine.base.Engine Thread-225 : BEGIN (implicit)
2020-01-30 12:33:15,785 INFO sqlalchemy.engine.base.Engine Thread-225 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:33:15,785 INFO sqlalchemy.engine.base.Engine Thread-225 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 12:33:15,786 DEBUG sqlalchemy.engine.base.Engine Thread-225 : Col ('start', 'end', 'title', 'description')
2020-01-30 12:33:15,787 INFO sqlalchemy.engine.base.Engine Thread-225 : ROLLBACK
2020-01-30 12:33:19,219 INFO sqlalchemy.engine.base.Engine Thread-226 : BEGIN (implicit)
2020-01-30 12:33:19,220 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 12:33:19,220 INFO sqlalchemy.engine.base.Engine Thread-226 : ('0', 1)
2020-01-30 12:33:19,221 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 12:33:19,226 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 12:33:19,226 INFO sqlalchemy.engine.base.Engine Thread-226 : ()
2020-01-30 12:33:19,227 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 12:33:19,228 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 12:33:19,228 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 12:33:19,229 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 12:33:19,229 INFO sqlalchemy.engine.base.Engine Thread-226 : (97,)
2020-01-30 12:33:19,230 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 12:33:19,230 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 12:33:19,230 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 12:33:19,231 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 12:33:19,231 INFO sqlalchemy.engine.base.Engine Thread-226 : (105,)
2020-01-30 12:33:19,232 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 12:33:19,232 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 12:33:19,232 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 12:33:19,235 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 12:33:19,235 INFO sqlalchemy.engine.base.Engine Thread-226 : (1, 1)
2020-01-30 12:33:19,236 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 12:33:19,236 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 12:33:19,238 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 12:33:19,239 INFO sqlalchemy.engine.base.Engine Thread-226 : (1, 1)
2020-01-30 12:33:19,239 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:33:19,239 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:33:19,243 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 12:33:19,243 INFO sqlalchemy.engine.base.Engine Thread-226 : ('philip', 1, 1)
2020-01-30 12:33:19,244 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:33:19,244 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:33:19,247 INFO sqlalchemy.engine.base.Engine Thread-226 : ROLLBACK
2020-01-30 12:35:16,442 INFO sqlalchemy.engine.base.Engine Thread-234 : BEGIN (implicit)
2020-01-30 12:35:16,444 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 12:35:16,444 INFO sqlalchemy.engine.base.Engine Thread-234 : ()
2020-01-30 12:35:16,447 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 12:35:16,447 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 12:35:16,447 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 12:35:16,450 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 12:35:16,450 INFO sqlalchemy.engine.base.Engine Thread-234 : (1, 1)
2020-01-30 12:35:16,450 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:35:16,451 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:35:16,455 INFO sqlalchemy.engine.base.Engine Thread-234 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 12:35:16,455 INFO sqlalchemy.engine.base.Engine Thread-234 : ('philip', 1, 1)
2020-01-30 12:35:16,456 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:35:16,456 DEBUG sqlalchemy.engine.base.Engine Thread-234 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:35:16,457 INFO sqlalchemy.engine.base.Engine Thread-234 : ROLLBACK
2020-01-30 12:35:16,959 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-01-30 12:35:16,960 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:35:16,961 INFO sqlalchemy.engine.base.Engine Thread-241 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 12:35:16,961 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('start', 'end', 'title', 'description')
2020-01-30 12:35:16,962 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-01-30 12:35:16,978 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-01-30 12:35:16,979 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:35:16,980 INFO sqlalchemy.engine.base.Engine Thread-242 : (datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 12:35:16,980 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('start', 'end', 'title', 'description')
2020-01-30 12:35:16,981 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-01-30 12:35:20,867 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-01-30 12:35:20,868 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:35:20,868 INFO sqlalchemy.engine.base.Engine Thread-243 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 12:35:20,869 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('start', 'end', 'title', 'description')
2020-01-30 12:35:20,870 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 12:35:20,870 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-01-30 12:35:20,887 INFO sqlalchemy.engine.base.Engine Thread-244 : BEGIN (implicit)
2020-01-30 12:35:20,888 INFO sqlalchemy.engine.base.Engine Thread-244 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:35:20,888 INFO sqlalchemy.engine.base.Engine Thread-244 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 12:35:20,889 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Col ('start', 'end', 'title', 'description')
2020-01-30 12:35:20,889 DEBUG sqlalchemy.engine.base.Engine Thread-244 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)')
2020-01-30 12:35:20,890 INFO sqlalchemy.engine.base.Engine Thread-244 : ROLLBACK
2020-01-30 12:44:22,289 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 12:44:22,289 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,290 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-30 12:44:22,291 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-01-30 12:44:22,291 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 12:44:22,292 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,292 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-30 12:44:22,292 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-01-30 12:44:22,293 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-01-30 12:44:22,293 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,293 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-01-30 12:44:22,293 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-01-30 12:44:22,294 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 12:44:22,294 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,294 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 12:44:22,295 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 12:44:22,295 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 12:44:22,295 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,296 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 12:44:22,296 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,297 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 12:44:22,297 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 12:44:22,297 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 12:44:22,300 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 12:44:22,300 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 12:44:22,301 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:44:22,301 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:44:22,328 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 12:45:12,570 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 12:45:12,572 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, backgroundColor:red 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 12:45:12,572 INFO sqlalchemy.engine.base.Engine Thread-10 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 12:45:12,573 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 12:45:12,987 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 12:45:12,988 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 12:45:12,988 INFO sqlalchemy.engine.base.Engine Thread-11 : (1, 1)
2020-01-30 12:45:12,989 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 12:45:12,990 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 12:45:13,002 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 13:00:15,427 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:00:15,428 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,429 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:00:15,430 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:00:15,430 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:00:15,430 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:00:15,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:00:15,431 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:00:15,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,432 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:00:15,432 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:00:15,432 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:00:15,432 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:00:15,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:00:15,434 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:00:15,434 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,435 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:00:15,435 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,436 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:00:15,436 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:00:15,436 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:00:15,438 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, backgroundColor:red AS style 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:00:15,438 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:00:15,439 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:00:15,724 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:00:15,727 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:00:15,727 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:00:15,728 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:00:15,728 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:00:15,746 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:01:08,673 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:01:08,674 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:01:08,675 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:01:08,676 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:01:08,676 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,676 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:01:08,676 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:01:08,677 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:01:08,677 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,677 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:01:08,677 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:01:08,677 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:01:08,677 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,678 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:01:08,678 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:01:08,679 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:01:08,679 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,679 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:01:08,679 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,680 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:01:08,680 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:08,681 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:01:08,682 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, backgroundColor\:red AS style 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:01:08,682 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:01:08,684 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:01:08,996 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:01:08,999 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:01:08,999 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:01:09,000 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:01:09,000 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:01:09,017 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:01:35,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:01:35,345 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,349 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:01:35,349 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:01:35,350 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:01:35,350 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,351 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:01:35,351 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:01:35,351 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:01:35,351 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,352 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:01:35,352 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:01:35,352 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:01:35,352 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,353 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:01:35,353 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:01:35,354 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:01:35,354 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,355 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:01:35,355 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,356 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:01:35,356 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:01:35,356 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:01:35,358 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, red AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:01:35,358 INFO sqlalchemy.engine.base.Engine Thread-2 : (datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:01:35,360 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:01:35,655 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:01:35,658 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:01:35,658 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:01:35,659 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:01:35,659 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:01:35,676 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:04:14,332 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:04:14,332 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,334 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-30 13:04:14,334 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('sql_mode', '')
2020-01-30 13:04:14,335 INFO sqlalchemy.engine.base.Engine Thread-3 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:04:14,335 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,336 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Variable_name', 'Value')
2020-01-30 13:04:14,336 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('lower_case_table_names', '0')
2020-01-30 13:04:14,336 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT DATABASE()
2020-01-30 13:04:14,337 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,337 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('DATABASE()',)
2020-01-30 13:04:14,337 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('fmapp',)
2020-01-30 13:04:14,337 INFO sqlalchemy.engine.base.Engine Thread-3 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:04:14,337 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,338 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:04:14,338 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:04:14,339 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:04:14,339 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,341 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:04:14,341 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,342 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:04:14,342 INFO sqlalchemy.engine.base.Engine Thread-3 : ()
2020-01-30 13:04:14,342 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:04:14,345 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:04:14,345 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:04:14,346 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:04:14,347 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:04:14,365 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:07:57,439 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:07:57,440 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,441 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:07:57,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:07:57,442 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:07:57,442 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,443 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:07:57,443 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:07:57,443 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:07:57,443 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,444 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:07:57,444 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:07:57,444 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:07:57,444 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,445 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:07:57,445 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:07:57,446 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:07:57,446 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,446 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:07:57,447 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,447 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:07:57,447 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:07:57,448 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:07:57,449 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:07:57,449 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:07:57,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:07:57,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:07:57,452 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:07:57,747 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:07:57,750 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:07:57,750 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:07:57,751 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:07:57,751 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:07:57,770 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:08:19,994 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 13:08:19,995 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:19,995 INFO sqlalchemy.engine.base.Engine Thread-4 : ('red', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:08:19,996 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:19,996 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red')
2020-01-30 13:08:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red')
2020-01-30 13:08:19,997 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red')
2020-01-30 13:08:19,998 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 13:08:20,302 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-30 13:08:20,303 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:08:20,303 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-30 13:08:20,304 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:08:20,304 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:08:20,305 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-30 13:08:41,296 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-30 13:08:41,297 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:08:41,298 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-01-30 13:08:41,298 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:08:41,299 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:08:41,300 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT dashboard.id AS dashboard_id, dashboard.fm_text AS dashboard_fm_text, dashboard.fg_text AS dashboard_fg_text, dashboard.user_text AS dashboard_user_text, dashboard.log_text AS dashboard_log_text 
FROM dashboard
2020-01-30 13:08:41,300 INFO sqlalchemy.engine.base.Engine Thread-6 : ()
2020-01-30 13:08:41,301 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('dashboard_id', 'dashboard_fm_text', 'dashboard_fg_text', 'dashboard_user_text', 'dashboard_log_text')
2020-01-30 13:08:41,301 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  ... (147 characters truncated) ... illum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.')
2020-01-30 13:08:41,396 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users
2020-01-30 13:08:41,396 INFO sqlalchemy.engine.base.Engine Thread-6 : ()
2020-01-30 13:08:41,397 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:08:41,397 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:08:41,397 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'bob', 'Bob', 'Smith', 'User account for Bob Smith 123', '$2b$12$S1dmklX6EOC.5JeHQ8imiO3Wa6hZcNBb7zgZHbuqUWyxmMWv3WjrS', 'bob@somewhere.com', 1, 64, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 1, 26, 17), 'philip', 0)
2020-01-30 13:08:41,397 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (3, 'frank', 'Frank', 'Black', 'User account for Frank Black test 987654321', '$2b$12$nbRhfcVg5W70EbAxHek.3OABSd5twyY9Ezmr5Cr4LRXOgTNZsLYSe', 'frank@somewhere.com', 2, 65, datetime.datetime(2019, 8, 28, 11, 46, 8), None, datetime.datetime(2020, 1, 30, 9, 5, 57), 'frank', 0)
2020-01-30 13:08:41,397 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (4, 'evan', 'Evan', 'Troon', 'Account for Evan Troon', '$2b$12$fRYijfQhLPT1wH9/akayhu/1F9l1IgozFbXG4uMk0p5H2u66/tUVy', 'evan@someone.com', 1, 70, datetime.datetime(2019, 9, 2, 15, 14, 53), None, datetime.datetime(2020, 1, 28, 16, 52, 21), 'philip', 1)
2020-01-30 13:08:41,398 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (6, 'dylan', 'Dylan', 'Troon', 'Dylan Troon TEST12399', '$2b$12$kyttQmBiV7Gxn4NdG1gh1eOwfzfp8LEy5.PUhMLcUyWlVd8F9DSku', 'dylan@somewhere.com', 1, 65, datetime.datetime(2019, 9, 2, 16, 50, 50), None, datetime.datetime(2020, 1, 26, 19, 12, 30), 'philip', 1)
2020-01-30 13:08:41,398 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (8, 'philip2', 'Philip', 'Troon', 'Test account', '$2b$12$Hpbh0Dfjr9dtIcXAngUGKedF9XdsPlZWtQ0a.iZg0J0zdzAepBKru', 'philiptroon@gmail.com', 1, 65, datetime.datetime(2020, 1, 29, 19, 28, 53), None, datetime.datetime(2020, 1, 30, 9, 4, 24), 'philip2', 1)
2020-01-30 13:08:41,452 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:08:41,452 INFO sqlalchemy.engine.base.Engine Thread-6 : ('philip', 1, 1)
2020-01-30 13:08:41,452 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:08:41,453 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:08:41,454 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-30 13:08:43,974 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 13:08:43,979 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:08:43,979 INFO sqlalchemy.engine.base.Engine Thread-13 : ()
2020-01-30 13:08:43,982 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:08:43,982 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:08:43,982 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:08:43,984 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:08:43,984 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-01-30 13:08:43,985 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:08:43,985 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:08:43,996 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:08:43,996 INFO sqlalchemy.engine.base.Engine Thread-13 : ('philip', 1, 1)
2020-01-30 13:08:43,997 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:08:43,997 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:08:43,998 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 13:08:44,398 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-30 13:08:44,399 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:44,399 INFO sqlalchemy.engine.base.Engine Thread-20 : ('red', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:08:44,400 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:44,400 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-30 13:08:44,415 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-30 13:08:44,416 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:44,416 INFO sqlalchemy.engine.base.Engine Thread-21 : ('red', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:08:44,416 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:44,417 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-30 13:08:45,983 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-01-30 13:08:45,984 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:45,984 INFO sqlalchemy.engine.base.Engine Thread-22 : ('red', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:08:45,985 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:45,985 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:45,986 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-01-30 13:08:46,001 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 13:08:46,002 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:46,002 INFO sqlalchemy.engine.base.Engine Thread-23 : ('red', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:08:46,002 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:46,002 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:46,003 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 13:08:47,503 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 13:08:47,504 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:47,505 INFO sqlalchemy.engine.base.Engine Thread-24 : ('red', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:08:47,505 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:47,506 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:47,506 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 13:08:47,531 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-30 13:08:47,532 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:47,532 INFO sqlalchemy.engine.base.Engine Thread-25 : ('red', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:08:47,532 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:47,533 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:47,533 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-30 13:08:48,191 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-01-30 13:08:48,192 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:48,192 INFO sqlalchemy.engine.base.Engine Thread-26 : ('red', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:08:48,193 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:48,194 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:48,194 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-01-30 13:08:48,208 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-01-30 13:08:48,209 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:08:48,209 INFO sqlalchemy.engine.base.Engine Thread-27 : ('red', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:08:48,210 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description', 'backgroundColor')
2020-01-30 13:08:48,210 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red')
2020-01-30 13:08:48,211 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-01-30 13:10:42,497 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:10:42,497 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,498 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:10:42,498 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:10:42,499 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:10:42,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,499 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:10:42,500 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:10:42,500 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:10:42,500 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,500 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:10:42,500 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:10:42,501 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:10:42,501 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,501 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:10:42,502 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:10:42,502 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:10:42,502 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,503 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:10:42,503 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,504 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:10:42,504 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,504 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:10:42,510 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:10:42,510 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:10:42,511 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:10:42,512 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:10:42,512 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:10:42,516 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:10:42,516 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 13:10:42,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:10:42,517 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:10:42,583 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:10:42,583 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 13:10:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:10:42,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:10:42,586 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:10:43,038 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 13:10:43,040 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:10:43,040 INFO sqlalchemy.engine.base.Engine Thread-9 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:10:43,041 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:10:43,041 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 13:10:43,058 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 13:10:43,059 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:10:43,059 INFO sqlalchemy.engine.base.Engine Thread-10 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:10:43,060 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:10:43,061 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 13:11:30,492 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:11:30,493 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,494 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:11:30,494 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:11:30,495 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:11:30,495 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:11:30,495 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:11:30,496 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:11:30,496 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:11:30,496 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:11:30,496 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:11:30,497 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:11:30,497 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:11:30,498 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:11:30,498 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,499 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:11:30,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,499 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:11:30,499 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,500 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:11:30,506 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:11:30,507 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:11:30,508 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:11:30,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:11:30,509 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:11:30,512 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:11:30,513 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 13:11:30,513 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:11:30,513 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:11:30,581 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:11:30,581 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 13:11:30,582 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:11:30,582 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:11:30,584 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:11:31,014 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 13:11:31,016 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:31,016 INFO sqlalchemy.engine.base.Engine Thread-9 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:11:31,017 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:31,017 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 13:11:31,031 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 13:11:31,032 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:31,032 INFO sqlalchemy.engine.base.Engine Thread-10 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:11:31,033 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:31,034 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 13:11:33,061 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 13:11:33,062 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:33,062 INFO sqlalchemy.engine.base.Engine Thread-12 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:11:33,063 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:33,063 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:33,064 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 13:11:33,078 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 13:11:33,079 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:33,079 INFO sqlalchemy.engine.base.Engine Thread-13 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:11:33,080 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:33,081 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:33,081 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 13:11:35,074 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 13:11:35,075 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:35,075 INFO sqlalchemy.engine.base.Engine Thread-14 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:35,076 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:35,076 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:35,077 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 13:11:35,093 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 13:11:35,094 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:35,094 INFO sqlalchemy.engine.base.Engine Thread-15 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:35,095 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:35,095 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:35,096 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 13:11:36,354 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 13:11:36,355 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:36,356 INFO sqlalchemy.engine.base.Engine Thread-16 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:11:36,356 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:36,357 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:36,357 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 13:11:36,371 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 13:11:36,372 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:36,372 INFO sqlalchemy.engine.base.Engine Thread-17 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:11:36,373 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:36,373 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:36,373 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 13:11:37,599 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-30 13:11:37,600 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:37,600 INFO sqlalchemy.engine.base.Engine Thread-18 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:37,601 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:37,601 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-30 13:11:37,619 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-30 13:11:37,620 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:37,620 INFO sqlalchemy.engine.base.Engine Thread-19 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:37,621 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:37,621 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:37,622 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-30 13:11:38,128 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-30 13:11:38,129 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:38,129 INFO sqlalchemy.engine.base.Engine Thread-20 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:11:38,130 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:38,130 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:11:38,131 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:11:38,131 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-30 13:11:38,147 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-30 13:11:38,148 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:38,148 INFO sqlalchemy.engine.base.Engine Thread-21 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:11:38,149 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:38,149 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:11:38,149 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:11:38,150 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-30 13:11:39,457 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-01-30 13:11:39,458 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:39,458 INFO sqlalchemy.engine.base.Engine Thread-22 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:39,459 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:39,459 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:39,459 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-01-30 13:11:39,480 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 13:11:39,481 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:39,481 INFO sqlalchemy.engine.base.Engine Thread-23 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:39,482 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:39,482 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:39,482 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 13:11:41,074 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 13:11:41,075 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:41,076 INFO sqlalchemy.engine.base.Engine Thread-24 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:11:41,076 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:41,077 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:41,077 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 13:11:41,092 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-30 13:11:41,093 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:41,093 INFO sqlalchemy.engine.base.Engine Thread-25 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:11:41,094 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:41,094 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:41,095 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-30 13:11:41,953 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-01-30 13:11:41,954 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:41,954 INFO sqlalchemy.engine.base.Engine Thread-26 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:41,955 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:41,956 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:41,956 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-01-30 13:11:41,970 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-01-30 13:11:41,971 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:11:41,971 INFO sqlalchemy.engine.base.Engine Thread-27 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:11:41,972 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:11:41,972 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:11:41,973 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-01-30 13:12:33,910 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-30 13:12:33,912 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:33,912 INFO sqlalchemy.engine.base.Engine Thread-29 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:12:33,913 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:33,913 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:12:33,913 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:12:33,914 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-30 13:12:33,932 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-30 13:12:33,933 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:33,933 INFO sqlalchemy.engine.base.Engine Thread-30 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:12:33,934 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:33,934 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:12:33,934 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:12:33,935 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-30 13:12:35,838 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 13:12:35,839 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:35,839 INFO sqlalchemy.engine.base.Engine Thread-31 : ('red', 'white', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 13:12:35,840 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:35,841 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:12:35,841 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:12:35,842 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-30 13:12:35,859 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 13:12:35,859 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:35,860 INFO sqlalchemy.engine.base.Engine Thread-32 : ('red', 'white', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 13:12:35,860 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:35,860 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:12:35,861 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:12:35,861 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 13:12:37,330 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-01-30 13:12:37,331 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:37,331 INFO sqlalchemy.engine.base.Engine Thread-33 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:12:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:12:37,332 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:12:37,333 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-01-30 13:12:37,347 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-30 13:12:37,348 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:37,348 INFO sqlalchemy.engine.base.Engine Thread-34 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:12:37,349 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:37,349 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:12:37,349 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:12:37,350 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-30 13:12:37,710 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-01-30 13:12:37,711 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:37,711 INFO sqlalchemy.engine.base.Engine Thread-35 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:12:37,712 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:37,712 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:12:37,713 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-01-30 13:12:37,725 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-01-30 13:12:37,726 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:37,726 INFO sqlalchemy.engine.base.Engine Thread-36 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:12:37,726 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:37,727 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:12:37,727 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-01-30 13:12:38,202 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-30 13:12:38,203 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:38,203 INFO sqlalchemy.engine.base.Engine Thread-37 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:12:38,204 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:38,204 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:12:38,204 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-30 13:12:38,218 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-01-30 13:12:38,219 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:12:38,219 INFO sqlalchemy.engine.base.Engine Thread-38 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:12:38,220 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:12:38,220 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:12:38,220 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-01-30 13:14:36,276 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-30 13:14:36,278 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:14:36,278 INFO sqlalchemy.engine.base.Engine Thread-39 : ()
2020-01-30 13:14:36,280 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:14:36,281 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:14:36,281 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:14:36,283 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:14:36,283 INFO sqlalchemy.engine.base.Engine Thread-39 : (1, 1)
2020-01-30 13:14:36,284 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:14:36,284 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:14:36,296 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:14:36,296 INFO sqlalchemy.engine.base.Engine Thread-39 : ('philip', 1, 1)
2020-01-30 13:14:36,297 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:14:36,297 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:14:36,299 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-30 13:14:36,705 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-30 13:14:36,706 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:14:36,707 INFO sqlalchemy.engine.base.Engine Thread-46 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:14:36,707 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:14:36,708 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-01-30 13:14:36,726 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-01-30 13:14:36,727 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:14:36,727 INFO sqlalchemy.engine.base.Engine Thread-47 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:14:36,728 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:14:36,729 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-01-30 13:14:38,329 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-01-30 13:14:38,330 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:14:38,330 INFO sqlalchemy.engine.base.Engine Thread-49 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:14:38,330 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:14:38,331 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:14:38,331 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-01-30 13:14:38,350 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-01-30 13:14:38,351 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:14:38,351 INFO sqlalchemy.engine.base.Engine Thread-50 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:14:38,352 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:14:38,352 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:14:38,353 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-01-30 13:17:02,487 INFO sqlalchemy.engine.base.Engine Thread-51 : BEGIN (implicit)
2020-01-30 13:17:02,490 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:17:02,490 INFO sqlalchemy.engine.base.Engine Thread-51 : ()
2020-01-30 13:17:02,493 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:17:02,493 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:17:02,493 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:17:02,496 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:17:02,496 INFO sqlalchemy.engine.base.Engine Thread-51 : (1, 1)
2020-01-30 13:17:02,497 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:17:02,497 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:17:02,510 INFO sqlalchemy.engine.base.Engine Thread-51 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:17:02,510 INFO sqlalchemy.engine.base.Engine Thread-51 : ('philip', 1, 1)
2020-01-30 13:17:02,511 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:17:02,511 DEBUG sqlalchemy.engine.base.Engine Thread-51 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:17:02,513 INFO sqlalchemy.engine.base.Engine Thread-51 : ROLLBACK
2020-01-30 13:17:03,053 INFO sqlalchemy.engine.base.Engine Thread-58 : BEGIN (implicit)
2020-01-30 13:17:03,054 INFO sqlalchemy.engine.base.Engine Thread-58 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:03,054 INFO sqlalchemy.engine.base.Engine Thread-58 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:17:03,055 DEBUG sqlalchemy.engine.base.Engine Thread-58 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:03,056 INFO sqlalchemy.engine.base.Engine Thread-58 : ROLLBACK
2020-01-30 13:17:03,072 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-01-30 13:17:03,073 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:03,073 INFO sqlalchemy.engine.base.Engine Thread-59 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:17:03,073 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:03,074 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-01-30 13:17:04,506 INFO sqlalchemy.engine.base.Engine Thread-61 : BEGIN (implicit)
2020-01-30 13:17:04,507 INFO sqlalchemy.engine.base.Engine Thread-61 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:04,507 INFO sqlalchemy.engine.base.Engine Thread-61 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:17:04,508 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:04,508 DEBUG sqlalchemy.engine.base.Engine Thread-61 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:17:04,509 INFO sqlalchemy.engine.base.Engine Thread-61 : ROLLBACK
2020-01-30 13:17:04,529 INFO sqlalchemy.engine.base.Engine Thread-62 : BEGIN (implicit)
2020-01-30 13:17:04,530 INFO sqlalchemy.engine.base.Engine Thread-62 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:04,530 INFO sqlalchemy.engine.base.Engine Thread-62 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:17:04,531 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:04,531 DEBUG sqlalchemy.engine.base.Engine Thread-62 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:17:04,532 INFO sqlalchemy.engine.base.Engine Thread-62 : ROLLBACK
2020-01-30 13:17:08,396 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-01-30 13:17:08,398 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:17:08,398 INFO sqlalchemy.engine.base.Engine Thread-63 : ()
2020-01-30 13:17:08,399 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:17:08,400 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:17:08,400 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:17:08,402 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:17:08,402 INFO sqlalchemy.engine.base.Engine Thread-63 : (1, 1)
2020-01-30 13:17:08,402 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:17:08,403 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:17:08,407 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:17:08,407 INFO sqlalchemy.engine.base.Engine Thread-63 : ('philip', 1, 1)
2020-01-30 13:17:08,408 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:17:08,408 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:17:08,410 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-01-30 13:17:08,799 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-01-30 13:17:08,800 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:08,800 INFO sqlalchemy.engine.base.Engine Thread-70 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:17:08,801 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:08,802 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-01-30 13:17:08,821 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-01-30 13:17:08,822 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:08,822 INFO sqlalchemy.engine.base.Engine Thread-71 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:17:08,823 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:08,824 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-01-30 13:17:10,645 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-01-30 13:17:10,646 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:10,646 INFO sqlalchemy.engine.base.Engine Thread-73 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:17:10,647 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:10,647 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:17:10,648 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-01-30 13:17:10,662 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-30 13:17:10,663 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:17:10,663 INFO sqlalchemy.engine.base.Engine Thread-74 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:17:10,664 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:17:10,664 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:17:10,665 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-30 13:21:54,822 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-01-30 13:21:54,825 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:21:54,826 INFO sqlalchemy.engine.base.Engine Thread-75 : ()
2020-01-30 13:21:54,828 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:21:54,828 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:21:54,829 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:21:54,831 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:21:54,831 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-01-30 13:21:54,832 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:21:54,832 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:21:54,844 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:21:54,844 INFO sqlalchemy.engine.base.Engine Thread-75 : ('philip', 1, 1)
2020-01-30 13:21:54,845 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:21:54,845 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:21:54,846 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-01-30 13:21:55,380 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-01-30 13:21:55,381 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:21:55,381 INFO sqlalchemy.engine.base.Engine Thread-82 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:21:55,381 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:21:55,382 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-01-30 13:21:55,397 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-01-30 13:21:55,398 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:21:55,398 INFO sqlalchemy.engine.base.Engine Thread-83 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:21:55,399 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:21:55,399 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-01-30 13:21:56,767 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-01-30 13:21:56,768 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:21:56,768 INFO sqlalchemy.engine.base.Engine Thread-85 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:21:56,769 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:21:56,769 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:21:56,770 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-01-30 13:21:56,784 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-01-30 13:21:56,786 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:21:56,786 INFO sqlalchemy.engine.base.Engine Thread-86 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:21:56,787 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:21:56,787 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:21:56,788 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-01-30 13:22:17,271 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-01-30 13:22:17,272 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:17,272 INFO sqlalchemy.engine.base.Engine Thread-87 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:22:17,273 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:17,273 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:22:17,274 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-01-30 13:22:17,608 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-01-30 13:22:17,609 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:22:17,609 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-01-30 13:22:17,609 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:22:17,610 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:22:17,611 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-01-30 13:22:35,441 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-01-30 13:22:35,442 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:35,442 INFO sqlalchemy.engine.base.Engine Thread-89 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:22:35,443 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:35,443 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:22:35,444 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-01-30 13:22:35,459 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-01-30 13:22:35,460 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:35,460 INFO sqlalchemy.engine.base.Engine Thread-90 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:22:35,460 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:35,461 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:22:35,461 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-01-30 13:22:37,547 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-01-30 13:22:37,549 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:22:37,549 INFO sqlalchemy.engine.base.Engine Thread-91 : ()
2020-01-30 13:22:37,550 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:22:37,551 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:22:37,551 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:22:37,553 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:22:37,553 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-01-30 13:22:37,553 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:22:37,554 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:22:37,557 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:22:37,558 INFO sqlalchemy.engine.base.Engine Thread-91 : ('philip', 1, 1)
2020-01-30 13:22:37,558 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:22:37,558 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:22:37,560 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-01-30 13:22:37,981 INFO sqlalchemy.engine.base.Engine Thread-98 : BEGIN (implicit)
2020-01-30 13:22:37,982 INFO sqlalchemy.engine.base.Engine Thread-98 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:37,982 INFO sqlalchemy.engine.base.Engine Thread-98 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:22:37,982 DEBUG sqlalchemy.engine.base.Engine Thread-98 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:37,983 INFO sqlalchemy.engine.base.Engine Thread-98 : ROLLBACK
2020-01-30 13:22:37,998 INFO sqlalchemy.engine.base.Engine Thread-99 : BEGIN (implicit)
2020-01-30 13:22:37,999 INFO sqlalchemy.engine.base.Engine Thread-99 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:37,999 INFO sqlalchemy.engine.base.Engine Thread-99 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:22:37,999 DEBUG sqlalchemy.engine.base.Engine Thread-99 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:38,000 INFO sqlalchemy.engine.base.Engine Thread-99 : ROLLBACK
2020-01-30 13:22:39,485 INFO sqlalchemy.engine.base.Engine Thread-101 : BEGIN (implicit)
2020-01-30 13:22:39,486 INFO sqlalchemy.engine.base.Engine Thread-101 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:39,486 INFO sqlalchemy.engine.base.Engine Thread-101 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:22:39,487 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:39,487 DEBUG sqlalchemy.engine.base.Engine Thread-101 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:22:39,487 INFO sqlalchemy.engine.base.Engine Thread-101 : ROLLBACK
2020-01-30 13:22:39,506 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-01-30 13:22:39,507 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:39,507 INFO sqlalchemy.engine.base.Engine Thread-102 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:22:39,508 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:39,508 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:22:39,509 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-01-30 13:22:59,214 INFO sqlalchemy.engine.base.Engine Thread-103 : BEGIN (implicit)
2020-01-30 13:22:59,216 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:22:59,216 INFO sqlalchemy.engine.base.Engine Thread-103 : ()
2020-01-30 13:22:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:22:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:22:59,218 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:22:59,219 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:22:59,220 INFO sqlalchemy.engine.base.Engine Thread-103 : (1, 1)
2020-01-30 13:22:59,220 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:22:59,221 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:22:59,232 INFO sqlalchemy.engine.base.Engine Thread-103 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:22:59,233 INFO sqlalchemy.engine.base.Engine Thread-103 : ('philip', 1, 1)
2020-01-30 13:22:59,233 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:22:59,233 DEBUG sqlalchemy.engine.base.Engine Thread-103 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:22:59,235 INFO sqlalchemy.engine.base.Engine Thread-103 : ROLLBACK
2020-01-30 13:22:59,740 INFO sqlalchemy.engine.base.Engine Thread-110 : BEGIN (implicit)
2020-01-30 13:22:59,741 INFO sqlalchemy.engine.base.Engine Thread-110 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:59,741 INFO sqlalchemy.engine.base.Engine Thread-110 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:22:59,742 DEBUG sqlalchemy.engine.base.Engine Thread-110 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:59,743 INFO sqlalchemy.engine.base.Engine Thread-110 : ROLLBACK
2020-01-30 13:22:59,760 INFO sqlalchemy.engine.base.Engine Thread-111 : BEGIN (implicit)
2020-01-30 13:22:59,761 INFO sqlalchemy.engine.base.Engine Thread-111 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:22:59,761 INFO sqlalchemy.engine.base.Engine Thread-111 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:22:59,762 DEBUG sqlalchemy.engine.base.Engine Thread-111 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:22:59,763 INFO sqlalchemy.engine.base.Engine Thread-111 : ROLLBACK
2020-01-30 13:23:01,485 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-01-30 13:23:01,486 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:01,486 INFO sqlalchemy.engine.base.Engine Thread-113 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:23:01,487 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:01,487 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:23:01,488 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-01-30 13:23:01,502 INFO sqlalchemy.engine.base.Engine Thread-114 : BEGIN (implicit)
2020-01-30 13:23:01,503 INFO sqlalchemy.engine.base.Engine Thread-114 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:01,503 INFO sqlalchemy.engine.base.Engine Thread-114 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:23:01,504 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:01,504 DEBUG sqlalchemy.engine.base.Engine Thread-114 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:23:01,504 INFO sqlalchemy.engine.base.Engine Thread-114 : ROLLBACK
2020-01-30 13:23:19,786 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-01-30 13:23:19,787 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:23:19,788 INFO sqlalchemy.engine.base.Engine Thread-115 : ()
2020-01-30 13:23:19,789 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:23:19,789 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:23:19,789 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:23:19,791 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:23:19,791 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-01-30 13:23:19,792 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:23:19,792 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:23:19,805 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:23:19,805 INFO sqlalchemy.engine.base.Engine Thread-115 : ('philip', 1, 1)
2020-01-30 13:23:19,806 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:23:19,806 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:23:19,807 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-01-30 13:23:20,209 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-01-30 13:23:20,210 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:20,210 INFO sqlalchemy.engine.base.Engine Thread-122 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:23:20,211 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:20,212 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-01-30 13:23:20,230 INFO sqlalchemy.engine.base.Engine Thread-123 : BEGIN (implicit)
2020-01-30 13:23:20,231 INFO sqlalchemy.engine.base.Engine Thread-123 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:20,231 INFO sqlalchemy.engine.base.Engine Thread-123 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:23:20,232 DEBUG sqlalchemy.engine.base.Engine Thread-123 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:20,232 INFO sqlalchemy.engine.base.Engine Thread-123 : ROLLBACK
2020-01-30 13:23:21,572 INFO sqlalchemy.engine.base.Engine Thread-125 : BEGIN (implicit)
2020-01-30 13:23:21,573 INFO sqlalchemy.engine.base.Engine Thread-125 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:21,574 INFO sqlalchemy.engine.base.Engine Thread-125 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:23:21,574 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:21,575 DEBUG sqlalchemy.engine.base.Engine Thread-125 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:23:21,575 INFO sqlalchemy.engine.base.Engine Thread-125 : ROLLBACK
2020-01-30 13:23:21,589 INFO sqlalchemy.engine.base.Engine Thread-126 : BEGIN (implicit)
2020-01-30 13:23:21,590 INFO sqlalchemy.engine.base.Engine Thread-126 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:21,590 INFO sqlalchemy.engine.base.Engine Thread-126 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:23:21,591 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:21,591 DEBUG sqlalchemy.engine.base.Engine Thread-126 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:23:21,592 INFO sqlalchemy.engine.base.Engine Thread-126 : ROLLBACK
2020-01-30 13:23:27,723 INFO sqlalchemy.engine.base.Engine Thread-127 : BEGIN (implicit)
2020-01-30 13:23:27,727 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 13:23:27,727 INFO sqlalchemy.engine.base.Engine Thread-127 : ('0', 1)
2020-01-30 13:23:27,728 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 13:23:27,734 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:23:27,734 INFO sqlalchemy.engine.base.Engine Thread-127 : ()
2020-01-30 13:23:27,735 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:23:27,735 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:23:27,735 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:23:27,737 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 13:23:27,738 INFO sqlalchemy.engine.base.Engine Thread-127 : (97,)
2020-01-30 13:23:27,738 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 13:23:27,738 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 13:23:27,738 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 13:23:27,740 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 13:23:27,740 INFO sqlalchemy.engine.base.Engine Thread-127 : (105,)
2020-01-30 13:23:27,740 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 13:23:27,741 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 13:23:27,741 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 13:23:27,745 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 13:23:27,745 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-01-30 13:23:27,746 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:23:27,746 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:23:27,748 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:23:27,749 INFO sqlalchemy.engine.base.Engine Thread-127 : (1, 1)
2020-01-30 13:23:27,749 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:23:27,749 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:23:27,794 INFO sqlalchemy.engine.base.Engine Thread-127 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:23:27,794 INFO sqlalchemy.engine.base.Engine Thread-127 : ('philip', 1, 1)
2020-01-30 13:23:27,795 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:23:27,795 DEBUG sqlalchemy.engine.base.Engine Thread-127 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:23:27,798 INFO sqlalchemy.engine.base.Engine Thread-127 : ROLLBACK
2020-01-30 13:23:30,184 INFO sqlalchemy.engine.base.Engine Thread-134 : BEGIN (implicit)
2020-01-30 13:23:30,187 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:23:30,187 INFO sqlalchemy.engine.base.Engine Thread-134 : ()
2020-01-30 13:23:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:23:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:23:30,188 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:23:30,190 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:23:30,191 INFO sqlalchemy.engine.base.Engine Thread-134 : (1, 1)
2020-01-30 13:23:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:23:30,191 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:23:30,195 INFO sqlalchemy.engine.base.Engine Thread-134 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:23:30,195 INFO sqlalchemy.engine.base.Engine Thread-134 : ('philip', 1, 1)
2020-01-30 13:23:30,196 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:23:30,198 DEBUG sqlalchemy.engine.base.Engine Thread-134 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:23:30,200 INFO sqlalchemy.engine.base.Engine Thread-134 : ROLLBACK
2020-01-30 13:23:30,548 INFO sqlalchemy.engine.base.Engine Thread-141 : BEGIN (implicit)
2020-01-30 13:23:30,549 INFO sqlalchemy.engine.base.Engine Thread-141 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:30,549 INFO sqlalchemy.engine.base.Engine Thread-141 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:23:30,550 DEBUG sqlalchemy.engine.base.Engine Thread-141 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:30,551 INFO sqlalchemy.engine.base.Engine Thread-141 : ROLLBACK
2020-01-30 13:23:30,567 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-01-30 13:23:30,568 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:23:30,568 INFO sqlalchemy.engine.base.Engine Thread-142 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:23:30,569 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:23:30,570 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-01-30 13:24:06,891 INFO sqlalchemy.engine.base.Engine Thread-143 : BEGIN (implicit)
2020-01-30 13:24:06,892 INFO sqlalchemy.engine.base.Engine Thread-143 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:24:06,892 INFO sqlalchemy.engine.base.Engine Thread-143 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:24:06,893 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:24:06,893 DEBUG sqlalchemy.engine.base.Engine Thread-143 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:24:06,894 INFO sqlalchemy.engine.base.Engine Thread-143 : ROLLBACK
2020-01-30 13:24:06,908 INFO sqlalchemy.engine.base.Engine Thread-144 : BEGIN (implicit)
2020-01-30 13:24:06,910 INFO sqlalchemy.engine.base.Engine Thread-144 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:24:06,910 INFO sqlalchemy.engine.base.Engine Thread-144 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:24:06,911 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:24:06,911 DEBUG sqlalchemy.engine.base.Engine Thread-144 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:24:06,912 INFO sqlalchemy.engine.base.Engine Thread-144 : ROLLBACK
2020-01-30 13:26:03,564 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:26:03,564 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,565 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:26:03,566 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:26:03,566 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:26:03,566 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:26:03,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:26:03,567 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:26:03,567 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:26:03,567 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:26:03,568 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:26:03,568 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,569 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:26:03,569 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:26:03,569 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:26:03,569 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,570 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:26:03,570 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,571 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:26:03,571 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,571 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:26:03,577 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:26:03,578 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:26:03,579 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:26:03,579 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:26:03,580 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:26:03,583 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:26:03,583 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 13:26:03,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:26:03,584 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:26:03,648 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:26:03,649 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 13:26:03,649 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:26:03,650 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:26:03,651 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:26:04,045 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 13:26:04,046 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:04,046 INFO sqlalchemy.engine.base.Engine Thread-9 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:04,047 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:04,050 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:04,050 INFO sqlalchemy.engine.base.Engine Thread-9 : ('blue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:04,051 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:04,051 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 13:26:04,067 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 13:26:04,068 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:04,068 INFO sqlalchemy.engine.base.Engine Thread-10 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:04,069 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:04,071 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:04,071 INFO sqlalchemy.engine.base.Engine Thread-10 : ('blue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:04,072 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:04,072 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 13:26:05,309 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 13:26:05,310 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:05,310 INFO sqlalchemy.engine.base.Engine Thread-12 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:05,311 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:05,311 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:05,313 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:05,313 INFO sqlalchemy.engine.base.Engine Thread-12 : ('blue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:05,314 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:05,314 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:05,315 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 13:26:05,330 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 13:26:05,331 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:05,331 INFO sqlalchemy.engine.base.Engine Thread-13 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:05,331 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:05,332 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:05,334 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:05,334 INFO sqlalchemy.engine.base.Engine Thread-13 : ('blue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:05,335 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:05,335 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:05,336 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 13:26:06,228 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 13:26:06,229 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:06,229 INFO sqlalchemy.engine.base.Engine Thread-14 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:26:06,230 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:06,230 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:06,232 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:06,232 INFO sqlalchemy.engine.base.Engine Thread-14 : ('blue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:26:06,233 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:06,233 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:06,234 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 13:26:06,249 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 13:26:06,250 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:06,250 INFO sqlalchemy.engine.base.Engine Thread-15 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:26:06,251 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:06,251 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:06,253 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:06,253 INFO sqlalchemy.engine.base.Engine Thread-15 : ('blue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:26:06,254 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:06,254 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:06,255 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 13:26:07,138 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 13:26:07,139 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,140 INFO sqlalchemy.engine.base.Engine Thread-16 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:07,140 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,141 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:07,143 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,144 INFO sqlalchemy.engine.base.Engine Thread-16 : ('blue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:07,144 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,144 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:07,145 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 13:26:07,160 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 13:26:07,161 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,161 INFO sqlalchemy.engine.base.Engine Thread-17 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:07,162 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,162 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:07,164 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,164 INFO sqlalchemy.engine.base.Engine Thread-17 : ('blue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:07,165 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,165 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:07,166 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 13:26:07,308 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-30 13:26:07,309 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,309 INFO sqlalchemy.engine.base.Engine Thread-18 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:07,310 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,312 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,312 INFO sqlalchemy.engine.base.Engine Thread-18 : ('blue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:07,313 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,314 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-30 13:26:07,330 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-30 13:26:07,331 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,331 INFO sqlalchemy.engine.base.Engine Thread-19 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:07,332 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,334 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:07,335 INFO sqlalchemy.engine.base.Engine Thread-19 : ('blue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:07,335 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:07,336 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-30 13:26:16,661 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-30 13:26:16,663 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:26:16,663 INFO sqlalchemy.engine.base.Engine Thread-20 : ()
2020-01-30 13:26:16,664 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:26:16,665 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:26:16,665 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:26:16,667 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:26:16,667 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-01-30 13:26:16,668 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:26:16,668 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:26:16,672 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:26:16,672 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-01-30 13:26:16,673 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:26:16,674 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:26:16,675 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-30 13:26:17,500 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-01-30 13:26:17,502 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:17,502 INFO sqlalchemy.engine.base.Engine Thread-27 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:17,503 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:17,505 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:17,506 INFO sqlalchemy.engine.base.Engine Thread-27 : ('blue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:17,506 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:17,507 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-01-30 13:26:17,522 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-01-30 13:26:17,523 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:17,523 INFO sqlalchemy.engine.base.Engine Thread-28 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:17,524 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:17,526 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:17,526 INFO sqlalchemy.engine.base.Engine Thread-28 : ('blue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:26:17,527 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:17,528 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-01-30 13:26:24,926 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-30 13:26:24,927 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:24,928 INFO sqlalchemy.engine.base.Engine Thread-29 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:24,928 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:24,929 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:26:24,931 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:26:24,931 INFO sqlalchemy.engine.base.Engine Thread-29 : ('blue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:26:24,931 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:26:24,931 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:26:24,932 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-30 13:26:25,246 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-30 13:26:25,247 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:26:25,247 INFO sqlalchemy.engine.base.Engine Thread-30 : (1, 1)
2020-01-30 13:26:25,248 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:26:25,248 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:26:25,259 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-30 13:30:00,641 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:30:00,641 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,642 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:30:00,643 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:30:00,643 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:30:00,643 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,644 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:30:00,644 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:30:00,644 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:30:00,644 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,645 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:30:00,645 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:30:00,645 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:30:00,645 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:30:00,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:30:00,647 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:30:00,647 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,648 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:30:00,648 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,649 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:30:00,649 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:30:00,649 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:30:00,651 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:30:00,651 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:30:00,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:30:00,652 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:30:00,654 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:30:00,654 INFO sqlalchemy.engine.base.Engine Thread-2 : ('blue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:30:00,655 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:30:00,655 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'blue', 'black')
2020-01-30 13:30:00,656 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:30:00,997 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:30:01,000 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:30:01,000 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:30:01,001 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:30:01,001 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:30:01,018 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:32:37,617 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:32:37,617 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,618 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:32:37,619 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:32:37,619 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:32:37,619 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:32:37,620 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:32:37,621 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:32:37,621 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:32:37,621 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:32:37,621 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:32:37,622 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,622 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:32:37,623 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:32:37,623 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:32:37,623 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,624 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:32:37,624 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,625 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:32:37,625 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:32:37,625 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:32:37,627 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:32:37,627 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:32:37,628 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:32:37,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:32:37,630 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:32:37,993 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:32:37,996 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:32:37,997 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:32:37,998 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:32:37,998 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:32:38,016 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:32:56,152 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 13:32:56,153 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:32:56,153 INFO sqlalchemy.engine.base.Engine Thread-4 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:32:56,154 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:32:56,155 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:32:56,155 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:32:56,155 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:32:56,155 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:32:56,156 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 13:32:56,484 INFO sqlalchemy.engine.base.Engine Thread-5 : BEGIN (implicit)
2020-01-30 13:32:56,485 INFO sqlalchemy.engine.base.Engine Thread-5 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:32:56,485 INFO sqlalchemy.engine.base.Engine Thread-5 : (1, 1)
2020-01-30 13:32:56,486 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:32:56,486 DEBUG sqlalchemy.engine.base.Engine Thread-5 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:32:56,488 INFO sqlalchemy.engine.base.Engine Thread-5 : ROLLBACK
2020-01-30 13:36:20,915 INFO sqlalchemy.engine.base.Engine Thread-6 : BEGIN (implicit)
2020-01-30 13:36:20,921 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:36:20,921 INFO sqlalchemy.engine.base.Engine Thread-6 : ()
2020-01-30 13:36:20,923 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:36:20,924 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:36:20,924 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:36:20,926 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:36:20,926 INFO sqlalchemy.engine.base.Engine Thread-6 : (1, 1)
2020-01-30 13:36:20,927 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:36:20,927 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:36:20,986 INFO sqlalchemy.engine.base.Engine Thread-6 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:36:20,986 INFO sqlalchemy.engine.base.Engine Thread-6 : ('philip', 1, 1)
2020-01-30 13:36:20,987 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:36:20,987 DEBUG sqlalchemy.engine.base.Engine Thread-6 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:36:20,989 INFO sqlalchemy.engine.base.Engine Thread-6 : ROLLBACK
2020-01-30 13:36:21,499 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 13:36:21,500 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:36:21,500 INFO sqlalchemy.engine.base.Engine Thread-13 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:36:21,501 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:36:21,502 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 13:36:21,520 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 13:36:21,521 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:36:21,521 INFO sqlalchemy.engine.base.Engine Thread-14 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:36:21,522 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:36:21,522 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 13:36:26,227 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 13:36:26,229 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:36:26,229 INFO sqlalchemy.engine.base.Engine Thread-16 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:36:26,230 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:36:26,230 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:36:26,231 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 13:36:26,247 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 13:36:26,248 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:36:26,248 INFO sqlalchemy.engine.base.Engine Thread-17 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:36:26,249 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:36:26,249 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:36:26,250 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 13:37:05,719 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-30 13:37:05,721 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:37:05,721 INFO sqlalchemy.engine.base.Engine Thread-18 : ()
2020-01-30 13:37:05,722 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:37:05,723 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:37:05,723 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:37:05,725 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:37:05,725 INFO sqlalchemy.engine.base.Engine Thread-18 : (1, 1)
2020-01-30 13:37:05,726 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:37:05,726 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:37:05,737 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:37:05,737 INFO sqlalchemy.engine.base.Engine Thread-18 : ('philip', 1, 1)
2020-01-30 13:37:05,738 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:37:05,738 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:37:05,739 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-30 13:37:06,269 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-30 13:37:06,270 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:06,270 INFO sqlalchemy.engine.base.Engine Thread-25 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:37:06,271 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:06,272 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-30 13:37:06,290 INFO sqlalchemy.engine.base.Engine Thread-26 : BEGIN (implicit)
2020-01-30 13:37:06,291 INFO sqlalchemy.engine.base.Engine Thread-26 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:06,291 INFO sqlalchemy.engine.base.Engine Thread-26 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:37:06,292 DEBUG sqlalchemy.engine.base.Engine Thread-26 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:06,292 INFO sqlalchemy.engine.base.Engine Thread-26 : ROLLBACK
2020-01-30 13:37:06,929 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-01-30 13:37:06,930 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:06,930 INFO sqlalchemy.engine.base.Engine Thread-28 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:37:06,931 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:06,931 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:37:06,932 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-01-30 13:37:06,948 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-30 13:37:06,949 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:06,949 INFO sqlalchemy.engine.base.Engine Thread-29 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:37:06,950 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:06,950 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:37:06,950 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-30 13:37:22,096 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-30 13:37:22,097 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:22,097 INFO sqlalchemy.engine.base.Engine Thread-30 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:37:22,098 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:22,098 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:37:22,098 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-30 13:37:22,112 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 13:37:22,113 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:22,113 INFO sqlalchemy.engine.base.Engine Thread-31 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:37:22,114 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:22,114 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:37:22,115 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-30 13:37:22,602 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 13:37:22,603 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:22,603 INFO sqlalchemy.engine.base.Engine Thread-32 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:37:22,604 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:22,604 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:37:22,604 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:37:22,605 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 13:37:22,617 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-01-30 13:37:22,618 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:22,618 INFO sqlalchemy.engine.base.Engine Thread-33 : ('red', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 13:37:22,619 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:22,619 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:37:22,619 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:37:22,620 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-01-30 13:37:47,587 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-30 13:37:47,588 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:47,588 INFO sqlalchemy.engine.base.Engine Thread-34 : ('red', 'white', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 13:37:47,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:47,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:37:47,589 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:37:47,590 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-30 13:37:47,606 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-01-30 13:37:47,607 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:47,607 INFO sqlalchemy.engine.base.Engine Thread-35 : ('red', 'white', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 13:37:47,608 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:47,608 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:37:47,608 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:37:47,609 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-01-30 13:37:57,376 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-01-30 13:37:57,377 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:57,377 INFO sqlalchemy.engine.base.Engine Thread-36 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:37:57,378 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:57,379 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-01-30 13:37:57,399 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-30 13:37:57,400 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:57,400 INFO sqlalchemy.engine.base.Engine Thread-37 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:37:57,400 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:57,401 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-30 13:37:58,420 INFO sqlalchemy.engine.base.Engine Thread-38 : BEGIN (implicit)
2020-01-30 13:37:58,421 INFO sqlalchemy.engine.base.Engine Thread-38 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:58,421 INFO sqlalchemy.engine.base.Engine Thread-38 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:37:58,422 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:58,422 DEBUG sqlalchemy.engine.base.Engine Thread-38 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:37:58,423 INFO sqlalchemy.engine.base.Engine Thread-38 : ROLLBACK
2020-01-30 13:37:58,441 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-30 13:37:58,442 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:37:58,442 INFO sqlalchemy.engine.base.Engine Thread-39 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:37:58,442 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:37:58,443 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:37:58,443 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-30 13:46:01,712 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:46:01,712 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,713 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:46:01,714 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:46:01,714 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:46:01,714 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,715 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:46:01,715 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:46:01,715 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:46:01,715 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:46:01,716 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:46:01,716 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:46:01,716 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,717 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:46:01,717 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:46:01,718 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:46:01,718 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,718 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:46:01,718 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,719 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:46:01,719 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,719 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:46:01,726 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:46:01,726 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:46:01,728 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:46:01,728 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:46:01,728 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:46:01,732 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:46:01,732 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 13:46:01,733 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:46:01,733 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:46:01,796 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:46:01,796 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 13:46:01,797 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:46:01,797 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:46:01,799 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:46:02,280 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 13:46:02,282 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:02,282 INFO sqlalchemy.engine.base.Engine Thread-9 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:02,283 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:02,285 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:02,285 INFO sqlalchemy.engine.base.Engine Thread-9 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:02,286 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:02,287 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 13:46:02,306 INFO sqlalchemy.engine.base.Engine Thread-10 : BEGIN (implicit)
2020-01-30 13:46:02,307 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:02,307 INFO sqlalchemy.engine.base.Engine Thread-10 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:02,308 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:02,310 INFO sqlalchemy.engine.base.Engine Thread-10 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:02,310 INFO sqlalchemy.engine.base.Engine Thread-10 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:02,311 DEBUG sqlalchemy.engine.base.Engine Thread-10 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:02,311 INFO sqlalchemy.engine.base.Engine Thread-10 : ROLLBACK
2020-01-30 13:46:15,820 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 13:46:15,822 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,823 INFO sqlalchemy.engine.base.Engine Thread-12 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,826 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,826 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:15,829 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,829 INFO sqlalchemy.engine.base.Engine Thread-12 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,829 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 13:46:15,830 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,830 INFO sqlalchemy.engine.base.Engine Thread-13 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:15,831 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,831 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,831 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:15,831 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:15,832 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 13:46:15,834 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,834 INFO sqlalchemy.engine.base.Engine Thread-13 : ('8AE996', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:15,835 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,836 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:15,836 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 13:46:15,866 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 13:46:15,870 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 13:46:15,871 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,872 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,872 INFO sqlalchemy.engine.base.Engine Thread-14 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,872 INFO sqlalchemy.engine.base.Engine Thread-15 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:15,873 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,873 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:15,875 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,875 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,876 INFO sqlalchemy.engine.base.Engine Thread-14 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,876 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:15,878 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,878 INFO sqlalchemy.engine.base.Engine Thread-15 : ('8AE996', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:15,878 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,879 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:15,879 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,879 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 13:46:15,880 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:15,880 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 13:46:15,910 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 13:46:15,911 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,911 INFO sqlalchemy.engine.base.Engine Thread-16 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,912 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,912 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:15,915 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,915 INFO sqlalchemy.engine.base.Engine Thread-16 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,915 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,916 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:15,916 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 13:46:15,930 INFO sqlalchemy.engine.base.Engine Thread-17 : BEGIN (implicit)
2020-01-30 13:46:15,931 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,931 INFO sqlalchemy.engine.base.Engine Thread-17 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,932 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,932 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:15,934 INFO sqlalchemy.engine.base.Engine Thread-17 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:15,934 INFO sqlalchemy.engine.base.Engine Thread-17 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:15,935 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:15,935 DEBUG sqlalchemy.engine.base.Engine Thread-17 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:15,936 INFO sqlalchemy.engine.base.Engine Thread-17 : ROLLBACK
2020-01-30 13:46:20,720 INFO sqlalchemy.engine.base.Engine Thread-18 : BEGIN (implicit)
2020-01-30 13:46:20,721 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:20,721 INFO sqlalchemy.engine.base.Engine Thread-18 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:46:20,722 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:20,722 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:20,722 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:46:20,722 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:46:20,722 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:46:20,724 INFO sqlalchemy.engine.base.Engine Thread-18 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:20,724 INFO sqlalchemy.engine.base.Engine Thread-18 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:46:20,725 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:20,725 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:20,725 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', '8AE996', 'black')
2020-01-30 13:46:20,725 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', '8AE996', 'black')
2020-01-30 13:46:20,725 DEBUG sqlalchemy.engine.base.Engine Thread-18 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', '8AE996', 'black')
2020-01-30 13:46:20,726 INFO sqlalchemy.engine.base.Engine Thread-18 : ROLLBACK
2020-01-30 13:46:21,033 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-30 13:46:21,034 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:46:21,034 INFO sqlalchemy.engine.base.Engine Thread-19 : (1, 1)
2020-01-30 13:46:21,035 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:46:21,035 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:46:21,045 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-30 13:46:30,203 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-30 13:46:30,205 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:46:30,205 INFO sqlalchemy.engine.base.Engine Thread-20 : ()
2020-01-30 13:46:30,207 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:46:30,207 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:46:30,207 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:46:30,209 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:46:30,209 INFO sqlalchemy.engine.base.Engine Thread-20 : (1, 1)
2020-01-30 13:46:30,210 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:46:30,210 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:46:30,214 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:46:30,214 INFO sqlalchemy.engine.base.Engine Thread-20 : ('philip', 1, 1)
2020-01-30 13:46:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:46:30,215 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:46:30,216 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-30 13:46:30,728 INFO sqlalchemy.engine.base.Engine Thread-27 : BEGIN (implicit)
2020-01-30 13:46:30,729 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:30,729 INFO sqlalchemy.engine.base.Engine Thread-27 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:30,730 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:30,732 INFO sqlalchemy.engine.base.Engine Thread-27 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:30,732 INFO sqlalchemy.engine.base.Engine Thread-27 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:30,733 DEBUG sqlalchemy.engine.base.Engine Thread-27 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:30,733 INFO sqlalchemy.engine.base.Engine Thread-27 : ROLLBACK
2020-01-30 13:46:30,749 INFO sqlalchemy.engine.base.Engine Thread-28 : BEGIN (implicit)
2020-01-30 13:46:30,750 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:30,750 INFO sqlalchemy.engine.base.Engine Thread-28 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:30,751 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:30,753 INFO sqlalchemy.engine.base.Engine Thread-28 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:30,753 INFO sqlalchemy.engine.base.Engine Thread-28 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:46:30,754 DEBUG sqlalchemy.engine.base.Engine Thread-28 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:30,755 INFO sqlalchemy.engine.base.Engine Thread-28 : ROLLBACK
2020-01-30 13:46:32,458 INFO sqlalchemy.engine.base.Engine Thread-30 : BEGIN (implicit)
2020-01-30 13:46:32,459 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:32,459 INFO sqlalchemy.engine.base.Engine Thread-30 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:32,460 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:32,460 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:32,462 INFO sqlalchemy.engine.base.Engine Thread-30 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:32,462 INFO sqlalchemy.engine.base.Engine Thread-30 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:32,463 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:32,463 DEBUG sqlalchemy.engine.base.Engine Thread-30 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:32,464 INFO sqlalchemy.engine.base.Engine Thread-30 : ROLLBACK
2020-01-30 13:46:32,478 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 13:46:32,479 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:32,479 INFO sqlalchemy.engine.base.Engine Thread-31 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:32,480 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:32,480 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:32,482 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:32,482 INFO sqlalchemy.engine.base.Engine Thread-31 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:32,483 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:32,483 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:32,484 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-30 13:46:36,054 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 13:46:36,055 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,055 INFO sqlalchemy.engine.base.Engine Thread-32 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:36,056 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,056 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:36,059 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,059 INFO sqlalchemy.engine.base.Engine Thread-32 : ('8AE996', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:36,059 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,059 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:36,060 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 13:46:36,078 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-01-30 13:46:36,079 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,079 INFO sqlalchemy.engine.base.Engine Thread-33 : ('red', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:36,080 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,080 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:36,083 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,083 INFO sqlalchemy.engine.base.Engine Thread-33 : ('8AE996', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 13:46:36,083 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,084 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:36,084 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-01-30 13:46:36,485 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-30 13:46:36,486 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,486 INFO sqlalchemy.engine.base.Engine Thread-34 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:36,487 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,488 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:36,490 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,490 INFO sqlalchemy.engine.base.Engine Thread-34 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:36,491 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,491 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:36,492 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-30 13:46:36,507 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-01-30 13:46:36,508 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,509 INFO sqlalchemy.engine.base.Engine Thread-35 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:36,509 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,510 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:46:36,512 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:46:36,512 INFO sqlalchemy.engine.base.Engine Thread-35 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:46:36,512 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:46:36,513 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:46:36,513 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-01-30 13:48:13,685 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:48:13,686 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,687 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:48:13,687 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:48:13,688 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:48:13,688 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,689 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:48:13,689 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:48:13,689 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:48:13,689 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,689 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:48:13,690 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:48:13,690 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:48:13,690 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,691 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:48:13,691 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:48:13,692 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:48:13,692 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,692 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:48:13,692 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,693 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:48:13,693 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:48:13,694 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:48:13,695 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:48:13,695 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:48:13,696 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:48:13,697 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:48:13,697 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:48:13,697 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:48:13,697 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:48:13,699 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:48:13,699 INFO sqlalchemy.engine.base.Engine Thread-2 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:48:13,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:48:13,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:48:13,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', '8AE996', 'black')
2020-01-30 13:48:13,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', '8AE996', 'black')
2020-01-30 13:48:13,700 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', '8AE996', 'black')
2020-01-30 13:48:13,702 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:48:13,986 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:48:13,989 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:48:13,989 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:48:13,990 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:48:13,990 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:48:14,007 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:49:07,674 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:49:07,674 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,675 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:49:07,676 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:49:07,676 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:49:07,677 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,677 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:49:07,677 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:49:07,678 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:49:07,678 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,678 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:49:07,678 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:49:07,678 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:49:07,678 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,679 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:49:07,679 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:49:07,680 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:49:07,680 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,680 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:49:07,680 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,681 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:49:07,681 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:49:07,682 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:49:07,683 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:49:07,683 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:49:07,684 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:49:07,684 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:49:07,684 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:49:07,685 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:49:07,685 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:49:07,687 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:49:07,687 INFO sqlalchemy.engine.base.Engine Thread-2 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:49:07,688 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:49:07,688 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:49:07,688 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', '8AE996', 'black')
2020-01-30 13:49:07,688 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', '8AE996', 'black')
2020-01-30 13:49:07,688 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', '8AE996', 'black')
2020-01-30 13:50:22,741 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:50:22,741 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:50:22,742 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:50:22,743 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:50:22,743 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:50:22,744 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:50:22,744 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:50:22,744 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:50:22,745 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:50:22,745 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:50:22,745 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:50:22,746 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:50:22,747 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:50:22,747 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,747 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:50:22,747 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,748 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:50:22,748 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:50:22,748 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:50:22,750 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:22,750 INFO sqlalchemy.engine.base.Engine Thread-2 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:50:22,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:22,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:50:22,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'red', 'white')
2020-01-30 13:50:22,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'red', 'white')
2020-01-30 13:50:22,751 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'red', 'white')
2020-01-30 13:50:22,753 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:22,753 INFO sqlalchemy.engine.base.Engine Thread-2 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 6, 9, 0, 0))
2020-01-30 13:50:22,754 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:22,754 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:50:22,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', '8AE996', 'black')
2020-01-30 13:50:22,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', '8AE996', 'black')
2020-01-30 13:50:22,755 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', '8AE996', 'black')
2020-01-30 13:50:22,756 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:50:23,065 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 13:50:23,068 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:50:23,068 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 13:50:23,069 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:50:23,070 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:50:23,088 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 13:50:31,427 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 13:50:31,433 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:50:31,434 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 13:50:31,435 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:50:31,435 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:50:31,435 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:50:31,437 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:50:31,437 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-30 13:50:31,438 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:50:31,438 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:50:31,498 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:50:31,498 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-30 13:50:31,499 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:50:31,499 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:50:31,500 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 13:50:31,985 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 13:50:31,986 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:31,986 INFO sqlalchemy.engine.base.Engine Thread-11 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:50:31,987 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:31,989 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:31,989 INFO sqlalchemy.engine.base.Engine Thread-11 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:50:31,990 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:31,990 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 13:50:32,005 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 13:50:32,006 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:32,006 INFO sqlalchemy.engine.base.Engine Thread-12 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:50:32,007 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:32,009 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:32,009 INFO sqlalchemy.engine.base.Engine Thread-12 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:50:32,009 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:32,010 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 13:50:33,606 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 13:50:33,607 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:33,607 INFO sqlalchemy.engine.base.Engine Thread-14 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:50:33,608 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:33,608 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:50:33,610 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:33,610 INFO sqlalchemy.engine.base.Engine Thread-14 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:50:33,611 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:33,611 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:50:33,612 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 13:50:33,629 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 13:50:33,630 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:33,630 INFO sqlalchemy.engine.base.Engine Thread-15 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:50:33,631 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:33,631 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:50:33,634 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:50:33,634 INFO sqlalchemy.engine.base.Engine Thread-15 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:50:33,634 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:50:33,635 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:50:33,635 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 13:52:35,551 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 13:52:35,553 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:52:35,553 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 13:52:35,555 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:52:35,556 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:52:35,556 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:52:35,558 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:52:35,558 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 13:52:35,559 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:52:35,559 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:52:35,570 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:52:35,570 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 13:52:35,571 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:52:35,571 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:52:35,572 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 13:52:36,086 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 13:52:36,087 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:52:36,087 INFO sqlalchemy.engine.base.Engine Thread-23 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:52:36,088 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:52:36,090 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:52:36,090 INFO sqlalchemy.engine.base.Engine Thread-23 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:52:36,091 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:52:36,091 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 13:56:45,095 INFO sqlalchemy.engine.base.Engine Thread-25 : BEGIN (implicit)
2020-01-30 13:56:45,098 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:56:45,098 INFO sqlalchemy.engine.base.Engine Thread-25 : ()
2020-01-30 13:56:45,099 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:56:45,099 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:56:45,100 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:56:45,102 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:56:45,102 INFO sqlalchemy.engine.base.Engine Thread-25 : (1, 1)
2020-01-30 13:56:45,102 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:56:45,103 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:56:45,116 INFO sqlalchemy.engine.base.Engine Thread-25 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:56:45,116 INFO sqlalchemy.engine.base.Engine Thread-25 : ('philip', 1, 1)
2020-01-30 13:56:45,117 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:56:45,117 DEBUG sqlalchemy.engine.base.Engine Thread-25 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:56:45,119 INFO sqlalchemy.engine.base.Engine Thread-25 : ROLLBACK
2020-01-30 13:56:45,688 INFO sqlalchemy.engine.base.Engine Thread-32 : BEGIN (implicit)
2020-01-30 13:56:45,690 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:56:45,690 INFO sqlalchemy.engine.base.Engine Thread-32 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:56:45,691 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:56:45,694 INFO sqlalchemy.engine.base.Engine Thread-32 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:56:45,694 INFO sqlalchemy.engine.base.Engine Thread-32 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:56:45,694 DEBUG sqlalchemy.engine.base.Engine Thread-32 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:56:45,695 INFO sqlalchemy.engine.base.Engine Thread-32 : ROLLBACK
2020-01-30 13:56:49,844 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-30 13:56:49,845 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:56:49,845 INFO sqlalchemy.engine.base.Engine Thread-34 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:56:49,846 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:56:49,846 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:56:49,848 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:56:49,848 INFO sqlalchemy.engine.base.Engine Thread-34 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:56:49,849 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:56:49,849 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:56:49,850 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-30 13:57:34,053 INFO sqlalchemy.engine.base.Engine Thread-35 : BEGIN (implicit)
2020-01-30 13:57:34,055 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:57:34,055 INFO sqlalchemy.engine.base.Engine Thread-35 : ()
2020-01-30 13:57:34,056 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:57:34,056 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:57:34,057 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:57:34,059 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:57:34,059 INFO sqlalchemy.engine.base.Engine Thread-35 : (1, 1)
2020-01-30 13:57:34,059 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:57:34,060 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:57:34,071 INFO sqlalchemy.engine.base.Engine Thread-35 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:57:34,071 INFO sqlalchemy.engine.base.Engine Thread-35 : ('philip', 1, 1)
2020-01-30 13:57:34,072 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:57:34,072 DEBUG sqlalchemy.engine.base.Engine Thread-35 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:57:34,074 INFO sqlalchemy.engine.base.Engine Thread-35 : ROLLBACK
2020-01-30 13:57:34,551 INFO sqlalchemy.engine.base.Engine Thread-42 : BEGIN (implicit)
2020-01-30 13:57:34,552 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:57:34,552 INFO sqlalchemy.engine.base.Engine Thread-42 : ('red', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:57:34,553 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:57:34,555 INFO sqlalchemy.engine.base.Engine Thread-42 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:57:34,555 INFO sqlalchemy.engine.base.Engine Thread-42 : ('8AE996', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:57:34,556 DEBUG sqlalchemy.engine.base.Engine Thread-42 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:57:34,557 INFO sqlalchemy.engine.base.Engine Thread-42 : ROLLBACK
2020-01-30 13:57:36,114 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-01-30 13:57:36,115 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:57:36,115 INFO sqlalchemy.engine.base.Engine Thread-44 : ('red', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:57:36,116 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:57:36,117 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'red', 'white')
2020-01-30 13:57:36,119 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:57:36,119 INFO sqlalchemy.engine.base.Engine Thread-44 : ('8AE996', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:57:36,120 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:57:36,120 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', '8AE996', 'black')
2020-01-30 13:57:36,121 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-01-30 13:59:26,339 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:59:26,339 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,340 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:59:26,341 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:59:26,341 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:59:26,341 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:59:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:59:26,342 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:59:26,342 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:59:26,343 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:59:26,343 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:59:26,343 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,344 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:59:26,344 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:59:26,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:59:26,345 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,345 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:59:26,345 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,346 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:59:26,346 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,347 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:59:26,353 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:59:26,353 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:26,355 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:59:26,355 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:59:26,356 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:59:26,360 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:59:26,360 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 13:59:26,360 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:59:26,361 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:59:26,430 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:59:26,430 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 13:59:26,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:59:26,431 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:59:26,433 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:59:26,877 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 13:59:26,879 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:26,879 INFO sqlalchemy.engine.base.Engine Thread-9 : ('PeachPuff', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:59:26,880 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:26,883 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:26,883 INFO sqlalchemy.engine.base.Engine Thread-9 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:59:26,884 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:26,884 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 13:59:28,064 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 13:59:28,065 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:28,065 INFO sqlalchemy.engine.base.Engine Thread-11 : ('PeachPuff', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:59:28,066 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:28,066 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'PeachPuff', 'white')
2020-01-30 13:59:28,068 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:28,068 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:59:28,069 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:28,069 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 13:59:28,070 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 13:59:47,614 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 13:59:47,614 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,615 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:59:47,615 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 13:59:47,616 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 13:59:47,616 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,616 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 13:59:47,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 13:59:47,617 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 13:59:47,617 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 13:59:47,617 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 13:59:47,618 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 13:59:47,618 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,619 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 13:59:47,619 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 13:59:47,619 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 13:59:47,620 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,620 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 13:59:47,620 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,621 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 13:59:47,621 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,621 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 13:59:47,627 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 13:59:47,627 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 13:59:47,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 13:59:47,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 13:59:47,629 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 13:59:47,633 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 13:59:47,633 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 13:59:47,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:59:47,634 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:59:47,698 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 13:59:47,698 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 13:59:47,699 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 13:59:47,699 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 13:59:47,701 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 13:59:48,204 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 13:59:48,206 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:48,206 INFO sqlalchemy.engine.base.Engine Thread-9 : ('PeachPuff', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:59:48,207 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:48,209 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:48,209 INFO sqlalchemy.engine.base.Engine Thread-9 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 13:59:48,210 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:48,210 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 13:59:48,676 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 13:59:48,677 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:48,678 INFO sqlalchemy.engine.base.Engine Thread-11 : ('PeachPuff', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:59:48,678 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:48,679 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'PeachPuff', 'black')
2020-01-30 13:59:48,681 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 13:59:48,681 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 13:59:48,682 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 13:59:48,682 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 13:59:48,683 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 14:02:22,414 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 14:02:22,416 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,417 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 14:02:22,418 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 14:02:22,418 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 14:02:22,418 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 14:02:22,419 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 14:02:22,419 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 14:02:22,420 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,420 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 14:02:22,420 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 14:02:22,420 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 14:02:22,421 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,421 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 14:02:22,422 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 14:02:22,422 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 14:02:22,422 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,423 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 14:02:22,423 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,424 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 14:02:22,424 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,425 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 14:02:22,431 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 14:02:22,431 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:02:22,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 14:02:22,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 14:02:22,433 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 14:02:22,437 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 14:02:22,437 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 14:02:22,438 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 14:02:22,439 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 14:02:22,504 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 14:02:22,504 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 14:02:22,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 14:02:22,505 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 14:02:22,507 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 14:02:22,937 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 14:02:22,938 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:02:22,938 INFO sqlalchemy.engine.base.Engine Thread-9 : ('Salmon', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 14:02:22,939 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:02:22,941 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:02:22,942 INFO sqlalchemy.engine.base.Engine Thread-9 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 14:02:22,942 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:02:22,943 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 14:02:24,498 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 14:02:24,499 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:02:24,499 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 14:02:24,500 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:02:24,500 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'black')
2020-01-30 14:02:24,502 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:02:24,502 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 14:02:24,503 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:02:24,503 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 14:02:24,504 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 14:03:14,960 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 14:03:14,964 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 14:03:14,964 INFO sqlalchemy.engine.base.Engine Thread-12 : ()
2020-01-30 14:03:14,965 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 14:03:14,966 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 14:03:14,966 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 14:03:14,968 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 14:03:14,968 INFO sqlalchemy.engine.base.Engine Thread-12 : (1, 1)
2020-01-30 14:03:14,968 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 14:03:14,969 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 14:03:14,979 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 14:03:14,980 INFO sqlalchemy.engine.base.Engine Thread-12 : ('philip', 1, 1)
2020-01-30 14:03:14,980 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 14:03:14,980 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 14:03:14,982 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 14:03:15,457 INFO sqlalchemy.engine.base.Engine Thread-19 : BEGIN (implicit)
2020-01-30 14:03:15,458 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:15,458 INFO sqlalchemy.engine.base.Engine Thread-19 : ('Salmon', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 14:03:15,459 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:15,462 INFO sqlalchemy.engine.base.Engine Thread-19 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:15,462 INFO sqlalchemy.engine.base.Engine Thread-19 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 14:03:15,462 DEBUG sqlalchemy.engine.base.Engine Thread-19 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:15,463 INFO sqlalchemy.engine.base.Engine Thread-19 : ROLLBACK
2020-01-30 14:03:16,873 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-30 14:03:16,874 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:16,874 INFO sqlalchemy.engine.base.Engine Thread-21 : ('Salmon', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 14:03:16,875 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:16,875 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'black')
2020-01-30 14:03:16,877 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:16,877 INFO sqlalchemy.engine.base.Engine Thread-21 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 14:03:16,878 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:16,878 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 14:03:16,879 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-30 14:03:32,868 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 14:03:32,868 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,869 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 14:03:32,870 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 14:03:32,870 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 14:03:32,870 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,871 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 14:03:32,871 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 14:03:32,871 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 14:03:32,871 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,872 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 14:03:32,872 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 14:03:32,872 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 14:03:32,872 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 14:03:32,873 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 14:03:32,873 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 14:03:32,874 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,874 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 14:03:32,874 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,875 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 14:03:32,875 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,876 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 14:03:32,882 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 14:03:32,882 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 14:03:32,884 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 14:03:32,884 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 14:03:32,884 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 14:03:32,889 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 14:03:32,889 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 14:03:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 14:03:32,890 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 14:03:32,953 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 14:03:32,953 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 14:03:32,954 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 14:03:32,954 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 14:03:32,956 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 14:03:33,451 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 14:03:33,452 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:33,452 INFO sqlalchemy.engine.base.Engine Thread-9 : ('Salmon', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 14:03:33,453 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:33,456 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:33,456 INFO sqlalchemy.engine.base.Engine Thread-9 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 14:03:33,457 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:33,457 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 14:03:34,143 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 14:03:34,144 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:34,144 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 14:03:34,145 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:34,145 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white')
2020-01-30 14:03:34,147 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:34,147 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 14:03:34,148 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:34,148 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 14:03:34,149 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 14:03:56,812 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 14:03:56,813 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:56,813 INFO sqlalchemy.engine.base.Engine Thread-12 : ('Salmon', 'white', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 14:03:56,814 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:56,814 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white')
2020-01-30 14:03:56,816 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:56,816 INFO sqlalchemy.engine.base.Engine Thread-12 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 14:03:56,817 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:56,817 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 14:03:56,818 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 14:03:57,588 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 14:03:57,589 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:57,590 INFO sqlalchemy.engine.base.Engine Thread-13 : ('Salmon', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 14:03:57,590 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:57,591 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white')
2020-01-30 14:03:57,591 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white')
2020-01-30 14:03:57,593 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:57,593 INFO sqlalchemy.engine.base.Engine Thread-13 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 14:03:57,594 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:57,594 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black')
2020-01-30 14:03:57,594 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black')
2020-01-30 14:03:57,595 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 14:03:59,957 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 14:03:59,958 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:59,958 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Salmon', 'white', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 14:03:59,959 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:59,959 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white')
2020-01-30 14:03:59,959 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white')
2020-01-30 14:03:59,961 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:03:59,961 INFO sqlalchemy.engine.base.Engine Thread-14 : ('LightBlue', 'black', datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0), datetime.datetime(2020, 4, 27, 0, 0), datetime.datetime(2020, 6, 8, 0, 0))
2020-01-30 14:03:59,962 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:03:59,962 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black')
2020-01-30 14:03:59,962 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black')
2020-01-30 14:03:59,963 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 14:04:01,874 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 14:04:01,875 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:04:01,875 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Salmon', 'white', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 14:04:01,876 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:04:01,876 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white')
2020-01-30 14:04:01,876 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white')
2020-01-30 14:04:01,878 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 14:04:01,878 INFO sqlalchemy.engine.base.Engine Thread-15 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 14:04:01,879 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 14:04:01,879 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black')
2020-01-30 14:04:01,879 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black')
2020-01-30 14:04:01,880 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 16:17:34,866 INFO sqlalchemy.engine.base.Engine Thread-4 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 16:17:34,866 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,868 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Variable_name', 'Value')
2020-01-30 16:17:34,868 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('sql_mode', '')
2020-01-30 16:17:34,869 INFO sqlalchemy.engine.base.Engine Thread-4 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 16:17:34,869 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,869 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Variable_name', 'Value')
2020-01-30 16:17:34,870 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('lower_case_table_names', '0')
2020-01-30 16:17:34,870 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT DATABASE()
2020-01-30 16:17:34,870 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,870 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('DATABASE()',)
2020-01-30 16:17:34,870 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('fmapp',)
2020-01-30 16:17:34,871 INFO sqlalchemy.engine.base.Engine Thread-4 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 16:17:34,871 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,872 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 16:17:34,872 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 16:17:34,872 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 16:17:34,873 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,873 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 16:17:34,873 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,874 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 16:17:34,874 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,874 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 16:17:34,880 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:17:34,880 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:17:34,882 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:17:34,882 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:17:34,882 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:17:34,887 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:17:34,887 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-30 16:17:34,888 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:17:34,888 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:17:34,951 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:17:34,951 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-30 16:17:34,952 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:17:34,952 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:17:34,954 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 16:17:35,480 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 16:17:35,481 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:17:35,482 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:17:35,482 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:17:35,484 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:17:35,485 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:17:35,485 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:17:35,486 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 16:19:46,920 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 16:19:46,924 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:19:46,924 INFO sqlalchemy.engine.base.Engine Thread-13 : ()
2020-01-30 16:19:46,926 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:19:46,926 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:19:46,926 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:19:46,928 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:19:46,928 INFO sqlalchemy.engine.base.Engine Thread-13 : (1, 1)
2020-01-30 16:19:46,929 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:19:46,929 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:19:46,940 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:19:46,940 INFO sqlalchemy.engine.base.Engine Thread-13 : ('philip', 1, 1)
2020-01-30 16:19:46,941 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:19:46,941 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:19:46,942 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 16:19:47,466 INFO sqlalchemy.engine.base.Engine Thread-20 : BEGIN (implicit)
2020-01-30 16:19:47,468 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:19:47,468 INFO sqlalchemy.engine.base.Engine Thread-20 : ('Salmon', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:19:47,469 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:19:47,471 INFO sqlalchemy.engine.base.Engine Thread-20 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:19:47,471 INFO sqlalchemy.engine.base.Engine Thread-20 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:19:47,472 DEBUG sqlalchemy.engine.base.Engine Thread-20 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:19:47,473 INFO sqlalchemy.engine.base.Engine Thread-20 : ROLLBACK
2020-01-30 16:19:54,392 INFO sqlalchemy.engine.base.Engine Thread-22 : BEGIN (implicit)
2020-01-30 16:19:54,395 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 16:19:54,395 INFO sqlalchemy.engine.base.Engine Thread-22 : ('0', 1)
2020-01-30 16:19:54,396 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 16:19:54,402 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:19:54,402 INFO sqlalchemy.engine.base.Engine Thread-22 : ()
2020-01-30 16:19:54,403 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:19:54,404 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:19:54,404 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:19:54,406 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 16:19:54,406 INFO sqlalchemy.engine.base.Engine Thread-22 : (97,)
2020-01-30 16:19:54,407 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 16:19:54,407 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 16:19:54,407 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 16:19:54,409 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 16:19:54,409 INFO sqlalchemy.engine.base.Engine Thread-22 : (105,)
2020-01-30 16:19:54,409 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 16:19:54,410 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 16:19:54,410 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 16:19:54,413 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 16:19:54,413 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-01-30 16:19:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:19:54,414 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:19:54,417 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:19:54,417 INFO sqlalchemy.engine.base.Engine Thread-22 : (1, 1)
2020-01-30 16:19:54,417 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:19:54,418 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:19:54,462 INFO sqlalchemy.engine.base.Engine Thread-22 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:19:54,462 INFO sqlalchemy.engine.base.Engine Thread-22 : ('philip', 1, 1)
2020-01-30 16:19:54,463 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:19:54,463 DEBUG sqlalchemy.engine.base.Engine Thread-22 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:19:54,466 INFO sqlalchemy.engine.base.Engine Thread-22 : ROLLBACK
2020-01-30 16:19:58,695 INFO sqlalchemy.engine.base.Engine Thread-29 : BEGIN (implicit)
2020-01-30 16:19:58,697 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:19:58,697 INFO sqlalchemy.engine.base.Engine Thread-29 : ()
2020-01-30 16:19:58,698 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:19:58,699 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:19:58,699 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:19:58,701 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:19:58,701 INFO sqlalchemy.engine.base.Engine Thread-29 : (1, 1)
2020-01-30 16:19:58,701 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:19:58,702 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:19:58,706 INFO sqlalchemy.engine.base.Engine Thread-29 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:19:58,706 INFO sqlalchemy.engine.base.Engine Thread-29 : ('philip', 1, 1)
2020-01-30 16:19:58,706 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:19:58,707 DEBUG sqlalchemy.engine.base.Engine Thread-29 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:19:58,708 INFO sqlalchemy.engine.base.Engine Thread-29 : ROLLBACK
2020-01-30 16:19:59,212 INFO sqlalchemy.engine.base.Engine Thread-36 : BEGIN (implicit)
2020-01-30 16:19:59,213 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:19:59,213 INFO sqlalchemy.engine.base.Engine Thread-36 : ('Salmon', 'white', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:19:59,214 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:19:59,216 INFO sqlalchemy.engine.base.Engine Thread-36 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:19:59,216 INFO sqlalchemy.engine.base.Engine Thread-36 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:19:59,217 DEBUG sqlalchemy.engine.base.Engine Thread-36 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:19:59,218 INFO sqlalchemy.engine.base.Engine Thread-36 : ROLLBACK
2020-01-30 16:20:07,521 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-30 16:20:07,522 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:20:07,522 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Salmon', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:20:07,523 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:20:07,523 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white')
2020-01-30 16:20:07,525 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:20:07,525 INFO sqlalchemy.engine.base.Engine Thread-37 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:20:07,526 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:20:07,526 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 16:20:07,527 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-30 16:47:14,415 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-30 16:47:14,417 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:47:14,417 INFO sqlalchemy.engine.base.Engine Thread-39 : ('Salmon', 'white', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white')
2020-01-30 16:47:14,420 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white')
2020-01-30 16:47:14,423 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:47:14,423 INFO sqlalchemy.engine.base.Engine Thread-39 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black')
2020-01-30 16:47:14,424 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black')
2020-01-30 16:47:14,426 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-30 16:47:14,812 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-01-30 16:47:14,813 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:47:14,813 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-01-30 16:47:14,814 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:47:14,815 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:47:14,816 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-01-30 16:53:24,073 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 16:53:24,073 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 16:53:24,075 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 16:53:24,076 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 16:53:24,076 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,076 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 16:53:24,076 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 16:53:24,077 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 16:53:24,077 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,077 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 16:53:24,077 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 16:53:24,077 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 16:53:24,077 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,078 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 16:53:24,078 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 16:53:24,079 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 16:53:24,079 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,080 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 16:53:24,080 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,080 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 16:53:24,081 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:53:24,081 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 16:53:24,083 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS `Locked` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:53:24,083 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'Locked')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,084 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:53:24,087 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS `Locked` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:53:24,087 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'Locked')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,088 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:53:24,090 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 16:53:24,415 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 16:53:24,417 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:53:24,418 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 16:53:24,418 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:53:24,419 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:53:24,435 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 16:54:28,816 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 16:54:28,823 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:54:28,823 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:54:28,825 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:54:28,825 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:54:28,825 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:54:28,827 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:54:28,827 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-30 16:54:28,828 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:54:28,828 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:54:28,888 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:54:28,888 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-30 16:54:28,888 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:54:28,889 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:54:28,890 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 16:54:29,560 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 16:54:29,561 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS `Locked` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:54:29,561 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:54:29,562 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'Locked')
2020-01-30 16:54:29,565 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS `Locked` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:54:29,565 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:54:29,566 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'Locked')
2020-01-30 16:54:29,566 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 16:54:30,530 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 16:54:30,531 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS `Locked` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:54:30,531 INFO sqlalchemy.engine.base.Engine Thread-13 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:54:30,532 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'Locked')
2020-01-30 16:54:30,532 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 16:54:30,535 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS `Locked` 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:54:30,535 INFO sqlalchemy.engine.base.Engine Thread-13 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:54:30,536 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'Locked')
2020-01-30 16:54:30,536 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 16:54:30,537 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 16:55:51,469 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 16:55:51,469 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,471 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 16:55:51,471 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 16:55:51,472 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 16:55:51,472 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,472 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 16:55:51,472 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 16:55:51,473 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 16:55:51,473 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,473 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 16:55:51,473 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 16:55:51,474 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 16:55:51,474 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,475 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 16:55:51,475 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 16:55:51,475 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 16:55:51,475 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,476 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 16:55:51,476 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,476 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 16:55:51,477 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 16:55:51,477 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 16:55:51,478 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:55:51,479 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 16:55:51,479 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,480 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 16:55:51,483 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:55:51,483 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 16:55:51,483 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,484 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'N')
2020-01-30 16:55:51,486 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 16:55:51,804 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 16:55:51,806 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:55:51,806 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 16:55:51,807 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:55:51,808 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:55:51,824 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 16:55:55,827 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 16:55:55,833 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:55:55,833 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 16:55:55,834 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:55:55,835 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:55:55,835 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:55:55,837 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:55:55,837 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-30 16:55:55,837 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:55:55,838 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:55:55,895 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:55:55,895 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-30 16:55:55,896 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:55:55,896 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:55:55,898 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 16:55:56,442 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 16:55:56,444 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:55:56,444 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:55:56,445 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:55:56,447 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:55:56,447 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:55:56,448 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:55:56,449 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 16:55:58,152 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 16:55:58,153 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:55:58,153 INFO sqlalchemy.engine.base.Engine Thread-13 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:55:58,154 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:55:58,154 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 16:55:58,157 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:55:58,157 INFO sqlalchemy.engine.base.Engine Thread-13 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:55:58,158 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:55:58,158 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 16:55:58,159 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 16:58:08,353 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 16:58:08,356 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:58:08,356 INFO sqlalchemy.engine.base.Engine Thread-14 : ()
2020-01-30 16:58:08,358 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:58:08,358 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:58:08,358 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:58:08,361 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:58:08,361 INFO sqlalchemy.engine.base.Engine Thread-14 : (1, 1)
2020-01-30 16:58:08,362 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:58:08,362 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:58:08,374 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:58:08,374 INFO sqlalchemy.engine.base.Engine Thread-14 : ('philip', 1, 1)
2020-01-30 16:58:08,375 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:58:08,375 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:58:08,377 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 16:58:08,853 INFO sqlalchemy.engine.base.Engine Thread-21 : BEGIN (implicit)
2020-01-30 16:58:08,854 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:58:08,854 INFO sqlalchemy.engine.base.Engine Thread-21 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:58:08,855 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:58:08,858 INFO sqlalchemy.engine.base.Engine Thread-21 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:58:08,858 INFO sqlalchemy.engine.base.Engine Thread-21 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:58:08,859 DEBUG sqlalchemy.engine.base.Engine Thread-21 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:58:08,859 INFO sqlalchemy.engine.base.Engine Thread-21 : ROLLBACK
2020-01-30 16:58:10,271 INFO sqlalchemy.engine.base.Engine Thread-23 : BEGIN (implicit)
2020-01-30 16:58:10,272 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:58:10,272 INFO sqlalchemy.engine.base.Engine Thread-23 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:58:10,273 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:58:10,273 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 16:58:10,275 INFO sqlalchemy.engine.base.Engine Thread-23 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:58:10,276 INFO sqlalchemy.engine.base.Engine Thread-23 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:58:10,276 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:58:10,276 DEBUG sqlalchemy.engine.base.Engine Thread-23 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 16:58:10,277 INFO sqlalchemy.engine.base.Engine Thread-23 : ROLLBACK
2020-01-30 16:59:42,750 INFO sqlalchemy.engine.base.Engine Thread-24 : BEGIN (implicit)
2020-01-30 16:59:42,753 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 16:59:42,753 INFO sqlalchemy.engine.base.Engine Thread-24 : ()
2020-01-30 16:59:42,754 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 16:59:42,754 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 16:59:42,754 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 16:59:42,757 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 16:59:42,757 INFO sqlalchemy.engine.base.Engine Thread-24 : (1, 1)
2020-01-30 16:59:42,757 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:59:42,758 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:59:42,769 INFO sqlalchemy.engine.base.Engine Thread-24 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 16:59:42,769 INFO sqlalchemy.engine.base.Engine Thread-24 : ('philip', 1, 1)
2020-01-30 16:59:42,769 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 16:59:42,770 DEBUG sqlalchemy.engine.base.Engine Thread-24 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 16:59:42,771 INFO sqlalchemy.engine.base.Engine Thread-24 : ROLLBACK
2020-01-30 16:59:43,276 INFO sqlalchemy.engine.base.Engine Thread-31 : BEGIN (implicit)
2020-01-30 16:59:43,277 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:59:43,277 INFO sqlalchemy.engine.base.Engine Thread-31 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:59:43,277 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:59:43,280 INFO sqlalchemy.engine.base.Engine Thread-31 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:59:43,280 INFO sqlalchemy.engine.base.Engine Thread-31 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 16:59:43,281 DEBUG sqlalchemy.engine.base.Engine Thread-31 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:59:43,281 INFO sqlalchemy.engine.base.Engine Thread-31 : ROLLBACK
2020-01-30 16:59:44,552 INFO sqlalchemy.engine.base.Engine Thread-33 : BEGIN (implicit)
2020-01-30 16:59:44,553 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:59:44,553 INFO sqlalchemy.engine.base.Engine Thread-33 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:59:44,554 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:59:44,554 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 16:59:44,556 INFO sqlalchemy.engine.base.Engine Thread-33 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 16:59:44,556 INFO sqlalchemy.engine.base.Engine Thread-33 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 16:59:44,557 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 16:59:44,557 DEBUG sqlalchemy.engine.base.Engine Thread-33 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 16:59:44,558 INFO sqlalchemy.engine.base.Engine Thread-33 : ROLLBACK
2020-01-30 17:02:02,554 INFO sqlalchemy.engine.base.Engine Thread-34 : BEGIN (implicit)
2020-01-30 17:02:02,557 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 17:02:02,557 INFO sqlalchemy.engine.base.Engine Thread-34 : ()
2020-01-30 17:02:02,559 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 17:02:02,560 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 17:02:02,560 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 17:02:02,562 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:02:02,562 INFO sqlalchemy.engine.base.Engine Thread-34 : (1, 1)
2020-01-30 17:02:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:02:02,563 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:02:02,576 INFO sqlalchemy.engine.base.Engine Thread-34 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 17:02:02,576 INFO sqlalchemy.engine.base.Engine Thread-34 : ('philip', 1, 1)
2020-01-30 17:02:02,577 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:02:02,577 DEBUG sqlalchemy.engine.base.Engine Thread-34 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:02:02,578 INFO sqlalchemy.engine.base.Engine Thread-34 : ROLLBACK
2020-01-30 17:02:03,176 INFO sqlalchemy.engine.base.Engine Thread-41 : BEGIN (implicit)
2020-01-30 17:02:03,177 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:03,177 INFO sqlalchemy.engine.base.Engine Thread-41 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:02:03,178 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:03,181 INFO sqlalchemy.engine.base.Engine Thread-41 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:03,181 INFO sqlalchemy.engine.base.Engine Thread-41 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:02:03,182 DEBUG sqlalchemy.engine.base.Engine Thread-41 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:03,183 INFO sqlalchemy.engine.base.Engine Thread-41 : ROLLBACK
2020-01-30 17:02:03,781 INFO sqlalchemy.engine.base.Engine Thread-43 : BEGIN (implicit)
2020-01-30 17:02:03,782 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:03,782 INFO sqlalchemy.engine.base.Engine Thread-43 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:02:03,783 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:03,783 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 17:02:03,786 INFO sqlalchemy.engine.base.Engine Thread-43 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:03,786 INFO sqlalchemy.engine.base.Engine Thread-43 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:02:03,787 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:03,787 DEBUG sqlalchemy.engine.base.Engine Thread-43 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 17:02:03,788 INFO sqlalchemy.engine.base.Engine Thread-43 : ROLLBACK
2020-01-30 17:02:10,925 INFO sqlalchemy.engine.base.Engine Thread-44 : BEGIN (implicit)
2020-01-30 17:02:10,926 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:10,926 INFO sqlalchemy.engine.base.Engine Thread-44 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:02:10,927 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:10,930 INFO sqlalchemy.engine.base.Engine Thread-44 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:10,930 INFO sqlalchemy.engine.base.Engine Thread-44 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:02:10,931 DEBUG sqlalchemy.engine.base.Engine Thread-44 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:10,931 INFO sqlalchemy.engine.base.Engine Thread-44 : ROLLBACK
2020-01-30 17:02:11,295 INFO sqlalchemy.engine.base.Engine Thread-45 : BEGIN (implicit)
2020-01-30 17:02:11,296 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:11,296 INFO sqlalchemy.engine.base.Engine Thread-45 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:02:11,297 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:11,297 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 17:02:11,299 INFO sqlalchemy.engine.base.Engine Thread-45 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:02:11,300 INFO sqlalchemy.engine.base.Engine Thread-45 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:02:11,300 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:02:11,300 DEBUG sqlalchemy.engine.base.Engine Thread-45 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 17:02:11,301 INFO sqlalchemy.engine.base.Engine Thread-45 : ROLLBACK
2020-01-30 17:05:00,676 INFO sqlalchemy.engine.base.Engine Thread-46 : BEGIN (implicit)
2020-01-30 17:05:00,678 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 17:05:00,678 INFO sqlalchemy.engine.base.Engine Thread-46 : ()
2020-01-30 17:05:00,680 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 17:05:00,681 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 17:05:00,681 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 17:05:00,683 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:00,683 INFO sqlalchemy.engine.base.Engine Thread-46 : (1, 1)
2020-01-30 17:05:00,684 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:00,684 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:00,697 INFO sqlalchemy.engine.base.Engine Thread-46 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 17:05:00,697 INFO sqlalchemy.engine.base.Engine Thread-46 : ('philip', 1, 1)
2020-01-30 17:05:00,698 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:00,698 DEBUG sqlalchemy.engine.base.Engine Thread-46 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:00,700 INFO sqlalchemy.engine.base.Engine Thread-46 : ROLLBACK
2020-01-30 17:05:01,489 INFO sqlalchemy.engine.base.Engine Thread-53 : BEGIN (implicit)
2020-01-30 17:05:01,490 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:01,490 INFO sqlalchemy.engine.base.Engine Thread-53 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:05:01,491 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:01,494 INFO sqlalchemy.engine.base.Engine Thread-53 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:01,494 INFO sqlalchemy.engine.base.Engine Thread-53 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:05:01,494 DEBUG sqlalchemy.engine.base.Engine Thread-53 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:01,495 INFO sqlalchemy.engine.base.Engine Thread-53 : ROLLBACK
2020-01-30 17:05:02,079 INFO sqlalchemy.engine.base.Engine Thread-55 : BEGIN (implicit)
2020-01-30 17:05:02,080 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:02,081 INFO sqlalchemy.engine.base.Engine Thread-55 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:05:02,082 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:02,082 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 17:05:02,085 INFO sqlalchemy.engine.base.Engine Thread-55 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:02,086 INFO sqlalchemy.engine.base.Engine Thread-55 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:05:02,087 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:02,087 DEBUG sqlalchemy.engine.base.Engine Thread-55 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 17:05:02,088 INFO sqlalchemy.engine.base.Engine Thread-55 : ROLLBACK
2020-01-30 17:05:28,292 INFO sqlalchemy.engine.base.Engine Thread-56 : BEGIN (implicit)
2020-01-30 17:05:28,297 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 17:05:28,297 INFO sqlalchemy.engine.base.Engine Thread-56 : ()
2020-01-30 17:05:28,299 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 17:05:28,299 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 17:05:28,299 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 17:05:28,301 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:28,302 INFO sqlalchemy.engine.base.Engine Thread-56 : (1, 1)
2020-01-30 17:05:28,302 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:28,303 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:28,315 INFO sqlalchemy.engine.base.Engine Thread-56 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 17:05:28,315 INFO sqlalchemy.engine.base.Engine Thread-56 : ('philip', 1, 1)
2020-01-30 17:05:28,316 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:28,316 DEBUG sqlalchemy.engine.base.Engine Thread-56 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:28,317 INFO sqlalchemy.engine.base.Engine Thread-56 : ROLLBACK
2020-01-30 17:05:28,918 INFO sqlalchemy.engine.base.Engine Thread-63 : BEGIN (implicit)
2020-01-30 17:05:28,919 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:28,919 INFO sqlalchemy.engine.base.Engine Thread-63 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:05:28,920 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:28,922 INFO sqlalchemy.engine.base.Engine Thread-63 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:28,922 INFO sqlalchemy.engine.base.Engine Thread-63 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:05:28,923 DEBUG sqlalchemy.engine.base.Engine Thread-63 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:28,924 INFO sqlalchemy.engine.base.Engine Thread-63 : ROLLBACK
2020-01-30 17:05:29,480 INFO sqlalchemy.engine.base.Engine Thread-65 : BEGIN (implicit)
2020-01-30 17:05:29,482 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 17:05:29,482 INFO sqlalchemy.engine.base.Engine Thread-65 : ()
2020-01-30 17:05:29,483 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 17:05:29,483 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 17:05:29,484 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 17:05:29,485 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:29,485 INFO sqlalchemy.engine.base.Engine Thread-65 : (1, 1)
2020-01-30 17:05:29,486 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:29,486 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:29,493 INFO sqlalchemy.engine.base.Engine Thread-65 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 17:05:29,493 INFO sqlalchemy.engine.base.Engine Thread-65 : ('philip', 1, 1)
2020-01-30 17:05:29,494 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:29,495 DEBUG sqlalchemy.engine.base.Engine Thread-65 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:29,497 INFO sqlalchemy.engine.base.Engine Thread-65 : ROLLBACK
2020-01-30 17:05:29,880 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-01-30 17:05:29,882 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:29,882 INFO sqlalchemy.engine.base.Engine Thread-72 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:05:29,883 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:29,886 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:29,886 INFO sqlalchemy.engine.base.Engine Thread-72 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:05:29,886 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:29,887 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-01-30 17:05:36,638 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-30 17:05:36,639 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:36,639 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-01-30 17:05:36,648 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:36,650 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:36,653 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-30 17:05:36,658 INFO sqlalchemy.engine.base.Engine Thread-77 : BEGIN (implicit)
2020-01-30 17:05:36,660 INFO sqlalchemy.engine.base.Engine Thread-77 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:36,660 INFO sqlalchemy.engine.base.Engine Thread-77 : (1, 1)
2020-01-30 17:05:36,661 INFO sqlalchemy.engine.base.Engine Thread-76 : BEGIN (implicit)
2020-01-30 17:05:36,662 INFO sqlalchemy.engine.base.Engine Thread-76 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:36,662 INFO sqlalchemy.engine.base.Engine Thread-76 : (1, 1)
2020-01-30 17:05:36,662 INFO sqlalchemy.engine.base.Engine Thread-75 : BEGIN (implicit)
2020-01-30 17:05:36,663 INFO sqlalchemy.engine.base.Engine Thread-75 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:36,663 INFO sqlalchemy.engine.base.Engine Thread-75 : (1, 1)
2020-01-30 17:05:36,664 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:36,664 DEBUG sqlalchemy.engine.base.Engine Thread-75 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:36,665 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:36,666 INFO sqlalchemy.engine.base.Engine Thread-75 : ROLLBACK
2020-01-30 17:05:36,666 DEBUG sqlalchemy.engine.base.Engine Thread-76 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:36,667 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:36,674 DEBUG sqlalchemy.engine.base.Engine Thread-77 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:36,672 INFO sqlalchemy.engine.base.Engine Thread-76 : ROLLBACK
2020-01-30 17:05:36,675 INFO sqlalchemy.engine.base.Engine Thread-77 : ROLLBACK
2020-01-30 17:05:36,683 INFO sqlalchemy.engine.base.Engine Thread-78 : BEGIN (implicit)
2020-01-30 17:05:36,684 INFO sqlalchemy.engine.base.Engine Thread-78 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:05:36,685 INFO sqlalchemy.engine.base.Engine Thread-78 : (1, 1)
2020-01-30 17:05:36,685 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:05:36,686 DEBUG sqlalchemy.engine.base.Engine Thread-78 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:05:36,687 INFO sqlalchemy.engine.base.Engine Thread-78 : ROLLBACK
2020-01-30 17:05:40,128 INFO sqlalchemy.engine.base.Engine Thread-79 : BEGIN (implicit)
2020-01-30 17:05:40,129 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:40,129 INFO sqlalchemy.engine.base.Engine Thread-79 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:05:40,130 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:40,130 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 17:05:40,133 INFO sqlalchemy.engine.base.Engine Thread-79 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:05:40,133 INFO sqlalchemy.engine.base.Engine Thread-79 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:05:40,134 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:05:40,134 DEBUG sqlalchemy.engine.base.Engine Thread-79 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 17:05:40,135 INFO sqlalchemy.engine.base.Engine Thread-79 : ROLLBACK
2020-01-30 17:06:41,105 INFO sqlalchemy.engine.base.Engine Thread-80 : BEGIN (implicit)
2020-01-30 17:06:41,108 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 17:06:41,109 INFO sqlalchemy.engine.base.Engine Thread-80 : ()
2020-01-30 17:06:41,110 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 17:06:41,111 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 17:06:41,111 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 17:06:41,113 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:06:41,113 INFO sqlalchemy.engine.base.Engine Thread-80 : (1, 1)
2020-01-30 17:06:41,114 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,114 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,126 INFO sqlalchemy.engine.base.Engine Thread-80 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 17:06:41,126 INFO sqlalchemy.engine.base.Engine Thread-80 : ('philip', 1, 1)
2020-01-30 17:06:41,127 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,127 DEBUG sqlalchemy.engine.base.Engine Thread-80 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,129 INFO sqlalchemy.engine.base.Engine Thread-80 : ROLLBACK
2020-01-30 17:06:41,744 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-01-30 17:06:41,745 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:06:41,747 INFO sqlalchemy.engine.base.Engine Thread-89 : BEGIN (implicit)
2020-01-30 17:06:41,747 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-01-30 17:06:41,749 INFO sqlalchemy.engine.base.Engine Thread-90 : BEGIN (implicit)
2020-01-30 17:06:41,751 INFO sqlalchemy.engine.base.Engine Thread-89 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:06:41,753 INFO sqlalchemy.engine.base.Engine Thread-90 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:06:41,754 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,754 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,754 INFO sqlalchemy.engine.base.Engine Thread-90 : (1, 1)
2020-01-30 17:06:41,755 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-01-30 17:06:41,754 INFO sqlalchemy.engine.base.Engine Thread-89 : (1, 1)
2020-01-30 17:06:41,756 INFO sqlalchemy.engine.base.Engine Thread-87 : BEGIN (implicit)
2020-01-30 17:06:41,757 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,759 INFO sqlalchemy.engine.base.Engine Thread-87 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:06:41,759 DEBUG sqlalchemy.engine.base.Engine Thread-90 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,760 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,761 DEBUG sqlalchemy.engine.base.Engine Thread-89 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,761 INFO sqlalchemy.engine.base.Engine Thread-90 : ROLLBACK
2020-01-30 17:06:41,763 INFO sqlalchemy.engine.base.Engine Thread-89 : ROLLBACK
2020-01-30 17:06:41,760 INFO sqlalchemy.engine.base.Engine Thread-87 : (1, 1)
2020-01-30 17:06:41,765 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,765 DEBUG sqlalchemy.engine.base.Engine Thread-87 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,767 INFO sqlalchemy.engine.base.Engine Thread-87 : ROLLBACK
2020-01-30 17:06:41,832 INFO sqlalchemy.engine.base.Engine Thread-91 : BEGIN (implicit)
2020-01-30 17:06:41,833 INFO sqlalchemy.engine.base.Engine Thread-91 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:06:41,833 INFO sqlalchemy.engine.base.Engine Thread-91 : (1, 1)
2020-01-30 17:06:41,834 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:06:41,834 DEBUG sqlalchemy.engine.base.Engine Thread-91 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:06:41,835 INFO sqlalchemy.engine.base.Engine Thread-91 : ROLLBACK
2020-01-30 17:06:41,872 INFO sqlalchemy.engine.base.Engine Thread-92 : BEGIN (implicit)
2020-01-30 17:06:41,873 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:06:41,873 INFO sqlalchemy.engine.base.Engine Thread-92 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:06:41,874 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:06:41,876 INFO sqlalchemy.engine.base.Engine Thread-92 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:06:41,876 INFO sqlalchemy.engine.base.Engine Thread-92 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:06:41,877 DEBUG sqlalchemy.engine.base.Engine Thread-92 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:06:41,878 INFO sqlalchemy.engine.base.Engine Thread-92 : ROLLBACK
2020-01-30 17:06:42,843 INFO sqlalchemy.engine.base.Engine Thread-94 : BEGIN (implicit)
2020-01-30 17:06:42,845 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:06:42,845 INFO sqlalchemy.engine.base.Engine Thread-94 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:06:42,845 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:06:42,846 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 17:06:42,848 INFO sqlalchemy.engine.base.Engine Thread-94 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:06:42,848 INFO sqlalchemy.engine.base.Engine Thread-94 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:06:42,849 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:06:42,849 DEBUG sqlalchemy.engine.base.Engine Thread-94 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 17:06:42,850 INFO sqlalchemy.engine.base.Engine Thread-94 : ROLLBACK
2020-01-30 17:16:08,866 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-01-30 17:16:08,869 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 17:16:08,869 INFO sqlalchemy.engine.base.Engine Thread-95 : ()
2020-01-30 17:16:08,872 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 17:16:08,873 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 17:16:08,873 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 17:16:08,875 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 17:16:08,875 INFO sqlalchemy.engine.base.Engine Thread-95 : (1, 1)
2020-01-30 17:16:08,876 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:16:08,876 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:16:08,889 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 17:16:08,889 INFO sqlalchemy.engine.base.Engine Thread-95 : ('philip', 1, 1)
2020-01-30 17:16:08,890 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 17:16:08,890 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 17:16:08,892 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-01-30 17:16:09,515 INFO sqlalchemy.engine.base.Engine Thread-102 : BEGIN (implicit)
2020-01-30 17:16:09,518 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:16:09,518 INFO sqlalchemy.engine.base.Engine Thread-102 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:16:09,519 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:16:09,521 INFO sqlalchemy.engine.base.Engine Thread-102 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:16:09,521 INFO sqlalchemy.engine.base.Engine Thread-102 : ('LightBlue', 'black', 'N', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 17:16:09,522 DEBUG sqlalchemy.engine.base.Engine Thread-102 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:16:09,522 INFO sqlalchemy.engine.base.Engine Thread-102 : ROLLBACK
2020-01-30 17:16:10,275 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-01-30 17:16:10,276 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:16:10,276 INFO sqlalchemy.engine.base.Engine Thread-104 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:16:10,277 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:16:10,277 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 17:16:10,279 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 17:16:10,279 INFO sqlalchemy.engine.base.Engine Thread-104 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 17:16:10,280 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 17:16:10,280 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 17:16:10,281 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-01-30 19:31:25,733 INFO sqlalchemy.engine.base.Engine Thread-105 : BEGIN (implicit)
2020-01-30 19:31:25,735 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 19:31:25,735 INFO sqlalchemy.engine.base.Engine Thread-105 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,737 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 19:31:25,740 INFO sqlalchemy.engine.base.Engine Thread-105 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 19:31:25,740 INFO sqlalchemy.engine.base.Engine Thread-105 : ('LightBlue', 'black', 'N', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,741 DEBUG sqlalchemy.engine.base.Engine Thread-105 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'N')
2020-01-30 19:31:25,743 INFO sqlalchemy.engine.base.Engine Thread-105 : ROLLBACK
2020-01-30 19:31:26,152 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-01-30 19:31:26,154 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 19:31:26,154 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-01-30 19:31:26,154 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 19:31:26,155 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 19:31:26,156 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-01-30 20:18:16,437 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:18:16,437 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,438 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:18:16,439 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:18:16,439 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:18:16,439 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,440 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:18:16,440 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:18:16,440 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:18:16,441 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,441 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:18:16,441 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:18:16,441 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:18:16,441 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:18:16,442 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:18:16,443 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:18:16,443 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,443 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:18:16,444 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,444 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:18:16,444 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,445 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:18:16,450 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:18:16,450 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:16,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:18:16,452 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:18:16,453 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:18:16,456 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:18:16,456 INFO sqlalchemy.engine.base.Engine Thread-2 : (1, 1)
2020-01-30 20:18:16,457 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:18:16,458 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:18:16,522 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:18:16,522 INFO sqlalchemy.engine.base.Engine Thread-2 : ('philip', 1, 1)
2020-01-30 20:18:16,523 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:18:16,523 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:18:16,525 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:18:17,096 INFO sqlalchemy.engine.base.Engine Thread-9 : BEGIN (implicit)
2020-01-30 20:18:17,097 INFO sqlalchemy.engine.base.Engine Thread-9 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:17,098 INFO sqlalchemy.engine.base.Engine Thread-9 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:18:17,098 DEBUG sqlalchemy.engine.base.Engine Thread-9 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:17,101 INFO sqlalchemy.engine.base.Engine Thread-9 : ROLLBACK
2020-01-30 20:18:18,493 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 20:18:18,495 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:18,495 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:18:18,495 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:18,496 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:18:18,498 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 20:18:19,347 INFO sqlalchemy.engine.base.Engine Thread-12 : BEGIN (implicit)
2020-01-30 20:18:19,348 INFO sqlalchemy.engine.base.Engine Thread-12 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:19,348 INFO sqlalchemy.engine.base.Engine Thread-12 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 20:18:19,349 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:19,349 DEBUG sqlalchemy.engine.base.Engine Thread-12 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:18:19,352 INFO sqlalchemy.engine.base.Engine Thread-12 : ROLLBACK
2020-01-30 20:18:20,255 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 20:18:20,256 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:20,256 INFO sqlalchemy.engine.base.Engine Thread-13 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:18:20,257 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:20,257 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:18:20,260 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 20:18:20,402 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 20:18:20,403 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:20,403 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:18:20,404 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:20,407 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 20:18:22,850 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 20:18:22,851 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:22,852 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,853 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,854 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:22,857 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 20:18:23,195 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 20:18:23,196 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:18:23,196 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 20:18:23,197 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:18:23,197 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:18:23,208 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 20:18:54,951 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:18:54,951 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,952 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:18:54,953 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:18:54,953 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:18:54,954 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,954 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:18:54,954 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:18:54,955 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:18:54,955 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,955 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:18:54,955 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:18:54,955 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:18:54,955 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,956 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:18:54,956 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:18:54,957 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:18:54,957 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,957 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:18:54,957 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,958 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:18:54,958 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:18:54,959 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:18:54,961 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:18:54,961 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:18:54,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:18:54,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,962 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,963 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:18:54,966 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:18:55,290 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:18:55,293 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:18:55,293 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:18:55,294 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:18:55,294 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:18:55,313 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:19:13,183 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:19:13,183 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:19:13,185 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:19:13,186 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:19:13,186 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:19:13,186 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:19:13,187 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:19:13,187 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:19:13,187 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:19:13,187 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:19:13,188 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:19:13,188 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:19:13,189 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:19:13,189 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,190 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:19:13,190 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,190 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:19:13,190 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:19:13,191 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:19:13,192 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:19:13,192 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:19:13,193 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:19:13,193 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,194 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:19:13,198 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:19:13,540 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:19:13,543 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:19:13,543 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:19:13,544 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:19:13,544 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:19:13,562 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:20:32,445 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:20:32,446 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,447 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:20:32,447 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:20:32,448 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:20:32,448 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,449 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:20:32,449 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:20:32,449 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:20:32,449 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,449 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:20:32,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:20:32,450 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:20:32,450 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,450 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:20:32,451 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:20:32,451 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:20:32,451 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,452 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:20:32,452 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,452 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:20:32,452 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:20:32,453 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:20:32,455 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:20:32,455 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,456 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:20:32,460 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_value AS locked 
FROM parameters AS parameters_1 INNER JOIN datesofinterest AS datesofinterest_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AND parameters_1.param_value = %s
2020-01-30 20:20:32,460 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'N')
2020-01-30 20:20:32,461 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:20:32,463 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:20:32,824 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:20:32,826 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:20:32,826 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:20:32,827 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:20:32,827 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:20:32,844 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:21:27,052 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:21:27,052 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,053 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:21:27,054 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:21:27,055 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:21:27,055 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,056 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:21:27,056 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:21:27,057 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:21:27,057 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,057 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:21:27,057 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:21:27,058 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:21:27,058 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,059 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:21:27,060 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:21:27,061 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:21:27,061 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,061 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:21:27,062 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,062 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:21:27,062 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:27,063 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:21:27,065 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:21:27,065 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:21:27,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:21:27,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,066 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,067 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:27,072 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_value AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE (datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s) AND parameters_1.param_value = %s
2020-01-30 20:21:27,072 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), 'N')
2020-01-30 20:21:27,073 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:21:27,075 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:21:27,407 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:21:27,409 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:21:27,409 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:21:27,410 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:21:27,410 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:21:27,429 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:21:41,643 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:21:41,643 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,644 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:21:41,645 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:21:41,645 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:21:41,645 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:21:41,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:21:41,646 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:21:41,646 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,646 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:21:41,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:21:41,647 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:21:41,647 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,647 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:21:41,648 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:21:41,648 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:21:41,648 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,649 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:21:41,649 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,650 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:21:41,650 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:21:41,650 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:21:41,652 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:21:41,652 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:21:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:21:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,653 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,654 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,654 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,654 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:21:41,658 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_value AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:21:41,658 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', '1')
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', '0')
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', '0')
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', '0')
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', '0')
2020-01-30 20:21:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', '0')
2020-01-30 20:21:41,660 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', '0')
2020-01-30 20:21:41,661 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:21:42,007 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:21:42,009 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:21:42,009 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:21:42,010 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:21:42,010 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:21:42,028 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:22:27,884 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:22:27,885 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,886 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:22:27,886 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:22:27,887 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:22:27,887 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,887 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:22:27,887 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:22:27,888 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:22:27,888 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,888 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:22:27,888 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:22:27,888 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:22:27,888 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,889 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:22:27,889 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:22:27,890 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:22:27,890 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,890 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:22:27,890 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,891 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:22:27,891 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:22:27,892 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:22:27,893 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:22:27,893 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:22:27,894 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:22:27,894 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,895 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:22:27,899 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:22:27,899 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:22:27,899 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-01-30 20:22:27,900 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:22:27,902 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:22:28,224 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:22:28,226 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:22:28,226 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:22:28,227 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:22:28,227 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:22:28,244 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:24:35,755 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'sql_mode'
2020-01-30 20:24:35,755 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:24:35,757 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('sql_mode', '')
2020-01-30 20:24:35,758 INFO sqlalchemy.engine.base.Engine Thread-2 : SHOW VARIABLES LIKE 'lower_case_table_names'
2020-01-30 20:24:35,758 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Variable_name', 'Value')
2020-01-30 20:24:35,759 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('lower_case_table_names', '0')
2020-01-30 20:24:35,759 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT DATABASE()
2020-01-30 20:24:35,759 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,760 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('DATABASE()',)
2020-01-30 20:24:35,760 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('fmapp',)
2020-01-30 20:24:35,760 INFO sqlalchemy.engine.base.Engine Thread-2 : show collation where `Charset` = 'utf8mb4' and `Collation` = 'utf8mb4_bin'
2020-01-30 20:24:35,760 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,761 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('Collation', 'Charset', 'Id', 'Default', 'Compiled', 'Sortlen')
2020-01-30 20:24:35,761 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row ('utf8mb4_bin', 'utf8mb4', 46, '', 'Yes', 1)
2020-01-30 20:24:35,762 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2020-01-30 20:24:35,762 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,763 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2020-01-30 20:24:35,763 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,763 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT CAST('test collated returns' AS CHAR CHARACTER SET utf8mb4) COLLATE utf8mb4_bin AS anon_1
2020-01-30 20:24:35,763 INFO sqlalchemy.engine.base.Engine Thread-2 : ()
2020-01-30 20:24:35,764 INFO sqlalchemy.engine.base.Engine Thread-2 : BEGIN (implicit)
2020-01-30 20:24:35,766 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:24:35,766 INFO sqlalchemy.engine.base.Engine Thread-2 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:24:35,767 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:24:35,767 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,767 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,768 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:24:35,772 INFO sqlalchemy.engine.base.Engine Thread-2 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:24:35,772 INFO sqlalchemy.engine.base.Engine Thread-2 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2021, 6, 9, 0, 0))
2020-01-30 20:24:35,773 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 5, 25, 0, 0), datetime.datetime(2020, 5, 25, 23, 45), 'Late May Holiday', 'Late May Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 25, 0, 0), datetime.datetime(2020, 12, 25, 23, 45), 'Christmas Day', 'Christmas Day', 'LightBlue', 'black', 'No')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 26, 0, 0), datetime.datetime(2020, 12, 26, 23, 45), 'Boxing Day', 'Boxing Day', 'LightBlue', 'black', 'No')
2020-01-30 20:24:35,774 DEBUG sqlalchemy.engine.base.Engine Thread-2 : Row (datetime.datetime(2020, 12, 28, 0, 0), datetime.datetime(2020, 12, 28, 23, 45), 'Boxing Day Holiday', 'Boxing Day Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:24:35,776 INFO sqlalchemy.engine.base.Engine Thread-2 : ROLLBACK
2020-01-30 20:24:36,303 INFO sqlalchemy.engine.base.Engine Thread-3 : BEGIN (implicit)
2020-01-30 20:24:36,306 INFO sqlalchemy.engine.base.Engine Thread-3 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:24:36,306 INFO sqlalchemy.engine.base.Engine Thread-3 : (1, 1)
2020-01-30 20:24:36,307 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:24:36,307 DEBUG sqlalchemy.engine.base.Engine Thread-3 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:24:36,326 INFO sqlalchemy.engine.base.Engine Thread-3 : ROLLBACK
2020-01-30 20:24:43,925 INFO sqlalchemy.engine.base.Engine Thread-4 : BEGIN (implicit)
2020-01-30 20:24:43,931 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:24:43,931 INFO sqlalchemy.engine.base.Engine Thread-4 : ()
2020-01-30 20:24:43,932 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:24:43,933 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:24:43,933 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:24:43,935 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:24:43,935 INFO sqlalchemy.engine.base.Engine Thread-4 : (1, 1)
2020-01-30 20:24:43,935 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:24:43,935 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:24:43,997 INFO sqlalchemy.engine.base.Engine Thread-4 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:24:43,997 INFO sqlalchemy.engine.base.Engine Thread-4 : ('philip', 1, 1)
2020-01-30 20:24:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:24:43,998 DEBUG sqlalchemy.engine.base.Engine Thread-4 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:24:43,999 INFO sqlalchemy.engine.base.Engine Thread-4 : ROLLBACK
2020-01-30 20:24:44,601 INFO sqlalchemy.engine.base.Engine Thread-11 : BEGIN (implicit)
2020-01-30 20:24:44,602 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:24:44,603 INFO sqlalchemy.engine.base.Engine Thread-11 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:24:44,603 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:24:44,607 INFO sqlalchemy.engine.base.Engine Thread-11 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:24:44,607 INFO sqlalchemy.engine.base.Engine Thread-11 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:24:44,608 DEBUG sqlalchemy.engine.base.Engine Thread-11 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:24:44,609 INFO sqlalchemy.engine.base.Engine Thread-11 : ROLLBACK
2020-01-30 20:24:45,384 INFO sqlalchemy.engine.base.Engine Thread-13 : BEGIN (implicit)
2020-01-30 20:24:45,385 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:24:45,385 INFO sqlalchemy.engine.base.Engine Thread-13 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:24:45,386 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:24:45,387 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:24:45,391 INFO sqlalchemy.engine.base.Engine Thread-13 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:24:45,391 INFO sqlalchemy.engine.base.Engine Thread-13 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:24:45,392 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:24:45,392 DEBUG sqlalchemy.engine.base.Engine Thread-13 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:24:45,393 INFO sqlalchemy.engine.base.Engine Thread-13 : ROLLBACK
2020-01-30 20:31:59,537 INFO sqlalchemy.engine.base.Engine Thread-14 : BEGIN (implicit)
2020-01-30 20:31:59,539 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:31:59,539 INFO sqlalchemy.engine.base.Engine Thread-14 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 20:31:59,541 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:31:59,541 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:31:59,544 INFO sqlalchemy.engine.base.Engine Thread-14 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:31:59,544 INFO sqlalchemy.engine.base.Engine Thread-14 : ('LightBlue', 'black', datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0), datetime.datetime(2020, 2, 24, 0, 0), datetime.datetime(2020, 4, 6, 0, 0))
2020-01-30 20:31:59,545 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:31:59,546 DEBUG sqlalchemy.engine.base.Engine Thread-14 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:31:59,547 INFO sqlalchemy.engine.base.Engine Thread-14 : ROLLBACK
2020-01-30 20:32:00,497 INFO sqlalchemy.engine.base.Engine Thread-15 : BEGIN (implicit)
2020-01-30 20:32:00,499 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:32:00,499 INFO sqlalchemy.engine.base.Engine Thread-15 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 20:32:00,500 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:32:00,500 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:32:00,500 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'Salmon', 'white', 'Y')
2020-01-30 20:32:00,503 INFO sqlalchemy.engine.base.Engine Thread-15 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:32:00,504 INFO sqlalchemy.engine.base.Engine Thread-15 : ('LightBlue', 'black', datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0), datetime.datetime(2020, 3, 30, 0, 0), datetime.datetime(2020, 5, 11, 0, 0))
2020-01-30 20:32:00,504 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:32:00,504 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 4, 10, 0, 0), datetime.datetime(2020, 4, 13, 23, 45), 'Easter Holiday', 'Easter Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:32:00,505 DEBUG sqlalchemy.engine.base.Engine Thread-15 : Row (datetime.datetime(2020, 5, 8, 0, 0), datetime.datetime(2020, 5, 8, 23, 45), 'May Day', 'May Day Holiday', 'LightBlue', 'black', 'No')
2020-01-30 20:32:00,506 INFO sqlalchemy.engine.base.Engine Thread-15 : ROLLBACK
2020-01-30 20:50:28,244 INFO sqlalchemy.engine.base.Engine Thread-16 : BEGIN (implicit)
2020-01-30 20:50:28,247 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:50:28,247 INFO sqlalchemy.engine.base.Engine Thread-16 : ()
2020-01-30 20:50:28,250 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:50:28,250 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:50:28,250 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:50:28,253 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:50:28,253 INFO sqlalchemy.engine.base.Engine Thread-16 : (1, 1)
2020-01-30 20:50:28,254 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:50:28,254 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:50:28,268 INFO sqlalchemy.engine.base.Engine Thread-16 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:50:28,268 INFO sqlalchemy.engine.base.Engine Thread-16 : ('philip', 1, 1)
2020-01-30 20:50:28,269 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:50:28,269 DEBUG sqlalchemy.engine.base.Engine Thread-16 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:50:28,270 INFO sqlalchemy.engine.base.Engine Thread-16 : ROLLBACK
2020-01-30 20:50:28,968 INFO sqlalchemy.engine.base.Engine Thread-37 : BEGIN (implicit)
2020-01-30 20:50:28,969 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:50:28,969 INFO sqlalchemy.engine.base.Engine Thread-37 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:50:28,970 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:50:28,974 INFO sqlalchemy.engine.base.Engine Thread-37 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:50:28,974 INFO sqlalchemy.engine.base.Engine Thread-37 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:50:28,975 DEBUG sqlalchemy.engine.base.Engine Thread-37 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:50:28,976 INFO sqlalchemy.engine.base.Engine Thread-37 : ROLLBACK
2020-01-30 20:50:30,416 INFO sqlalchemy.engine.base.Engine Thread-39 : BEGIN (implicit)
2020-01-30 20:50:30,417 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:50:30,417 INFO sqlalchemy.engine.base.Engine Thread-39 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:50:30,418 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:50:30,418 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:50:30,422 INFO sqlalchemy.engine.base.Engine Thread-39 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:50:30,422 INFO sqlalchemy.engine.base.Engine Thread-39 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:50:30,423 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:50:30,423 DEBUG sqlalchemy.engine.base.Engine Thread-39 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:50:30,424 INFO sqlalchemy.engine.base.Engine Thread-39 : ROLLBACK
2020-01-30 20:53:02,435 INFO sqlalchemy.engine.base.Engine Thread-40 : BEGIN (implicit)
2020-01-30 20:53:02,438 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:53:02,438 INFO sqlalchemy.engine.base.Engine Thread-40 : ()
2020-01-30 20:53:02,439 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:53:02,440 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:53:02,440 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:53:02,442 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:53:02,442 INFO sqlalchemy.engine.base.Engine Thread-40 : (1, 1)
2020-01-30 20:53:02,443 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:53:02,443 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:53:02,454 INFO sqlalchemy.engine.base.Engine Thread-40 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:53:02,454 INFO sqlalchemy.engine.base.Engine Thread-40 : ('philip', 1, 1)
2020-01-30 20:53:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:53:02,455 DEBUG sqlalchemy.engine.base.Engine Thread-40 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:53:02,457 INFO sqlalchemy.engine.base.Engine Thread-40 : ROLLBACK
2020-01-30 20:53:02,962 INFO sqlalchemy.engine.base.Engine Thread-47 : BEGIN (implicit)
2020-01-30 20:53:02,963 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:02,963 INFO sqlalchemy.engine.base.Engine Thread-47 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:53:02,964 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:02,967 INFO sqlalchemy.engine.base.Engine Thread-47 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:02,967 INFO sqlalchemy.engine.base.Engine Thread-47 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:53:02,968 DEBUG sqlalchemy.engine.base.Engine Thread-47 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:02,969 INFO sqlalchemy.engine.base.Engine Thread-47 : ROLLBACK
2020-01-30 20:53:03,611 INFO sqlalchemy.engine.base.Engine Thread-49 : BEGIN (implicit)
2020-01-30 20:53:03,612 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:03,613 INFO sqlalchemy.engine.base.Engine Thread-49 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:53:03,614 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:03,614 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:53:03,617 INFO sqlalchemy.engine.base.Engine Thread-49 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:03,618 INFO sqlalchemy.engine.base.Engine Thread-49 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:53:03,618 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:03,619 DEBUG sqlalchemy.engine.base.Engine Thread-49 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:53:03,619 INFO sqlalchemy.engine.base.Engine Thread-49 : ROLLBACK
2020-01-30 20:53:50,951 INFO sqlalchemy.engine.base.Engine Thread-50 : BEGIN (implicit)
2020-01-30 20:53:50,953 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:53:50,953 INFO sqlalchemy.engine.base.Engine Thread-50 : ()
2020-01-30 20:53:50,954 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:53:50,954 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:53:50,954 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:53:50,956 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:53:50,956 INFO sqlalchemy.engine.base.Engine Thread-50 : (1, 1)
2020-01-30 20:53:50,957 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:53:50,957 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:53:50,969 INFO sqlalchemy.engine.base.Engine Thread-50 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:53:50,969 INFO sqlalchemy.engine.base.Engine Thread-50 : ('philip', 1, 1)
2020-01-30 20:53:50,970 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:53:50,970 DEBUG sqlalchemy.engine.base.Engine Thread-50 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:53:50,971 INFO sqlalchemy.engine.base.Engine Thread-50 : ROLLBACK
2020-01-30 20:53:51,575 INFO sqlalchemy.engine.base.Engine Thread-57 : BEGIN (implicit)
2020-01-30 20:53:51,576 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:51,576 INFO sqlalchemy.engine.base.Engine Thread-57 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:53:51,576 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:51,580 INFO sqlalchemy.engine.base.Engine Thread-57 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:51,580 INFO sqlalchemy.engine.base.Engine Thread-57 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:53:51,581 DEBUG sqlalchemy.engine.base.Engine Thread-57 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:51,582 INFO sqlalchemy.engine.base.Engine Thread-57 : ROLLBACK
2020-01-30 20:53:52,247 INFO sqlalchemy.engine.base.Engine Thread-59 : BEGIN (implicit)
2020-01-30 20:53:52,248 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:52,248 INFO sqlalchemy.engine.base.Engine Thread-59 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:53:52,249 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:52,250 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 20:53:52,253 INFO sqlalchemy.engine.base.Engine Thread-59 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:53:52,253 INFO sqlalchemy.engine.base.Engine Thread-59 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 20:53:52,253 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:53:52,256 DEBUG sqlalchemy.engine.base.Engine Thread-59 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 20:53:52,256 INFO sqlalchemy.engine.base.Engine Thread-59 : ROLLBACK
2020-01-30 20:55:00,704 INFO sqlalchemy.engine.base.Engine Thread-60 : BEGIN (implicit)
2020-01-30 20:55:00,706 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:55:00,706 INFO sqlalchemy.engine.base.Engine Thread-60 : ()
2020-01-30 20:55:00,708 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:55:00,708 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:55:00,708 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:55:00,710 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:55:00,710 INFO sqlalchemy.engine.base.Engine Thread-60 : (1, 1)
2020-01-30 20:55:00,711 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:00,711 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:00,723 INFO sqlalchemy.engine.base.Engine Thread-60 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:55:00,723 INFO sqlalchemy.engine.base.Engine Thread-60 : ('philip', 1, 1)
2020-01-30 20:55:00,723 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:00,724 DEBUG sqlalchemy.engine.base.Engine Thread-60 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:00,725 INFO sqlalchemy.engine.base.Engine Thread-60 : ROLLBACK
2020-01-30 20:55:01,187 INFO sqlalchemy.engine.base.Engine Thread-67 : BEGIN (implicit)
2020-01-30 20:55:01,188 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:55:01,188 INFO sqlalchemy.engine.base.Engine Thread-67 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:55:01,189 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:55:01,192 INFO sqlalchemy.engine.base.Engine Thread-67 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:55:01,192 INFO sqlalchemy.engine.base.Engine Thread-67 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:55:01,193 DEBUG sqlalchemy.engine.base.Engine Thread-67 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:55:01,194 INFO sqlalchemy.engine.base.Engine Thread-67 : ROLLBACK
2020-01-30 20:55:30,797 INFO sqlalchemy.engine.base.Engine Thread-69 : BEGIN (implicit)
2020-01-30 20:55:30,804 INFO sqlalchemy.engine.base.Engine Thread-69 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:55:30,804 INFO sqlalchemy.engine.base.Engine Thread-69 : (1, 1)
2020-01-30 20:55:30,805 INFO sqlalchemy.engine.base.Engine Thread-70 : BEGIN (implicit)
2020-01-30 20:55:30,805 INFO sqlalchemy.engine.base.Engine Thread-70 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:55:30,807 INFO sqlalchemy.engine.base.Engine Thread-70 : (1, 1)
2020-01-30 20:55:30,809 INFO sqlalchemy.engine.base.Engine Thread-71 : BEGIN (implicit)
2020-01-30 20:55:30,811 INFO sqlalchemy.engine.base.Engine Thread-71 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:55:30,811 INFO sqlalchemy.engine.base.Engine Thread-71 : (1, 1)
2020-01-30 20:55:30,810 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:30,812 INFO sqlalchemy.engine.base.Engine Thread-72 : BEGIN (implicit)
2020-01-30 20:55:30,812 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:30,813 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:30,813 DEBUG sqlalchemy.engine.base.Engine Thread-69 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:30,814 INFO sqlalchemy.engine.base.Engine Thread-72 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:55:30,814 DEBUG sqlalchemy.engine.base.Engine Thread-71 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:30,815 DEBUG sqlalchemy.engine.base.Engine Thread-70 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:30,815 INFO sqlalchemy.engine.base.Engine Thread-72 : (1, 1)
2020-01-30 20:55:30,816 INFO sqlalchemy.engine.base.Engine Thread-69 : ROLLBACK
2020-01-30 20:55:30,817 INFO sqlalchemy.engine.base.Engine Thread-71 : ROLLBACK
2020-01-30 20:55:30,818 INFO sqlalchemy.engine.base.Engine Thread-70 : ROLLBACK
2020-01-30 20:55:30,819 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:30,822 DEBUG sqlalchemy.engine.base.Engine Thread-72 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:30,823 INFO sqlalchemy.engine.base.Engine Thread-72 : ROLLBACK
2020-01-30 20:55:31,020 INFO sqlalchemy.engine.base.Engine Thread-73 : BEGIN (implicit)
2020-01-30 20:55:31,021 INFO sqlalchemy.engine.base.Engine Thread-73 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:55:31,021 INFO sqlalchemy.engine.base.Engine Thread-73 : (1, 1)
2020-01-30 20:55:31,022 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:55:31,022 DEBUG sqlalchemy.engine.base.Engine Thread-73 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:55:31,023 INFO sqlalchemy.engine.base.Engine Thread-73 : ROLLBACK
2020-01-30 20:59:33,882 INFO sqlalchemy.engine.base.Engine Thread-74 : BEGIN (implicit)
2020-01-30 20:59:33,885 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 20:59:33,885 INFO sqlalchemy.engine.base.Engine Thread-74 : ()
2020-01-30 20:59:33,887 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 20:59:33,887 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 20:59:33,887 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 20:59:33,889 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:59:33,889 INFO sqlalchemy.engine.base.Engine Thread-74 : (1, 1)
2020-01-30 20:59:33,890 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:33,890 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:33,903 INFO sqlalchemy.engine.base.Engine Thread-74 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 20:59:33,903 INFO sqlalchemy.engine.base.Engine Thread-74 : ('philip', 1, 1)
2020-01-30 20:59:33,904 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:33,904 DEBUG sqlalchemy.engine.base.Engine Thread-74 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:33,905 INFO sqlalchemy.engine.base.Engine Thread-74 : ROLLBACK
2020-01-30 20:59:34,360 INFO sqlalchemy.engine.base.Engine Thread-81 : BEGIN (implicit)
2020-01-30 20:59:34,361 INFO sqlalchemy.engine.base.Engine Thread-81 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:59:34,361 INFO sqlalchemy.engine.base.Engine Thread-81 : (1, 1)
2020-01-30 20:59:34,362 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:34,362 DEBUG sqlalchemy.engine.base.Engine Thread-81 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:34,363 INFO sqlalchemy.engine.base.Engine Thread-81 : ROLLBACK
2020-01-30 20:59:34,371 INFO sqlalchemy.engine.base.Engine Thread-82 : BEGIN (implicit)
2020-01-30 20:59:34,372 INFO sqlalchemy.engine.base.Engine Thread-84 : BEGIN (implicit)
2020-01-30 20:59:34,373 INFO sqlalchemy.engine.base.Engine Thread-82 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:59:34,376 INFO sqlalchemy.engine.base.Engine Thread-82 : (1, 1)
2020-01-30 20:59:34,376 INFO sqlalchemy.engine.base.Engine Thread-84 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:59:34,377 INFO sqlalchemy.engine.base.Engine Thread-84 : (1, 1)
2020-01-30 20:59:34,374 INFO sqlalchemy.engine.base.Engine Thread-83 : BEGIN (implicit)
2020-01-30 20:59:34,378 INFO sqlalchemy.engine.base.Engine Thread-83 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:59:34,378 INFO sqlalchemy.engine.base.Engine Thread-83 : (1, 1)
2020-01-30 20:59:34,379 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:34,379 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:34,379 DEBUG sqlalchemy.engine.base.Engine Thread-82 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:34,381 INFO sqlalchemy.engine.base.Engine Thread-82 : ROLLBACK
2020-01-30 20:59:34,380 DEBUG sqlalchemy.engine.base.Engine Thread-83 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:34,380 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:34,382 DEBUG sqlalchemy.engine.base.Engine Thread-84 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:34,383 INFO sqlalchemy.engine.base.Engine Thread-83 : ROLLBACK
2020-01-30 20:59:34,384 INFO sqlalchemy.engine.base.Engine Thread-84 : ROLLBACK
2020-01-30 20:59:34,583 INFO sqlalchemy.engine.base.Engine Thread-85 : BEGIN (implicit)
2020-01-30 20:59:34,584 INFO sqlalchemy.engine.base.Engine Thread-85 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 20:59:34,585 INFO sqlalchemy.engine.base.Engine Thread-85 : (1, 1)
2020-01-30 20:59:34,585 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 20:59:34,586 DEBUG sqlalchemy.engine.base.Engine Thread-85 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 20:59:34,587 INFO sqlalchemy.engine.base.Engine Thread-85 : ROLLBACK
2020-01-30 20:59:34,606 INFO sqlalchemy.engine.base.Engine Thread-86 : BEGIN (implicit)
2020-01-30 20:59:34,608 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:59:34,608 INFO sqlalchemy.engine.base.Engine Thread-86 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:59:34,608 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:59:34,613 INFO sqlalchemy.engine.base.Engine Thread-86 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 20:59:34,613 INFO sqlalchemy.engine.base.Engine Thread-86 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 20:59:34,613 DEBUG sqlalchemy.engine.base.Engine Thread-86 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 20:59:34,614 INFO sqlalchemy.engine.base.Engine Thread-86 : ROLLBACK
2020-01-30 21:00:06,470 INFO sqlalchemy.engine.base.Engine Thread-88 : BEGIN (implicit)
2020-01-30 21:00:06,472 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:00:06,472 INFO sqlalchemy.engine.base.Engine Thread-88 : ()
2020-01-30 21:00:06,473 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:00:06,474 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:00:06,474 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:00:06,476 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:00:06,476 INFO sqlalchemy.engine.base.Engine Thread-88 : (1, 1)
2020-01-30 21:00:06,476 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:00:06,477 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:00:06,487 INFO sqlalchemy.engine.base.Engine Thread-88 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:00:06,487 INFO sqlalchemy.engine.base.Engine Thread-88 : ('philip', 1, 1)
2020-01-30 21:00:06,488 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:00:06,488 DEBUG sqlalchemy.engine.base.Engine Thread-88 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:00:06,490 INFO sqlalchemy.engine.base.Engine Thread-88 : ROLLBACK
2020-01-30 21:00:06,973 INFO sqlalchemy.engine.base.Engine Thread-95 : BEGIN (implicit)
2020-01-30 21:00:06,974 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:00:06,974 INFO sqlalchemy.engine.base.Engine Thread-95 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:00:06,975 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:00:06,979 INFO sqlalchemy.engine.base.Engine Thread-95 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:00:06,979 INFO sqlalchemy.engine.base.Engine Thread-95 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:00:06,980 DEBUG sqlalchemy.engine.base.Engine Thread-95 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:00:06,981 INFO sqlalchemy.engine.base.Engine Thread-95 : ROLLBACK
2020-01-30 21:00:13,345 INFO sqlalchemy.engine.base.Engine Thread-97 : BEGIN (implicit)
2020-01-30 21:00:13,348 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:00:13,348 INFO sqlalchemy.engine.base.Engine Thread-97 : ()
2020-01-30 21:00:13,349 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:00:13,349 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:00:13,350 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:00:13,352 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:00:13,352 INFO sqlalchemy.engine.base.Engine Thread-97 : (1, 1)
2020-01-30 21:00:13,353 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:00:13,353 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:00:13,357 INFO sqlalchemy.engine.base.Engine Thread-97 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:00:13,358 INFO sqlalchemy.engine.base.Engine Thread-97 : ('philip', 1, 1)
2020-01-30 21:00:13,358 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:00:13,359 DEBUG sqlalchemy.engine.base.Engine Thread-97 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:00:13,361 INFO sqlalchemy.engine.base.Engine Thread-97 : ROLLBACK
2020-01-30 21:00:13,737 INFO sqlalchemy.engine.base.Engine Thread-104 : BEGIN (implicit)
2020-01-30 21:00:13,738 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:00:13,738 INFO sqlalchemy.engine.base.Engine Thread-104 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:00:13,739 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:00:13,743 INFO sqlalchemy.engine.base.Engine Thread-104 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:00:13,743 INFO sqlalchemy.engine.base.Engine Thread-104 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:00:13,743 DEBUG sqlalchemy.engine.base.Engine Thread-104 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:00:13,744 INFO sqlalchemy.engine.base.Engine Thread-104 : ROLLBACK
2020-01-30 21:00:16,596 INFO sqlalchemy.engine.base.Engine Thread-106 : BEGIN (implicit)
2020-01-30 21:00:16,598 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:00:16,598 INFO sqlalchemy.engine.base.Engine Thread-106 : ()
2020-01-30 21:00:16,599 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:00:16,599 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:00:16,600 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:00:16,602 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:00:16,602 INFO sqlalchemy.engine.base.Engine Thread-106 : (1, 1)
2020-01-30 21:00:16,603 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:00:16,603 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:00:16,607 INFO sqlalchemy.engine.base.Engine Thread-106 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:00:16,607 INFO sqlalchemy.engine.base.Engine Thread-106 : ('philip', 1, 1)
2020-01-30 21:00:16,608 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:00:16,608 DEBUG sqlalchemy.engine.base.Engine Thread-106 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:00:16,609 INFO sqlalchemy.engine.base.Engine Thread-106 : ROLLBACK
2020-01-30 21:00:17,024 INFO sqlalchemy.engine.base.Engine Thread-113 : BEGIN (implicit)
2020-01-30 21:00:17,026 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:00:17,026 INFO sqlalchemy.engine.base.Engine Thread-113 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:00:17,027 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:00:17,031 INFO sqlalchemy.engine.base.Engine Thread-113 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:00:17,031 INFO sqlalchemy.engine.base.Engine Thread-113 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:00:17,032 DEBUG sqlalchemy.engine.base.Engine Thread-113 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:00:17,032 INFO sqlalchemy.engine.base.Engine Thread-113 : ROLLBACK
2020-01-30 21:02:24,981 INFO sqlalchemy.engine.base.Engine Thread-115 : BEGIN (implicit)
2020-01-30 21:02:24,983 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:02:24,983 INFO sqlalchemy.engine.base.Engine Thread-115 : ()
2020-01-30 21:02:24,985 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:02:24,985 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:02:24,986 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:02:24,988 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:02:24,988 INFO sqlalchemy.engine.base.Engine Thread-115 : (1, 1)
2020-01-30 21:02:24,989 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:02:24,989 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:02:25,001 INFO sqlalchemy.engine.base.Engine Thread-115 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:02:25,001 INFO sqlalchemy.engine.base.Engine Thread-115 : ('philip', 1, 1)
2020-01-30 21:02:25,002 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:02:25,002 DEBUG sqlalchemy.engine.base.Engine Thread-115 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:02:25,004 INFO sqlalchemy.engine.base.Engine Thread-115 : ROLLBACK
2020-01-30 21:02:25,495 INFO sqlalchemy.engine.base.Engine Thread-122 : BEGIN (implicit)
2020-01-30 21:02:25,496 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:02:25,496 INFO sqlalchemy.engine.base.Engine Thread-122 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:02:25,497 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:02:25,501 INFO sqlalchemy.engine.base.Engine Thread-122 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:02:25,501 INFO sqlalchemy.engine.base.Engine Thread-122 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:02:25,502 DEBUG sqlalchemy.engine.base.Engine Thread-122 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:02:25,503 INFO sqlalchemy.engine.base.Engine Thread-122 : ROLLBACK
2020-01-30 21:05:02,702 INFO sqlalchemy.engine.base.Engine Thread-124 : BEGIN (implicit)
2020-01-30 21:05:02,704 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:05:02,704 INFO sqlalchemy.engine.base.Engine Thread-124 : ()
2020-01-30 21:05:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:05:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:05:02,707 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:05:02,710 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:05:02,710 INFO sqlalchemy.engine.base.Engine Thread-124 : (1, 1)
2020-01-30 21:05:02,710 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:02,711 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:02,723 INFO sqlalchemy.engine.base.Engine Thread-124 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:05:02,723 INFO sqlalchemy.engine.base.Engine Thread-124 : ('philip', 1, 1)
2020-01-30 21:05:02,724 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:02,724 DEBUG sqlalchemy.engine.base.Engine Thread-124 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:02,726 INFO sqlalchemy.engine.base.Engine Thread-124 : ROLLBACK
2020-01-30 21:05:03,195 INFO sqlalchemy.engine.base.Engine Thread-131 : BEGIN (implicit)
2020-01-30 21:05:03,196 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:05:03,196 INFO sqlalchemy.engine.base.Engine Thread-131 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:05:03,197 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:05:03,200 INFO sqlalchemy.engine.base.Engine Thread-131 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:05:03,200 INFO sqlalchemy.engine.base.Engine Thread-131 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:05:03,201 DEBUG sqlalchemy.engine.base.Engine Thread-131 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:05:03,202 INFO sqlalchemy.engine.base.Engine Thread-131 : ROLLBACK
2020-01-30 21:05:29,481 INFO sqlalchemy.engine.base.Engine Thread-133 : BEGIN (implicit)
2020-01-30 21:05:29,484 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:05:29,484 INFO sqlalchemy.engine.base.Engine Thread-133 : ()
2020-01-30 21:05:29,485 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:05:29,486 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:05:29,486 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:05:29,488 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:05:29,488 INFO sqlalchemy.engine.base.Engine Thread-133 : (1, 1)
2020-01-30 21:05:29,489 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:29,489 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:29,502 INFO sqlalchemy.engine.base.Engine Thread-133 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:05:29,502 INFO sqlalchemy.engine.base.Engine Thread-133 : ('philip', 1, 1)
2020-01-30 21:05:29,502 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:29,503 DEBUG sqlalchemy.engine.base.Engine Thread-133 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:29,504 INFO sqlalchemy.engine.base.Engine Thread-133 : ROLLBACK
2020-01-30 21:05:29,944 INFO sqlalchemy.engine.base.Engine Thread-140 : BEGIN (implicit)
2020-01-30 21:05:29,945 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:05:29,946 INFO sqlalchemy.engine.base.Engine Thread-140 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:05:29,947 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:05:29,951 INFO sqlalchemy.engine.base.Engine Thread-140 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:05:29,951 INFO sqlalchemy.engine.base.Engine Thread-140 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:05:29,952 DEBUG sqlalchemy.engine.base.Engine Thread-140 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:05:29,953 INFO sqlalchemy.engine.base.Engine Thread-140 : ROLLBACK
2020-01-30 21:05:38,231 INFO sqlalchemy.engine.base.Engine Thread-142 : BEGIN (implicit)
2020-01-30 21:05:38,234 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 21:05:38,234 INFO sqlalchemy.engine.base.Engine Thread-142 : ('0', 1)
2020-01-30 21:05:38,235 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 21:05:38,242 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:05:38,242 INFO sqlalchemy.engine.base.Engine Thread-142 : ()
2020-01-30 21:05:38,243 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:05:38,243 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:05:38,243 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:05:38,246 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 21:05:38,246 INFO sqlalchemy.engine.base.Engine Thread-142 : (97,)
2020-01-30 21:05:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 21:05:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 21:05:38,246 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 21:05:38,248 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 21:05:38,248 INFO sqlalchemy.engine.base.Engine Thread-142 : (105,)
2020-01-30 21:05:38,248 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 21:05:38,249 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 21:05:38,249 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 21:05:38,252 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 21:05:38,252 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-01-30 21:05:38,253 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:05:38,253 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:05:38,255 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:05:38,255 INFO sqlalchemy.engine.base.Engine Thread-142 : (1, 1)
2020-01-30 21:05:38,256 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:38,256 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:38,300 INFO sqlalchemy.engine.base.Engine Thread-142 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:05:38,300 INFO sqlalchemy.engine.base.Engine Thread-142 : ('philip', 1, 1)
2020-01-30 21:05:38,301 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:38,301 DEBUG sqlalchemy.engine.base.Engine Thread-142 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:38,304 INFO sqlalchemy.engine.base.Engine Thread-142 : ROLLBACK
2020-01-30 21:05:40,701 INFO sqlalchemy.engine.base.Engine Thread-149 : BEGIN (implicit)
2020-01-30 21:05:40,703 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:05:40,703 INFO sqlalchemy.engine.base.Engine Thread-149 : ()
2020-01-30 21:05:40,705 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:05:40,706 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:05:40,706 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:05:40,708 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:05:40,708 INFO sqlalchemy.engine.base.Engine Thread-149 : (1, 1)
2020-01-30 21:05:40,709 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:40,709 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:40,714 INFO sqlalchemy.engine.base.Engine Thread-149 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:05:40,714 INFO sqlalchemy.engine.base.Engine Thread-149 : ('philip', 1, 1)
2020-01-30 21:05:40,715 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:05:40,715 DEBUG sqlalchemy.engine.base.Engine Thread-149 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:05:40,716 INFO sqlalchemy.engine.base.Engine Thread-149 : ROLLBACK
2020-01-30 21:05:41,140 INFO sqlalchemy.engine.base.Engine Thread-156 : BEGIN (implicit)
2020-01-30 21:05:41,142 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:05:41,142 INFO sqlalchemy.engine.base.Engine Thread-156 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:05:41,143 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:05:41,146 INFO sqlalchemy.engine.base.Engine Thread-156 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:05:41,146 INFO sqlalchemy.engine.base.Engine Thread-156 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:05:41,147 DEBUG sqlalchemy.engine.base.Engine Thread-156 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:05:41,147 INFO sqlalchemy.engine.base.Engine Thread-156 : ROLLBACK
2020-01-30 21:06:13,379 INFO sqlalchemy.engine.base.Engine Thread-157 : BEGIN (implicit)
2020-01-30 21:06:13,381 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:06:13,381 INFO sqlalchemy.engine.base.Engine Thread-157 : ()
2020-01-30 21:06:13,382 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:06:13,383 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:06:13,383 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:06:13,385 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:06:13,385 INFO sqlalchemy.engine.base.Engine Thread-157 : (1, 1)
2020-01-30 21:06:13,386 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:06:13,386 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:06:13,397 INFO sqlalchemy.engine.base.Engine Thread-157 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:06:13,397 INFO sqlalchemy.engine.base.Engine Thread-157 : ('philip', 1, 1)
2020-01-30 21:06:13,398 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:06:13,398 DEBUG sqlalchemy.engine.base.Engine Thread-157 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:06:13,400 INFO sqlalchemy.engine.base.Engine Thread-157 : ROLLBACK
2020-01-30 21:06:13,932 INFO sqlalchemy.engine.base.Engine Thread-164 : BEGIN (implicit)
2020-01-30 21:06:13,933 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:06:13,933 INFO sqlalchemy.engine.base.Engine Thread-164 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:06:13,934 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:06:13,938 INFO sqlalchemy.engine.base.Engine Thread-164 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:06:13,938 INFO sqlalchemy.engine.base.Engine Thread-164 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:06:13,938 DEBUG sqlalchemy.engine.base.Engine Thread-164 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:06:13,939 INFO sqlalchemy.engine.base.Engine Thread-164 : ROLLBACK
2020-01-30 21:07:42,690 INFO sqlalchemy.engine.base.Engine Thread-166 : BEGIN (implicit)
2020-01-30 21:07:42,692 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:07:42,692 INFO sqlalchemy.engine.base.Engine Thread-166 : ()
2020-01-30 21:07:42,693 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:07:42,694 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:07:42,694 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:07:42,696 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:07:42,696 INFO sqlalchemy.engine.base.Engine Thread-166 : (1, 1)
2020-01-30 21:07:42,697 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:07:42,697 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:07:42,712 INFO sqlalchemy.engine.base.Engine Thread-166 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:07:42,712 INFO sqlalchemy.engine.base.Engine Thread-166 : ('philip', 1, 1)
2020-01-30 21:07:42,713 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:07:42,713 DEBUG sqlalchemy.engine.base.Engine Thread-166 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:07:42,715 INFO sqlalchemy.engine.base.Engine Thread-166 : ROLLBACK
2020-01-30 21:07:43,307 INFO sqlalchemy.engine.base.Engine Thread-173 : BEGIN (implicit)
2020-01-30 21:07:43,309 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:07:43,309 INFO sqlalchemy.engine.base.Engine Thread-173 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:07:43,310 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:07:43,314 INFO sqlalchemy.engine.base.Engine Thread-173 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:07:43,314 INFO sqlalchemy.engine.base.Engine Thread-173 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:07:43,315 DEBUG sqlalchemy.engine.base.Engine Thread-173 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:07:43,315 INFO sqlalchemy.engine.base.Engine Thread-173 : ROLLBACK
2020-01-30 21:07:49,824 INFO sqlalchemy.engine.base.Engine Thread-175 : BEGIN (implicit)
2020-01-30 21:07:49,826 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT bookings.id AS bookings_id, bookings.slot_id AS bookings_slot_id, bookings.title AS bookings_title, bookings.start_dt AS bookings_start_dt, bookings.end_dt AS bookings_end_dt, bookings.ticket AS bookings_ticket, bookings.stakeholder_id AS bookings_stakeholder_id, bookings.budget AS bookings_budget, bookings.project AS bookings_project, bookings.description AS bookings_description, bookings.owner_id AS bookings_owner_id, bookings.complex AS bookings_complex, bookings.cluster AS bookings_cluster, bookings.approval_required AS bookings_approval_required, bookings.approved_date AS bookings_approved_date, bookings.approved_by AS bookings_approved_by, bookings.change_ref AS bookings_change_ref, bookings.change_subref AS bookings_change_subref, bookings.logged AS bookings_logged 
FROM bookings 
WHERE bookings.id = %s 
 LIMIT %s
2020-01-30 21:07:49,826 INFO sqlalchemy.engine.base.Engine Thread-175 : ('0', 1)
2020-01-30 21:07:49,827 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('bookings_id', 'bookings_slot_id', 'bookings_title', 'bookings_start_dt', 'bookings_end_dt', 'bookings_ticket', 'bookings_stakeholder_id', 'bookings_budget', 'bookings_project', 'bookings_description', 'bookings_owner_id', 'bookings_complex', 'bookings_cluster', 'bookings_approval_required', 'bookings_approved_date', 'bookings_approved_by', 'bookings_change_ref', 'bookings_change_subref', 'bookings_logged')
2020-01-30 21:07:49,832 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:07:49,832 INFO sqlalchemy.engine.base.Engine Thread-175 : ()
2020-01-30 21:07:49,834 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:07:49,834 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:07:49,834 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:07:49,836 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 21:07:49,836 INFO sqlalchemy.engine.base.Engine Thread-175 : (97,)
2020-01-30 21:07:49,836 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 21:07:49,837 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (98, 'Inner', 'Inner', 97, 0, 0, 0)
2020-01-30 21:07:49,837 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (99, 'Outer', 'Outer', 97, 0, 0, 0)
2020-01-30 21:07:49,838 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT parameters.id AS parameters_id, parameters.param_name AS parameters_param_name, parameters.param_value AS parameters_param_value, parameters.param_group AS parameters_param_group, parameters.param_parent AS parameters_param_parent, parameters.param_disabled AS parameters_param_disabled, parameters.param_critical AS parameters_param_critical 
FROM parameters 
WHERE parameters.param_group = %s ORDER BY parameters.param_name
2020-01-30 21:07:49,838 INFO sqlalchemy.engine.base.Engine Thread-175 : (105,)
2020-01-30 21:07:49,839 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('parameters_id', 'parameters_param_name', 'parameters_param_value', 'parameters_param_group', 'parameters_param_parent', 'parameters_param_disabled', 'parameters_param_critical')
2020-01-30 21:07:49,839 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (107, 'No', '0', 105, 0, 0, 1)
2020-01-30 21:07:49,839 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (106, 'Yes', '1', 105, 0, 0, 1)
2020-01-30 21:07:49,843 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes 
WHERE complexes.id = %s 
 LIMIT %s
2020-01-30 21:07:49,843 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-01-30 21:07:49,844 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:07:49,844 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:07:49,847 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:07:49,847 INFO sqlalchemy.engine.base.Engine Thread-175 : (1, 1)
2020-01-30 21:07:49,847 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:07:49,847 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:07:49,851 INFO sqlalchemy.engine.base.Engine Thread-175 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:07:49,851 INFO sqlalchemy.engine.base.Engine Thread-175 : ('philip', 1, 1)
2020-01-30 21:07:49,852 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:07:49,852 DEBUG sqlalchemy.engine.base.Engine Thread-175 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:07:49,856 INFO sqlalchemy.engine.base.Engine Thread-175 : ROLLBACK
2020-01-30 21:07:51,862 INFO sqlalchemy.engine.base.Engine Thread-182 : BEGIN (implicit)
2020-01-30 21:07:51,864 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:07:51,864 INFO sqlalchemy.engine.base.Engine Thread-182 : ()
2020-01-30 21:07:51,865 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:07:51,866 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:07:51,866 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:07:51,868 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:07:51,868 INFO sqlalchemy.engine.base.Engine Thread-182 : (1, 1)
2020-01-30 21:07:51,868 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:07:51,869 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:07:51,873 INFO sqlalchemy.engine.base.Engine Thread-182 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:07:51,873 INFO sqlalchemy.engine.base.Engine Thread-182 : ('philip', 1, 1)
2020-01-30 21:07:51,873 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:07:51,874 DEBUG sqlalchemy.engine.base.Engine Thread-182 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:07:51,875 INFO sqlalchemy.engine.base.Engine Thread-182 : ROLLBACK
2020-01-30 21:07:52,308 INFO sqlalchemy.engine.base.Engine Thread-189 : BEGIN (implicit)
2020-01-30 21:07:52,309 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:07:52,310 INFO sqlalchemy.engine.base.Engine Thread-189 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:07:52,310 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:07:52,316 INFO sqlalchemy.engine.base.Engine Thread-189 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:07:52,316 INFO sqlalchemy.engine.base.Engine Thread-189 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:07:52,316 DEBUG sqlalchemy.engine.base.Engine Thread-189 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:07:52,317 INFO sqlalchemy.engine.base.Engine Thread-189 : ROLLBACK
2020-01-30 21:08:13,747 INFO sqlalchemy.engine.base.Engine Thread-190 : BEGIN (implicit)
2020-01-30 21:08:13,749 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:08:13,749 INFO sqlalchemy.engine.base.Engine Thread-190 : ()
2020-01-30 21:08:13,751 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:08:13,751 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:08:13,751 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:08:13,754 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:08:13,754 INFO sqlalchemy.engine.base.Engine Thread-190 : (1, 1)
2020-01-30 21:08:13,755 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:08:13,755 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:08:13,767 INFO sqlalchemy.engine.base.Engine Thread-190 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:08:13,767 INFO sqlalchemy.engine.base.Engine Thread-190 : ('philip', 1, 1)
2020-01-30 21:08:13,768 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:08:13,768 DEBUG sqlalchemy.engine.base.Engine Thread-190 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:08:13,769 INFO sqlalchemy.engine.base.Engine Thread-190 : ROLLBACK
2020-01-30 21:08:14,191 INFO sqlalchemy.engine.base.Engine Thread-197 : BEGIN (implicit)
2020-01-30 21:08:14,192 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:08:14,192 INFO sqlalchemy.engine.base.Engine Thread-197 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:08:14,193 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:08:14,197 INFO sqlalchemy.engine.base.Engine Thread-197 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:08:14,197 INFO sqlalchemy.engine.base.Engine Thread-197 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:08:14,198 DEBUG sqlalchemy.engine.base.Engine Thread-197 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:08:14,198 INFO sqlalchemy.engine.base.Engine Thread-197 : ROLLBACK
2020-01-30 21:08:29,750 INFO sqlalchemy.engine.base.Engine Thread-199 : BEGIN (implicit)
2020-01-30 21:08:29,752 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:08:29,752 INFO sqlalchemy.engine.base.Engine Thread-199 : ()
2020-01-30 21:08:29,753 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:08:29,754 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:08:29,754 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:08:29,756 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:08:29,756 INFO sqlalchemy.engine.base.Engine Thread-199 : (1, 1)
2020-01-30 21:08:29,756 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:08:29,757 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:08:29,768 INFO sqlalchemy.engine.base.Engine Thread-199 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:08:29,768 INFO sqlalchemy.engine.base.Engine Thread-199 : ('philip', 1, 1)
2020-01-30 21:08:29,769 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:08:29,769 DEBUG sqlalchemy.engine.base.Engine Thread-199 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:08:29,770 INFO sqlalchemy.engine.base.Engine Thread-199 : ROLLBACK
2020-01-30 21:08:30,272 INFO sqlalchemy.engine.base.Engine Thread-206 : BEGIN (implicit)
2020-01-30 21:08:30,273 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:08:30,273 INFO sqlalchemy.engine.base.Engine Thread-206 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:08:30,274 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:08:30,277 INFO sqlalchemy.engine.base.Engine Thread-206 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:08:30,277 INFO sqlalchemy.engine.base.Engine Thread-206 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:08:30,278 DEBUG sqlalchemy.engine.base.Engine Thread-206 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:08:30,279 INFO sqlalchemy.engine.base.Engine Thread-206 : ROLLBACK
2020-01-30 21:10:29,593 INFO sqlalchemy.engine.base.Engine Thread-208 : BEGIN (implicit)
2020-01-30 21:10:29,595 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:10:29,596 INFO sqlalchemy.engine.base.Engine Thread-208 : ()
2020-01-30 21:10:29,597 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:10:29,598 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:10:29,598 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:10:29,600 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:10:29,600 INFO sqlalchemy.engine.base.Engine Thread-208 : (1, 1)
2020-01-30 21:10:29,601 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:10:29,601 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:10:29,612 INFO sqlalchemy.engine.base.Engine Thread-208 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:10:29,612 INFO sqlalchemy.engine.base.Engine Thread-208 : ('philip', 1, 1)
2020-01-30 21:10:29,613 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:10:29,613 DEBUG sqlalchemy.engine.base.Engine Thread-208 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:10:29,615 INFO sqlalchemy.engine.base.Engine Thread-208 : ROLLBACK
2020-01-30 21:10:30,193 INFO sqlalchemy.engine.base.Engine Thread-215 : BEGIN (implicit)
2020-01-30 21:10:30,194 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:10:30,194 INFO sqlalchemy.engine.base.Engine Thread-215 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:10:30,195 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:10:30,198 INFO sqlalchemy.engine.base.Engine Thread-215 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:10:30,198 INFO sqlalchemy.engine.base.Engine Thread-215 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:10:30,199 DEBUG sqlalchemy.engine.base.Engine Thread-215 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:10:30,200 INFO sqlalchemy.engine.base.Engine Thread-215 : ROLLBACK
2020-01-30 21:14:26,336 INFO sqlalchemy.engine.base.Engine Thread-217 : BEGIN (implicit)
2020-01-30 21:14:26,339 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:14:26,339 INFO sqlalchemy.engine.base.Engine Thread-217 : ()
2020-01-30 21:14:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:14:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:14:26,342 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:14:26,344 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:14:26,345 INFO sqlalchemy.engine.base.Engine Thread-217 : (1, 1)
2020-01-30 21:14:26,345 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:26,346 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:26,358 INFO sqlalchemy.engine.base.Engine Thread-217 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:14:26,358 INFO sqlalchemy.engine.base.Engine Thread-217 : ('philip', 1, 1)
2020-01-30 21:14:26,359 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:26,359 DEBUG sqlalchemy.engine.base.Engine Thread-217 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:26,361 INFO sqlalchemy.engine.base.Engine Thread-217 : ROLLBACK
2020-01-30 21:14:26,842 INFO sqlalchemy.engine.base.Engine Thread-224 : BEGIN (implicit)
2020-01-30 21:14:26,843 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:14:26,843 INFO sqlalchemy.engine.base.Engine Thread-224 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:14:26,844 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:14:26,848 INFO sqlalchemy.engine.base.Engine Thread-224 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:14:26,848 INFO sqlalchemy.engine.base.Engine Thread-224 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:14:26,849 DEBUG sqlalchemy.engine.base.Engine Thread-224 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:14:26,850 INFO sqlalchemy.engine.base.Engine Thread-224 : ROLLBACK
2020-01-30 21:14:33,762 INFO sqlalchemy.engine.base.Engine Thread-226 : BEGIN (implicit)
2020-01-30 21:14:33,765 INFO sqlalchemy.engine.base.Engine Thread-226 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:14:33,765 INFO sqlalchemy.engine.base.Engine Thread-226 : (1, 1)
2020-01-30 21:14:33,767 INFO sqlalchemy.engine.base.Engine Thread-227 : BEGIN (implicit)
2020-01-30 21:14:33,767 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:33,768 INFO sqlalchemy.engine.base.Engine Thread-227 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:14:33,771 INFO sqlalchemy.engine.base.Engine Thread-227 : (1, 1)
2020-01-30 21:14:33,771 INFO sqlalchemy.engine.base.Engine Thread-228 : BEGIN (implicit)
2020-01-30 21:14:33,769 DEBUG sqlalchemy.engine.base.Engine Thread-226 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:33,772 INFO sqlalchemy.engine.base.Engine Thread-228 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:14:33,773 INFO sqlalchemy.engine.base.Engine Thread-228 : (1, 1)
2020-01-30 21:14:33,774 INFO sqlalchemy.engine.base.Engine Thread-226 : ROLLBACK
2020-01-30 21:14:33,777 INFO sqlalchemy.engine.base.Engine Thread-229 : BEGIN (implicit)
2020-01-30 21:14:33,778 INFO sqlalchemy.engine.base.Engine Thread-229 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:14:33,779 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:33,780 DEBUG sqlalchemy.engine.base.Engine Thread-228 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:33,779 INFO sqlalchemy.engine.base.Engine Thread-229 : (1, 1)
2020-01-30 21:14:33,781 INFO sqlalchemy.engine.base.Engine Thread-228 : ROLLBACK
2020-01-30 21:14:33,779 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:33,781 DEBUG sqlalchemy.engine.base.Engine Thread-227 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:33,782 INFO sqlalchemy.engine.base.Engine Thread-227 : ROLLBACK
2020-01-30 21:14:33,782 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:33,783 DEBUG sqlalchemy.engine.base.Engine Thread-229 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:33,784 INFO sqlalchemy.engine.base.Engine Thread-229 : ROLLBACK
2020-01-30 21:14:34,039 INFO sqlalchemy.engine.base.Engine Thread-230 : BEGIN (implicit)
2020-01-30 21:14:34,040 INFO sqlalchemy.engine.base.Engine Thread-230 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:14:34,040 INFO sqlalchemy.engine.base.Engine Thread-230 : (1, 1)
2020-01-30 21:14:34,041 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:14:34,041 DEBUG sqlalchemy.engine.base.Engine Thread-230 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:14:34,042 INFO sqlalchemy.engine.base.Engine Thread-230 : ROLLBACK
2020-01-30 21:15:47,160 INFO sqlalchemy.engine.base.Engine Thread-231 : BEGIN (implicit)
2020-01-30 21:15:47,163 INFO sqlalchemy.engine.base.Engine Thread-231 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:15:47,163 INFO sqlalchemy.engine.base.Engine Thread-231 : ()
2020-01-30 21:15:47,164 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:15:47,165 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:15:47,165 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:15:47,168 INFO sqlalchemy.engine.base.Engine Thread-231 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:15:47,168 INFO sqlalchemy.engine.base.Engine Thread-231 : (1, 1)
2020-01-30 21:15:47,168 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,169 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,180 INFO sqlalchemy.engine.base.Engine Thread-231 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:15:47,180 INFO sqlalchemy.engine.base.Engine Thread-231 : ('philip', 1, 1)
2020-01-30 21:15:47,181 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,181 DEBUG sqlalchemy.engine.base.Engine Thread-231 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,183 INFO sqlalchemy.engine.base.Engine Thread-231 : ROLLBACK
2020-01-30 21:15:47,755 INFO sqlalchemy.engine.base.Engine Thread-238 : BEGIN (implicit)
2020-01-30 21:15:47,759 INFO sqlalchemy.engine.base.Engine Thread-238 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:15:47,760 INFO sqlalchemy.engine.base.Engine Thread-239 : BEGIN (implicit)
2020-01-30 21:15:47,760 INFO sqlalchemy.engine.base.Engine Thread-238 : (1, 1)
2020-01-30 21:15:47,765 INFO sqlalchemy.engine.base.Engine Thread-239 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:15:47,766 INFO sqlalchemy.engine.base.Engine Thread-241 : BEGIN (implicit)
2020-01-30 21:15:47,768 INFO sqlalchemy.engine.base.Engine Thread-240 : BEGIN (implicit)
2020-01-30 21:15:47,768 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,768 INFO sqlalchemy.engine.base.Engine Thread-239 : (1, 1)
2020-01-30 21:15:47,769 INFO sqlalchemy.engine.base.Engine Thread-241 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:15:47,770 INFO sqlalchemy.engine.base.Engine Thread-240 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:15:47,772 INFO sqlalchemy.engine.base.Engine Thread-240 : (1, 1)
2020-01-30 21:15:47,771 DEBUG sqlalchemy.engine.base.Engine Thread-238 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,772 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,773 INFO sqlalchemy.engine.base.Engine Thread-238 : ROLLBACK
2020-01-30 21:15:47,771 INFO sqlalchemy.engine.base.Engine Thread-241 : (1, 1)
2020-01-30 21:15:47,773 DEBUG sqlalchemy.engine.base.Engine Thread-239 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,774 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,775 DEBUG sqlalchemy.engine.base.Engine Thread-240 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,776 INFO sqlalchemy.engine.base.Engine Thread-239 : ROLLBACK
2020-01-30 21:15:47,777 INFO sqlalchemy.engine.base.Engine Thread-240 : ROLLBACK
2020-01-30 21:15:47,778 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,778 DEBUG sqlalchemy.engine.base.Engine Thread-241 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,780 INFO sqlalchemy.engine.base.Engine Thread-241 : ROLLBACK
2020-01-30 21:15:47,857 INFO sqlalchemy.engine.base.Engine Thread-242 : BEGIN (implicit)
2020-01-30 21:15:47,858 INFO sqlalchemy.engine.base.Engine Thread-242 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:15:47,858 INFO sqlalchemy.engine.base.Engine Thread-242 : (1, 1)
2020-01-30 21:15:47,859 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:15:47,859 DEBUG sqlalchemy.engine.base.Engine Thread-242 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:15:47,860 INFO sqlalchemy.engine.base.Engine Thread-242 : ROLLBACK
2020-01-30 21:15:47,891 INFO sqlalchemy.engine.base.Engine Thread-243 : BEGIN (implicit)
2020-01-30 21:15:47,892 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:15:47,892 INFO sqlalchemy.engine.base.Engine Thread-243 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:15:47,893 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:15:47,896 INFO sqlalchemy.engine.base.Engine Thread-243 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:15:47,896 INFO sqlalchemy.engine.base.Engine Thread-243 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:15:47,897 DEBUG sqlalchemy.engine.base.Engine Thread-243 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:15:47,898 INFO sqlalchemy.engine.base.Engine Thread-243 : ROLLBACK
2020-01-30 21:16:13,541 INFO sqlalchemy.engine.base.Engine Thread-245 : BEGIN (implicit)
2020-01-30 21:16:13,543 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:16:13,543 INFO sqlalchemy.engine.base.Engine Thread-245 : ()
2020-01-30 21:16:13,544 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:16:13,545 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:16:13,545 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:16:13,547 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:16:13,547 INFO sqlalchemy.engine.base.Engine Thread-245 : (1, 1)
2020-01-30 21:16:13,548 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:13,548 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:13,561 INFO sqlalchemy.engine.base.Engine Thread-245 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:16:13,561 INFO sqlalchemy.engine.base.Engine Thread-245 : ('philip', 1, 1)
2020-01-30 21:16:13,561 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:13,562 DEBUG sqlalchemy.engine.base.Engine Thread-245 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:13,564 INFO sqlalchemy.engine.base.Engine Thread-245 : ROLLBACK
2020-01-30 21:16:14,108 INFO sqlalchemy.engine.base.Engine Thread-254 : BEGIN (implicit)
2020-01-30 21:16:14,109 INFO sqlalchemy.engine.base.Engine Thread-254 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:16:14,112 INFO sqlalchemy.engine.base.Engine Thread-253 : BEGIN (implicit)
2020-01-30 21:16:14,112 INFO sqlalchemy.engine.base.Engine Thread-254 : (1, 1)
2020-01-30 21:16:14,115 INFO sqlalchemy.engine.base.Engine Thread-253 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:16:14,120 INFO sqlalchemy.engine.base.Engine Thread-253 : (1, 1)
2020-01-30 21:16:14,119 INFO sqlalchemy.engine.base.Engine Thread-252 : BEGIN (implicit)
2020-01-30 21:16:14,121 INFO sqlalchemy.engine.base.Engine Thread-252 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:16:14,120 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:14,122 DEBUG sqlalchemy.engine.base.Engine Thread-254 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:14,121 INFO sqlalchemy.engine.base.Engine Thread-252 : (1, 1)
2020-01-30 21:16:14,122 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:14,116 INFO sqlalchemy.engine.base.Engine Thread-255 : BEGIN (implicit)
2020-01-30 21:16:14,123 INFO sqlalchemy.engine.base.Engine Thread-254 : ROLLBACK
2020-01-30 21:16:14,124 DEBUG sqlalchemy.engine.base.Engine Thread-253 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:14,124 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:14,127 DEBUG sqlalchemy.engine.base.Engine Thread-252 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:14,126 INFO sqlalchemy.engine.base.Engine Thread-253 : ROLLBACK
2020-01-30 21:16:14,125 INFO sqlalchemy.engine.base.Engine Thread-255 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:16:14,129 INFO sqlalchemy.engine.base.Engine Thread-255 : (1, 1)
2020-01-30 21:16:14,129 INFO sqlalchemy.engine.base.Engine Thread-252 : ROLLBACK
2020-01-30 21:16:14,131 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:14,131 DEBUG sqlalchemy.engine.base.Engine Thread-255 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:14,132 INFO sqlalchemy.engine.base.Engine Thread-255 : ROLLBACK
2020-01-30 21:16:14,189 INFO sqlalchemy.engine.base.Engine Thread-256 : BEGIN (implicit)
2020-01-30 21:16:14,190 INFO sqlalchemy.engine.base.Engine Thread-256 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:16:14,190 INFO sqlalchemy.engine.base.Engine Thread-256 : (1, 1)
2020-01-30 21:16:14,191 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:16:14,191 DEBUG sqlalchemy.engine.base.Engine Thread-256 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:16:14,192 INFO sqlalchemy.engine.base.Engine Thread-256 : ROLLBACK
2020-01-30 21:16:14,221 INFO sqlalchemy.engine.base.Engine Thread-257 : BEGIN (implicit)
2020-01-30 21:16:14,222 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:16:14,222 INFO sqlalchemy.engine.base.Engine Thread-257 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:16:14,223 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:16:14,229 INFO sqlalchemy.engine.base.Engine Thread-257 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:16:14,229 INFO sqlalchemy.engine.base.Engine Thread-257 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:16:14,230 DEBUG sqlalchemy.engine.base.Engine Thread-257 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:16:14,230 INFO sqlalchemy.engine.base.Engine Thread-257 : ROLLBACK
2020-01-30 21:22:17,161 INFO sqlalchemy.engine.base.Engine Thread-259 : BEGIN (implicit)
2020-01-30 21:22:17,164 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:22:17,164 INFO sqlalchemy.engine.base.Engine Thread-259 : ()
2020-01-30 21:22:17,167 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:22:17,167 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:22:17,167 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:22:17,169 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:17,169 INFO sqlalchemy.engine.base.Engine Thread-259 : (1, 1)
2020-01-30 21:22:17,170 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,170 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,182 INFO sqlalchemy.engine.base.Engine Thread-259 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:22:17,182 INFO sqlalchemy.engine.base.Engine Thread-259 : ('philip', 1, 1)
2020-01-30 21:22:17,183 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,183 DEBUG sqlalchemy.engine.base.Engine Thread-259 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,185 INFO sqlalchemy.engine.base.Engine Thread-259 : ROLLBACK
2020-01-30 21:22:17,714 INFO sqlalchemy.engine.base.Engine Thread-266 : BEGIN (implicit)
2020-01-30 21:22:17,717 INFO sqlalchemy.engine.base.Engine Thread-269 : BEGIN (implicit)
2020-01-30 21:22:17,721 INFO sqlalchemy.engine.base.Engine Thread-269 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:17,720 INFO sqlalchemy.engine.base.Engine Thread-268 : BEGIN (implicit)
2020-01-30 21:22:17,722 INFO sqlalchemy.engine.base.Engine Thread-268 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:17,721 INFO sqlalchemy.engine.base.Engine Thread-269 : (1, 1)
2020-01-30 21:22:17,723 INFO sqlalchemy.engine.base.Engine Thread-268 : (1, 1)
2020-01-30 21:22:17,718 INFO sqlalchemy.engine.base.Engine Thread-266 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:17,725 INFO sqlalchemy.engine.base.Engine Thread-267 : BEGIN (implicit)
2020-01-30 21:22:17,726 INFO sqlalchemy.engine.base.Engine Thread-266 : (1, 1)
2020-01-30 21:22:17,726 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,728 DEBUG sqlalchemy.engine.base.Engine Thread-268 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,727 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,727 INFO sqlalchemy.engine.base.Engine Thread-267 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:17,728 DEBUG sqlalchemy.engine.base.Engine Thread-269 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,729 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,731 DEBUG sqlalchemy.engine.base.Engine Thread-266 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,730 INFO sqlalchemy.engine.base.Engine Thread-268 : ROLLBACK
2020-01-30 21:22:17,731 INFO sqlalchemy.engine.base.Engine Thread-269 : ROLLBACK
2020-01-30 21:22:17,732 INFO sqlalchemy.engine.base.Engine Thread-266 : ROLLBACK
2020-01-30 21:22:17,729 INFO sqlalchemy.engine.base.Engine Thread-267 : (1, 1)
2020-01-30 21:22:17,734 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,735 DEBUG sqlalchemy.engine.base.Engine Thread-267 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,736 INFO sqlalchemy.engine.base.Engine Thread-267 : ROLLBACK
2020-01-30 21:22:17,796 INFO sqlalchemy.engine.base.Engine Thread-270 : BEGIN (implicit)
2020-01-30 21:22:17,797 INFO sqlalchemy.engine.base.Engine Thread-270 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:17,797 INFO sqlalchemy.engine.base.Engine Thread-270 : (1, 1)
2020-01-30 21:22:17,798 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:17,798 DEBUG sqlalchemy.engine.base.Engine Thread-270 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:17,799 INFO sqlalchemy.engine.base.Engine Thread-270 : ROLLBACK
2020-01-30 21:22:17,823 INFO sqlalchemy.engine.base.Engine Thread-271 : BEGIN (implicit)
2020-01-30 21:22:17,824 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:22:17,824 INFO sqlalchemy.engine.base.Engine Thread-271 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:22:17,825 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:22:17,829 INFO sqlalchemy.engine.base.Engine Thread-271 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:22:17,829 INFO sqlalchemy.engine.base.Engine Thread-271 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:22:17,829 DEBUG sqlalchemy.engine.base.Engine Thread-271 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:22:17,830 INFO sqlalchemy.engine.base.Engine Thread-271 : ROLLBACK
2020-01-30 21:22:41,611 INFO sqlalchemy.engine.base.Engine Thread-273 : BEGIN (implicit)
2020-01-30 21:22:41,613 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:22:41,613 INFO sqlalchemy.engine.base.Engine Thread-273 : ()
2020-01-30 21:22:41,615 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:22:41,615 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:22:41,615 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:22:41,618 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:41,618 INFO sqlalchemy.engine.base.Engine Thread-273 : (1, 1)
2020-01-30 21:22:41,618 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:41,619 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:41,631 INFO sqlalchemy.engine.base.Engine Thread-273 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:22:41,631 INFO sqlalchemy.engine.base.Engine Thread-273 : ('philip', 1, 1)
2020-01-30 21:22:41,632 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:41,632 DEBUG sqlalchemy.engine.base.Engine Thread-273 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:41,634 INFO sqlalchemy.engine.base.Engine Thread-273 : ROLLBACK
2020-01-30 21:22:42,171 INFO sqlalchemy.engine.base.Engine Thread-280 : BEGIN (implicit)
2020-01-30 21:22:42,172 INFO sqlalchemy.engine.base.Engine Thread-280 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:42,172 INFO sqlalchemy.engine.base.Engine Thread-280 : (1, 1)
2020-01-30 21:22:42,174 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:42,176 INFO sqlalchemy.engine.base.Engine Thread-281 : BEGIN (implicit)
2020-01-30 21:22:42,177 DEBUG sqlalchemy.engine.base.Engine Thread-280 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:42,178 INFO sqlalchemy.engine.base.Engine Thread-281 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:42,179 INFO sqlalchemy.engine.base.Engine Thread-281 : (1, 1)
2020-01-30 21:22:42,182 INFO sqlalchemy.engine.base.Engine Thread-282 : BEGIN (implicit)
2020-01-30 21:22:42,183 INFO sqlalchemy.engine.base.Engine Thread-280 : ROLLBACK
2020-01-30 21:22:42,184 INFO sqlalchemy.engine.base.Engine Thread-282 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:42,188 INFO sqlalchemy.engine.base.Engine Thread-282 : (1, 1)
2020-01-30 21:22:42,187 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:42,187 INFO sqlalchemy.engine.base.Engine Thread-283 : BEGIN (implicit)
2020-01-30 21:22:42,188 DEBUG sqlalchemy.engine.base.Engine Thread-281 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:42,190 INFO sqlalchemy.engine.base.Engine Thread-283 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:42,192 INFO sqlalchemy.engine.base.Engine Thread-283 : (1, 1)
2020-01-30 21:22:42,191 INFO sqlalchemy.engine.base.Engine Thread-281 : ROLLBACK
2020-01-30 21:22:42,190 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:42,192 DEBUG sqlalchemy.engine.base.Engine Thread-282 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:42,193 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:42,194 INFO sqlalchemy.engine.base.Engine Thread-282 : ROLLBACK
2020-01-30 21:22:42,194 DEBUG sqlalchemy.engine.base.Engine Thread-283 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:42,196 INFO sqlalchemy.engine.base.Engine Thread-283 : ROLLBACK
2020-01-30 21:22:42,319 INFO sqlalchemy.engine.base.Engine Thread-284 : BEGIN (implicit)
2020-01-30 21:22:42,320 INFO sqlalchemy.engine.base.Engine Thread-284 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:22:42,320 INFO sqlalchemy.engine.base.Engine Thread-284 : (1, 1)
2020-01-30 21:22:42,321 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:22:42,321 DEBUG sqlalchemy.engine.base.Engine Thread-284 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:22:42,322 INFO sqlalchemy.engine.base.Engine Thread-284 : ROLLBACK
2020-01-30 21:22:42,367 INFO sqlalchemy.engine.base.Engine Thread-285 : BEGIN (implicit)
2020-01-30 21:22:42,369 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:22:42,369 INFO sqlalchemy.engine.base.Engine Thread-285 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:22:42,370 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:22:42,374 INFO sqlalchemy.engine.base.Engine Thread-285 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:22:42,374 INFO sqlalchemy.engine.base.Engine Thread-285 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:22:42,374 DEBUG sqlalchemy.engine.base.Engine Thread-285 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:22:42,375 INFO sqlalchemy.engine.base.Engine Thread-285 : ROLLBACK
2020-01-30 21:23:53,270 INFO sqlalchemy.engine.base.Engine Thread-287 : BEGIN (implicit)
2020-01-30 21:23:53,271 INFO sqlalchemy.engine.base.Engine Thread-287 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:23:53,271 INFO sqlalchemy.engine.base.Engine Thread-287 : (1, 1)
2020-01-30 21:23:53,273 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:23:53,273 DEBUG sqlalchemy.engine.base.Engine Thread-287 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:23:53,274 INFO sqlalchemy.engine.base.Engine Thread-287 : ROLLBACK
2020-01-30 21:23:59,211 INFO sqlalchemy.engine.base.Engine Thread-288 : BEGIN (implicit)
2020-01-30 21:23:59,212 INFO sqlalchemy.engine.base.Engine Thread-288 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:23:59,212 INFO sqlalchemy.engine.base.Engine Thread-288 : (1, 1)
2020-01-30 21:23:59,213 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:23:59,213 DEBUG sqlalchemy.engine.base.Engine Thread-288 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:23:59,214 INFO sqlalchemy.engine.base.Engine Thread-288 : ROLLBACK
2020-01-30 21:24:14,386 INFO sqlalchemy.engine.base.Engine Thread-289 : BEGIN (implicit)
2020-01-30 21:24:14,388 INFO sqlalchemy.engine.base.Engine Thread-289 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:24:14,388 INFO sqlalchemy.engine.base.Engine Thread-289 : (1, 1)
2020-01-30 21:24:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:24:14,389 DEBUG sqlalchemy.engine.base.Engine Thread-289 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:24:14,390 INFO sqlalchemy.engine.base.Engine Thread-289 : ROLLBACK
2020-01-30 21:25:40,883 INFO sqlalchemy.engine.base.Engine Thread-290 : BEGIN (implicit)
2020-01-30 21:25:40,887 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:25:40,887 INFO sqlalchemy.engine.base.Engine Thread-290 : ()
2020-01-30 21:25:40,890 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:25:40,891 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:25:40,891 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:25:40,894 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:25:40,894 INFO sqlalchemy.engine.base.Engine Thread-290 : (1, 1)
2020-01-30 21:25:40,895 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:40,895 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:40,909 INFO sqlalchemy.engine.base.Engine Thread-290 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:25:40,909 INFO sqlalchemy.engine.base.Engine Thread-290 : ('philip', 1, 1)
2020-01-30 21:25:40,910 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:40,910 DEBUG sqlalchemy.engine.base.Engine Thread-290 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:40,912 INFO sqlalchemy.engine.base.Engine Thread-290 : ROLLBACK
2020-01-30 21:25:41,488 INFO sqlalchemy.engine.base.Engine Thread-297 : BEGIN (implicit)
2020-01-30 21:25:41,491 INFO sqlalchemy.engine.base.Engine Thread-297 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:25:41,491 INFO sqlalchemy.engine.base.Engine Thread-297 : (1, 1)
2020-01-30 21:25:41,493 INFO sqlalchemy.engine.base.Engine Thread-298 : BEGIN (implicit)
2020-01-30 21:25:41,494 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:41,495 INFO sqlalchemy.engine.base.Engine Thread-298 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:25:41,501 INFO sqlalchemy.engine.base.Engine Thread-298 : (1, 1)
2020-01-30 21:25:41,498 INFO sqlalchemy.engine.base.Engine Thread-299 : BEGIN (implicit)
2020-01-30 21:25:41,502 INFO sqlalchemy.engine.base.Engine Thread-299 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:25:41,501 INFO sqlalchemy.engine.base.Engine Thread-300 : BEGIN (implicit)
2020-01-30 21:25:41,504 INFO sqlalchemy.engine.base.Engine Thread-300 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:25:41,502 INFO sqlalchemy.engine.base.Engine Thread-299 : (1, 1)
2020-01-30 21:25:41,503 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:41,505 DEBUG sqlalchemy.engine.base.Engine Thread-298 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:41,497 DEBUG sqlalchemy.engine.base.Engine Thread-297 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:41,504 INFO sqlalchemy.engine.base.Engine Thread-300 : (1, 1)
2020-01-30 21:25:41,506 INFO sqlalchemy.engine.base.Engine Thread-297 : ROLLBACK
2020-01-30 21:25:41,507 INFO sqlalchemy.engine.base.Engine Thread-298 : ROLLBACK
2020-01-30 21:25:41,508 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:41,508 DEBUG sqlalchemy.engine.base.Engine Thread-299 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:41,509 INFO sqlalchemy.engine.base.Engine Thread-299 : ROLLBACK
2020-01-30 21:25:41,512 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:41,512 DEBUG sqlalchemy.engine.base.Engine Thread-300 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:41,513 INFO sqlalchemy.engine.base.Engine Thread-300 : ROLLBACK
2020-01-30 21:25:41,657 INFO sqlalchemy.engine.base.Engine Thread-301 : BEGIN (implicit)
2020-01-30 21:25:41,658 INFO sqlalchemy.engine.base.Engine Thread-301 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:25:41,658 INFO sqlalchemy.engine.base.Engine Thread-301 : (1, 1)
2020-01-30 21:25:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:25:41,659 DEBUG sqlalchemy.engine.base.Engine Thread-301 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:25:41,660 INFO sqlalchemy.engine.base.Engine Thread-301 : ROLLBACK
2020-01-30 21:25:41,685 INFO sqlalchemy.engine.base.Engine Thread-302 : BEGIN (implicit)
2020-01-30 21:25:41,686 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:25:41,686 INFO sqlalchemy.engine.base.Engine Thread-302 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:25:41,687 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:25:41,691 INFO sqlalchemy.engine.base.Engine Thread-302 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:25:41,691 INFO sqlalchemy.engine.base.Engine Thread-302 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:25:41,692 DEBUG sqlalchemy.engine.base.Engine Thread-302 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:25:41,693 INFO sqlalchemy.engine.base.Engine Thread-302 : ROLLBACK
2020-01-30 21:26:29,164 INFO sqlalchemy.engine.base.Engine Thread-304 : BEGIN (implicit)
2020-01-30 21:26:29,166 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:26:29,166 INFO sqlalchemy.engine.base.Engine Thread-304 : ()
2020-01-30 21:26:29,167 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:26:29,168 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:26:29,168 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:26:29,170 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:26:29,170 INFO sqlalchemy.engine.base.Engine Thread-304 : (1, 1)
2020-01-30 21:26:29,171 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,171 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,182 INFO sqlalchemy.engine.base.Engine Thread-304 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:26:29,183 INFO sqlalchemy.engine.base.Engine Thread-304 : ('philip', 1, 1)
2020-01-30 21:26:29,183 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,184 DEBUG sqlalchemy.engine.base.Engine Thread-304 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,185 INFO sqlalchemy.engine.base.Engine Thread-304 : ROLLBACK
2020-01-30 21:26:29,819 INFO sqlalchemy.engine.base.Engine Thread-311 : BEGIN (implicit)
2020-01-30 21:26:29,822 INFO sqlalchemy.engine.base.Engine Thread-312 : BEGIN (implicit)
2020-01-30 21:26:29,824 INFO sqlalchemy.engine.base.Engine Thread-311 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:26:29,826 INFO sqlalchemy.engine.base.Engine Thread-313 : BEGIN (implicit)
2020-01-30 21:26:29,831 INFO sqlalchemy.engine.base.Engine Thread-313 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:26:29,830 INFO sqlalchemy.engine.base.Engine Thread-314 : BEGIN (implicit)
2020-01-30 21:26:29,832 INFO sqlalchemy.engine.base.Engine Thread-314 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:26:29,831 INFO sqlalchemy.engine.base.Engine Thread-313 : (1, 1)
2020-01-30 21:26:29,830 INFO sqlalchemy.engine.base.Engine Thread-311 : (1, 1)
2020-01-30 21:26:29,833 INFO sqlalchemy.engine.base.Engine Thread-314 : (1, 1)
2020-01-30 21:26:29,829 INFO sqlalchemy.engine.base.Engine Thread-312 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:26:29,834 INFO sqlalchemy.engine.base.Engine Thread-312 : (1, 1)
2020-01-30 21:26:29,834 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,833 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,835 DEBUG sqlalchemy.engine.base.Engine Thread-311 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,836 INFO sqlalchemy.engine.base.Engine Thread-311 : ROLLBACK
2020-01-30 21:26:29,835 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,837 DEBUG sqlalchemy.engine.base.Engine Thread-312 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,834 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,835 DEBUG sqlalchemy.engine.base.Engine Thread-313 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,839 INFO sqlalchemy.engine.base.Engine Thread-313 : ROLLBACK
2020-01-30 21:26:29,838 DEBUG sqlalchemy.engine.base.Engine Thread-314 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,838 INFO sqlalchemy.engine.base.Engine Thread-312 : ROLLBACK
2020-01-30 21:26:29,841 INFO sqlalchemy.engine.base.Engine Thread-314 : ROLLBACK
2020-01-30 21:26:29,918 INFO sqlalchemy.engine.base.Engine Thread-315 : BEGIN (implicit)
2020-01-30 21:26:29,919 INFO sqlalchemy.engine.base.Engine Thread-315 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:26:29,919 INFO sqlalchemy.engine.base.Engine Thread-315 : (1, 1)
2020-01-30 21:26:29,920 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:26:29,920 DEBUG sqlalchemy.engine.base.Engine Thread-315 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:26:29,922 INFO sqlalchemy.engine.base.Engine Thread-315 : ROLLBACK
2020-01-30 21:26:29,952 INFO sqlalchemy.engine.base.Engine Thread-316 : BEGIN (implicit)
2020-01-30 21:26:29,954 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:26:29,954 INFO sqlalchemy.engine.base.Engine Thread-316 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:26:29,955 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:26:29,959 INFO sqlalchemy.engine.base.Engine Thread-316 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:26:29,959 INFO sqlalchemy.engine.base.Engine Thread-316 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:26:29,960 DEBUG sqlalchemy.engine.base.Engine Thread-316 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:26:29,961 INFO sqlalchemy.engine.base.Engine Thread-316 : ROLLBACK
2020-01-30 21:27:14,414 INFO sqlalchemy.engine.base.Engine Thread-318 : BEGIN (implicit)
2020-01-30 21:27:14,416 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:27:14,416 INFO sqlalchemy.engine.base.Engine Thread-318 : ()
2020-01-30 21:27:14,418 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:27:14,419 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:27:14,419 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:27:14,421 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:27:14,421 INFO sqlalchemy.engine.base.Engine Thread-318 : (1, 1)
2020-01-30 21:27:14,422 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:14,422 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:14,433 INFO sqlalchemy.engine.base.Engine Thread-318 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:27:14,433 INFO sqlalchemy.engine.base.Engine Thread-318 : ('philip', 1, 1)
2020-01-30 21:27:14,433 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:14,434 DEBUG sqlalchemy.engine.base.Engine Thread-318 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:14,435 INFO sqlalchemy.engine.base.Engine Thread-318 : ROLLBACK
2020-01-30 21:27:15,004 INFO sqlalchemy.engine.base.Engine Thread-325 : BEGIN (implicit)
2020-01-30 21:27:15,005 INFO sqlalchemy.engine.base.Engine Thread-326 : BEGIN (implicit)
2020-01-30 21:27:15,007 INFO sqlalchemy.engine.base.Engine Thread-325 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:27:15,010 INFO sqlalchemy.engine.base.Engine Thread-326 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:27:15,010 INFO sqlalchemy.engine.base.Engine Thread-325 : (1, 1)
2020-01-30 21:27:15,013 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:15,012 INFO sqlalchemy.engine.base.Engine Thread-327 : BEGIN (implicit)
2020-01-30 21:27:15,014 INFO sqlalchemy.engine.base.Engine Thread-327 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:27:15,013 DEBUG sqlalchemy.engine.base.Engine Thread-325 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:15,014 INFO sqlalchemy.engine.base.Engine Thread-327 : (1, 1)
2020-01-30 21:27:15,010 INFO sqlalchemy.engine.base.Engine Thread-326 : (1, 1)
2020-01-30 21:27:15,016 INFO sqlalchemy.engine.base.Engine Thread-328 : BEGIN (implicit)
2020-01-30 21:27:15,020 INFO sqlalchemy.engine.base.Engine Thread-328 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:27:15,019 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:15,019 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:15,018 INFO sqlalchemy.engine.base.Engine Thread-325 : ROLLBACK
2020-01-30 21:27:15,020 INFO sqlalchemy.engine.base.Engine Thread-328 : (1, 1)
2020-01-30 21:27:15,021 DEBUG sqlalchemy.engine.base.Engine Thread-327 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:15,021 DEBUG sqlalchemy.engine.base.Engine Thread-326 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:15,023 INFO sqlalchemy.engine.base.Engine Thread-327 : ROLLBACK
2020-01-30 21:27:15,023 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:15,026 DEBUG sqlalchemy.engine.base.Engine Thread-328 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:15,027 INFO sqlalchemy.engine.base.Engine Thread-328 : ROLLBACK
2020-01-30 21:27:15,024 INFO sqlalchemy.engine.base.Engine Thread-326 : ROLLBACK
2020-01-30 21:27:15,101 INFO sqlalchemy.engine.base.Engine Thread-329 : BEGIN (implicit)
2020-01-30 21:27:15,102 INFO sqlalchemy.engine.base.Engine Thread-329 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:27:15,102 INFO sqlalchemy.engine.base.Engine Thread-329 : (1, 1)
2020-01-30 21:27:15,103 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:27:15,103 DEBUG sqlalchemy.engine.base.Engine Thread-329 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:27:15,104 INFO sqlalchemy.engine.base.Engine Thread-329 : ROLLBACK
2020-01-30 21:27:15,136 INFO sqlalchemy.engine.base.Engine Thread-330 : BEGIN (implicit)
2020-01-30 21:27:15,137 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:27:15,137 INFO sqlalchemy.engine.base.Engine Thread-330 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:27:15,138 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:27:15,144 INFO sqlalchemy.engine.base.Engine Thread-330 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:27:15,144 INFO sqlalchemy.engine.base.Engine Thread-330 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:27:15,144 DEBUG sqlalchemy.engine.base.Engine Thread-330 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:27:15,145 INFO sqlalchemy.engine.base.Engine Thread-330 : ROLLBACK
2020-01-30 21:28:33,476 INFO sqlalchemy.engine.base.Engine Thread-332 : BEGIN (implicit)
2020-01-30 21:28:33,478 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT complexes.id AS complexes_id, complexes.complex_name AS complexes_complex_name, complexes.complex_manager AS complexes_complex_manager, complexes.complex_fw_inner_1 AS complexes_complex_fw_inner_1, complexes.complex_fw_inner_2 AS complexes_complex_fw_inner_2, complexes.complex_fw_outer_1 AS complexes_complex_fw_outer_1, complexes.complex_fw_outer_2 AS complexes_complex_fw_outer_2, complexes.complex_fw_location_1 AS complexes_complex_fw_location_1, complexes.complex_fw_location_2 AS complexes_complex_fw_location_2, complexes.complex_fw_type AS complexes_complex_fw_type, complexes.complex_serial AS complexes_complex_serial, complexes.complex_license AS complexes_complex_license, complexes.complex_push_start AS complexes_complex_push_start, complexes.complex_push_end AS complexes_complex_push_end, complexes.complex_push_days AS complexes_complex_push_days, complexes.complex_category AS complexes_complex_category, complexes.complex_hardware AS complexes_complex_hardware, complexes.complex_fw_inner_name_1 AS complexes_complex_fw_inner_name_1, complexes.complex_fw_inner_name_2 AS complexes_complex_fw_inner_name_2, complexes.complex_location_1 AS complexes_complex_location_1, complexes.complex_fw_outer_name_1 AS complexes_complex_fw_outer_name_1, complexes.complex_fw_outer_name_2 AS complexes_complex_fw_outer_name_2, complexes.complex_location_2 AS complexes_complex_location_2, complexes.complex_location_all AS complexes_complex_location_all, complexes.complex_area AS complexes_complex_area, complexes.complex_fw_info1 AS complexes_complex_fw_info1, complexes.complex_fw_info2 AS complexes_complex_fw_info2, complexes.complex_fw_inner_info1 AS complexes_complex_fw_inner_info1, complexes.complex_fw_inner_info2 AS complexes_complex_fw_inner_info2, complexes.complex_fw_outer_info1 AS complexes_complex_fw_outer_info1, complexes.complex_fw_outer_info2 AS complexes_complex_fw_outer_info2, complexes.complex_type AS complexes_complex_type, complexes.complex_info_1 AS complexes_complex_info_1, complexes.complex_country AS complexes_complex_country, complexes.complex_restricted AS complexes_complex_restricted, complexes.complex_restrict_start AS complexes_complex_restrict_start, complexes.complex_restrict_end AS complexes_complex_restrict_end, complexes.complex_allow_slot_day AS complexes_complex_allow_slot_day, complexes.complex_allow_slot_start AS complexes_complex_allow_slot_start, complexes.complex_allow_slot_end AS complexes_complex_allow_slot_end, complexes.complex_push_day_extra AS complexes_complex_push_day_extra, complexes.complex_change_info AS complexes_complex_change_info, complexes.complex_environment AS complexes_complex_environment, complexes.complex_updated AS complexes_complex_updated, complexes.complex_active AS complexes_complex_active 
FROM complexes ORDER BY complexes.complex_name
2020-01-30 21:28:33,478 INFO sqlalchemy.engine.base.Engine Thread-332 : ()
2020-01-30 21:28:33,479 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('complexes_id', 'complexes_complex_name', 'complexes_complex_manager', 'complexes_complex_fw_inner_1', 'complexes_complex_fw_inner_2', 'complexes_complex_fw_outer_1', 'complexes_complex_fw_outer_2', 'complexes_complex_fw_location_1', 'complexes_complex_fw_location_2', 'complexes_complex_fw_type', 'complexes_complex_serial', 'complexes_complex_license', 'complexes_complex_push_start', 'complexes_complex_push_end', 'complexes_complex_push_days', 'complexes_complex_category', 'complexes_complex_hardware', 'complexes_complex_fw_inner_name_1', 'complexes_complex_fw_inner_name_2', 'complexes_complex_location_1', 'complexes_complex_fw_outer_name_1', 'complexes_complex_fw_outer_name_2', 'complexes_complex_location_2', 'complexes_complex_location_all', 'complexes_complex_area', 'complexes_complex_fw_info1', 'complexes_complex_fw_info2', 'complexes_complex_fw_inner_info1', 'complexes_complex_fw_inner_info2', 'complexes_complex_fw_outer_info1', 'complexes_complex_fw_outer_info2', 'complexes_complex_type', 'complexes_complex_info_1', 'complexes_complex_country', 'complexes_complex_restricted', 'complexes_complex_restrict_start', 'complexes_complex_restrict_end', 'complexes_complex_allow_slot_day', 'complexes_complex_allow_slot_start', 'complexes_complex_allow_slot_end', 'complexes_complex_push_day_extra', 'complexes_complex_change_info', 'complexes_complex_environment', 'complexes_complex_updated', 'complexes_complex_active')
2020-01-30 21:28:33,480 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (1, 'Made Up CheckPoint', 87, 'asd', 'asd', 'asd', 'asd', 'asd', 'asd', 91, 'asd', 'asd', '02:00', '04:00', 'NYNNNNN', 'asd', 'asd', '', '', '', '', '', '', '', 69, '', '', '', '', '', '', 108, '', 69, 107, 0, 0, '0', '02:00', '04:00', 'NNNNNYY', '', 95, datetime.datetime(2020, 1, 27, 9, 1), 67)
2020-01-30 21:28:33,480 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (2, 'Made Up Fortigate', 86, 'test', 'test', 'test', 'test', 'test', 'test', 91, 'test', 'test', '02:00', '04:00', 'NNNNNYY', 'test', 'test', '', '', '', '', '', '', '', 61, '', '', '', '', '', '', 103, '', 61, 107, 0, 0, '0', '04:00', '06:00', 'NYNNNNN', '', 94, datetime.datetime(2020, 1, 27, 9, 1, 10), 67)
2020-01-30 21:28:33,482 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:28:33,482 INFO sqlalchemy.engine.base.Engine Thread-332 : (1, 1)
2020-01-30 21:28:33,483 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:33,483 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:33,495 INFO sqlalchemy.engine.base.Engine Thread-332 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users INNER JOIN roles ON users.`role` = roles.id 
WHERE users.login_id = %s AND roles.role_admin = %s 
 LIMIT %s
2020-01-30 21:28:33,495 INFO sqlalchemy.engine.base.Engine Thread-332 : ('philip', 1, 1)
2020-01-30 21:28:33,496 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:33,496 DEBUG sqlalchemy.engine.base.Engine Thread-332 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:33,498 INFO sqlalchemy.engine.base.Engine Thread-332 : ROLLBACK
2020-01-30 21:28:33,981 INFO sqlalchemy.engine.base.Engine Thread-339 : BEGIN (implicit)
2020-01-30 21:28:34,016 INFO sqlalchemy.engine.base.Engine Thread-339 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:28:34,018 INFO sqlalchemy.engine.base.Engine Thread-342 : BEGIN (implicit)
2020-01-30 21:28:34,020 INFO sqlalchemy.engine.base.Engine Thread-341 : BEGIN (implicit)
2020-01-30 21:28:34,024 INFO sqlalchemy.engine.base.Engine Thread-341 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:28:34,024 INFO sqlalchemy.engine.base.Engine Thread-341 : (1, 1)
2020-01-30 21:28:34,023 INFO sqlalchemy.engine.base.Engine Thread-342 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:28:34,024 INFO sqlalchemy.engine.base.Engine Thread-342 : (1, 1)
2020-01-30 21:28:34,022 INFO sqlalchemy.engine.base.Engine Thread-340 : BEGIN (implicit)
2020-01-30 21:28:34,020 INFO sqlalchemy.engine.base.Engine Thread-339 : (1, 1)
2020-01-30 21:28:34,025 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:34,028 DEBUG sqlalchemy.engine.base.Engine Thread-341 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:34,028 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:34,027 INFO sqlalchemy.engine.base.Engine Thread-340 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:28:34,029 DEBUG sqlalchemy.engine.base.Engine Thread-342 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:34,033 INFO sqlalchemy.engine.base.Engine Thread-342 : ROLLBACK
2020-01-30 21:28:34,030 INFO sqlalchemy.engine.base.Engine Thread-340 : (1, 1)
2020-01-30 21:28:34,031 INFO sqlalchemy.engine.base.Engine Thread-341 : ROLLBACK
2020-01-30 21:28:34,029 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:34,034 DEBUG sqlalchemy.engine.base.Engine Thread-339 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:34,034 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:34,036 DEBUG sqlalchemy.engine.base.Engine Thread-340 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:34,036 INFO sqlalchemy.engine.base.Engine Thread-340 : ROLLBACK
2020-01-30 21:28:34,035 INFO sqlalchemy.engine.base.Engine Thread-339 : ROLLBACK
2020-01-30 21:28:34,093 INFO sqlalchemy.engine.base.Engine Thread-343 : BEGIN (implicit)
2020-01-30 21:28:34,094 INFO sqlalchemy.engine.base.Engine Thread-343 : SELECT users.id AS users_id, users.login_id AS users_login_id, users.forename AS users_forename, users.surname AS users_surname, users.comment AS users_comment, users._password AS users__password, users.email AS users_email, users.`role` AS users_role, users.vendor AS users_vendor, users.created_date AS users_created_date, users.last_login AS users_last_login, users.last_modified AS users_last_modified, users.modified_by AS users_modified_by, users.enabled AS users_enabled 
FROM users 
WHERE users.id = %s 
 LIMIT %s
2020-01-30 21:28:34,094 INFO sqlalchemy.engine.base.Engine Thread-343 : (1, 1)
2020-01-30 21:28:34,095 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Col ('users_id', 'users_login_id', 'users_forename', 'users_surname', 'users_comment', 'users__password', 'users_email', 'users_role', 'users_vendor', 'users_created_date', 'users_last_login', 'users_last_modified', 'users_modified_by', 'users_enabled')
2020-01-30 21:28:34,095 DEBUG sqlalchemy.engine.base.Engine Thread-343 : Row (1, 'philip', 'Philip', 'Troon', 'User account for Philip Troon', '$2b$12$pyyaZQRkxyVdz8SXVmrRCepr6UXs38rin1uk/Nqtqd9Q3WUuojF0i', 'philiptroon@gmail.com', 2, 70, datetime.datetime(2019, 8, 28, 11, 46, 8), datetime.datetime(2020, 1, 6, 15, 34, 8), datetime.datetime(2020, 1, 30, 8, 56, 35), 'philip', 0)
2020-01-30 21:28:34,096 INFO sqlalchemy.engine.base.Engine Thread-343 : ROLLBACK
2020-01-30 21:28:34,150 INFO sqlalchemy.engine.base.Engine Thread-344 : BEGIN (implicit)
2020-01-30 21:28:34,151 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:28:34,151 INFO sqlalchemy.engine.base.Engine Thread-344 : ('Salmon', 'white', 'Y', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:28:34,152 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:28:34,156 INFO sqlalchemy.engine.base.Engine Thread-344 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:28:34,157 INFO sqlalchemy.engine.base.Engine Thread-344 : ('LightBlue', 'black', datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0), datetime.datetime(2019, 12, 30, 0, 0), datetime.datetime(2020, 2, 10, 0, 0))
2020-01-30 21:28:34,157 DEBUG sqlalchemy.engine.base.Engine Thread-344 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:28:34,158 INFO sqlalchemy.engine.base.Engine Thread-344 : ROLLBACK
2020-01-30 21:28:38,046 INFO sqlalchemy.engine.base.Engine Thread-346 : BEGIN (implicit)
2020-01-30 21:28:38,047 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, %s AS locked 
FROM datesofinterest AS datesofinterest_1 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:28:38,048 INFO sqlalchemy.engine.base.Engine Thread-346 : ('Salmon', 'white', 'Y', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 21:28:38,049 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:28:38,049 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'Salmon', 'white', 'Y')
2020-01-30 21:28:38,053 INFO sqlalchemy.engine.base.Engine Thread-346 : SELECT datesofinterest_1.doi_start_dt AS start, datesofinterest_1.doi_end_dt AS end, datesofinterest_1.doi_name AS title, datesofinterest_1.doi_comment AS description, %s AS `backgroundColor`, %s AS `textColor`, parameters_1.param_name AS locked 
FROM datesofinterest AS datesofinterest_1 INNER JOIN parameters AS parameters_1 ON datesofinterest_1.doi_locked = parameters_1.id 
WHERE datesofinterest_1.doi_start_dt BETWEEN %s AND %s OR datesofinterest_1.doi_end_dt BETWEEN %s AND %s OR datesofinterest_1.doi_start_dt < %s AND datesofinterest_1.doi_end_dt > %s
2020-01-30 21:28:38,053 INFO sqlalchemy.engine.base.Engine Thread-346 : ('LightBlue', 'black', datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0), datetime.datetime(2020, 1, 27, 0, 0), datetime.datetime(2020, 3, 9, 0, 0))
2020-01-30 21:28:38,054 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Col ('start', 'end', 'title', 'description', 'backgroundColor', 'textColor', 'locked')
2020-01-30 21:28:38,054 DEBUG sqlalchemy.engine.base.Engine Thread-346 : Row (datetime.datetime(2020, 2, 22, 0, 0), datetime.datetime(2020, 2, 28, 23, 45), 'Change Freeze (Critical)', 'Change Freeze (Critical)', 'LightBlue', 'black', 'Yes')
2020-01-30 21:28:38,055 INFO sqlalchemy.engine.base.Engine Thread-346 : ROLLBACK
